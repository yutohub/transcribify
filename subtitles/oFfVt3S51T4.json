[
  {
    "start": 160,
    "end": 9930,
    "text": "以下は、カーソル・チームの創設メンバーであるマイケル・トゥルル、スウェイリー、アシフ、アルビッド・ルンマルク、アマン・サンガーとの会話である。"
  },
  {
    "start": 10270,
    "end": 17734,
    "text": "Cursorは、対コードをベースとしたコードエディタで、AIアシストコーディングのための多くの強力な機能を追加している。"
  },
  {
    "start": 17902,
    "end": 23370,
    "text": "プログラミングとAIのコミュニティの注目と興奮を集めている。"
  },
  {
    "start": 23790,
    "end": 30010,
    "text": "これは、プログラミングにおけるAIの役割を深く掘り下げる絶好の機会だと思った。"
  },
  {
    "start": 30340,
    "end": 36492,
    "text": "これは、ひとつのコード・エディターについてだけではない、超技術的な話だ。"
  },
  {
    "start": 36636,
    "end": 46600,
    "text": "それはプログラミングの未来についてであり、一般的には、複雑で強力なシステムの設計とエンジニアリングにおける人間のAIコラボレーションの未来についてである。"
  },
  {
    "start": 46940,
    "end": 48660,
    "text": "レックス・フリードマンのポッドキャストです。"
  },
  {
    "start": 48740,
    "end": 51948,
    "text": "サポートするには、説明文にあるスポンサーをチェックしてください。"
  },
  {
    "start": 52084,
    "end": 58150,
    "text": "さて、親愛なる友人たちよ、マイケル・スウェイル、アルヴィッド、そしてアマンだ。"
  },
  {
    "start": 58970,
    "end": 59954,
    "text": "よし、これはすごい。"
  },
  {
    "start": 60002,
    "end": 64786,
    "text": "カーソルチームからマイケル、アマン、スウェイル、アルヴィッドが来ている。"
  },
  {
    "start": 64898,
    "end": 67114,
    "text": "まずは、ばかげた大きな質問だ。"
  },
  {
    "start": 67282,
    "end": 70018,
    "text": "コード・エディターに何の意味があるのか？"
  },
  {
    "start": 70154,
    "end": 73946,
    "text": "コードエディターは、主にソフトウェアを構築する場所である。"
  },
  {
    "start": 74138,
    "end": 80818,
    "text": "今日では、あるいは長い間、正式なプログラミング言語をテキストで編集する場所という意味だった。"
  },
  {
    "start": 80994,
    "end": 85806,
    "text": "プログラマーでない人にとって、コードエディターとはワープロをパワーアップさせたようなものだ。"
  },
  {
    "start": 85938,
    "end": 91330,
    "text": "プログラマーにとって、コードには多くの構造がある。"
  },
  {
    "start": 92910,
    "end": 102130,
    "text": "ワープロ、コード・エディターは、文章を編集するスペースでワープロができなかったことをたくさんやってくれる。"
  },
  {
    "start": 103190,
    "end": 113126,
    "text": "それは、コード内の実際のトークンを視覚的に区別して素早くスキャンできるようにすることから、ハイパーリンクを使ってインターネットをナビゲートするようにコードベースをナビゲートできるようにすることまで、あらゆることだ。"
  },
  {
    "start": 113158,
    "end": 120490,
    "text": "初歩的なバグをキャッチするためのエラーチェックに使っているものを定義することになる。"
  },
  {
    "start": 122510,
    "end": 126246,
    "text": "従来、コードエディターとはそういうものだった。"
  },
  {
    "start": 126438,
    "end": 136330,
    "text": "コード・エディターとは何かということは、今後10年の間に大きく変わっていくだろう。"
  },
  {
    "start": 136870,
    "end": 139326,
    "text": "コード化されたエディターも楽しいものだと思う。"
  },
  {
    "start": 139518,
    "end": 141286,
    "text": "そう、それはとても重要なことだ。"
  },
  {
    "start": 141358,
    "end": 142126,
    "text": "それはとても重要なことだ。"
  },
  {
    "start": 142198,
    "end": 147306,
    "text": "私たちが何を作るかを決める上で、実は過小評価されている側面がある。"
  },
  {
    "start": 147418,
    "end": 156790,
    "text": "私たちが作るものの多くがそうであるように、私たちはそれを試し、実験し、そして実際には面白くないから捨ててしまう。"
  },
  {
    "start": 157090,
    "end": 160122,
    "text": "だから、楽しさの大部分は速さみたいなものなんだ。"
  },
  {
    "start": 160306,
    "end": 161362,
    "text": "多くの場合ね。"
  },
  {
    "start": 161506,
    "end": 162546,
    "text": "速いことは楽しい。"
  },
  {
    "start": 162698,
    "end": 163034,
    "text": "そうだね。"
  },
  {
    "start": 163082,
    "end": 163830,
    "text": "最速だ。"
  },
  {
    "start": 165370,
    "end": 165818,
    "text": "そうだね。"
  },
  {
    "start": 165874,
    "end": 167150,
    "text": "これはTシャツにすべきだね。"
  },
  {
    "start": 168050,
    "end": 182844,
    "text": "他の分野では、リソースや能力、あるいは大人数を集める能力によって制限されるかもしれない。"
  },
  {
    "start": 182892,
    "end": 189480,
    "text": "コーディングは、自分とコンピューターだけで、本当にクールなものを素早く作ることができる素晴らしいものだ。"
  },
  {
    "start": 189900,
    "end": 196480,
    "text": "知らない人のために説明しておくと、カーソルは対コードをフォークした超クールな新しいエディターだ。"
  },
  {
    "start": 196990,
    "end": 202462,
    "text": "あなた自身の編集者の旅について説明してもらえると興味深い。"
  },
  {
    "start": 202566,
    "end": 203126,
    "text": "どうだった？"
  },
  {
    "start": 203158,
    "end": 207730,
    "text": "皆さんはコパイロットを使った対コードの大ファンだったと思う。"
  },
  {
    "start": 208070,
    "end": 213094,
    "text": "どのようにして対コードにたどり着き、それがカーソルとの旅につながったのですか？"
  },
  {
    "start": 213182,
    "end": 219782,
    "text": "ああ、だから僕らの多くは、いや、僕ら全員が元々はVimユーザーだったと思う。"
  },
  {
    "start": 219926,
    "end": 220262,
    "text": "純粋だ。"
  },
  {
    "start": 220286,
    "end": 220686,
    "text": "純粋なヴィム。"
  },
  {
    "start": 220718,
    "end": 223730,
    "text": "純粋なvim、そう、neo vimじゃなくて、純粋なvimをターミナルで使うんだ。"
  },
  {
    "start": 224070,
    "end": 235214,
    "text": "少なくとも私自身は、コパイロットが発売された頃だったので、2021年にぜひ試してみたかった。"
  },
  {
    "start": 235302,
    "end": 250508,
    "text": "唯一のプラットフォームであり、唯一のコード・エディターであったVimを使うのは本当に楽しかったが、Visual Codeでのコパイロットの経験は、乗り換えを納得させるには十分すぎるものだった。"
  },
  {
    "start": 250694,
    "end": 254456,
    "text": "カーソルに取り組むまでは、それがデフォルトだった。"
  },
  {
    "start": 254608,
    "end": 257088,
    "text": "副操縦士が何をする人なのかを説明する必要があるかもしれない。"
  },
  {
    "start": 257224,
    "end": 259460,
    "text": "オートコンプリートのようなものだ。"
  },
  {
    "start": 259840,
    "end": 265540,
    "text": "書き始めると、1行、2行、3行と、どのように完成させるかを提案してくれる。"
  },
  {
    "start": 265920,
    "end": 273180,
    "text": "親しい間柄で、友達があなたの文章を補ってくれるような、そんな楽しい経験がある。"
  },
  {
    "start": 273880,
    "end": 276914,
    "text": "うまくいくと、親密な感じがするんだ。"
  },
  {
    "start": 277112,
    "end": 283210,
    "text": "親密というより、もっといい言葉があるだろうけど、なんていうか、クールな感じがするんだ。"
  },
  {
    "start": 284230,
    "end": 287982,
    "text": "しかし、それが得られなかったときの不快感は格別だ。"
  },
  {
    "start": 288166,
    "end": 290534,
    "text": "そういう摩擦がある。"
  },
  {
    "start": 290582,
    "end": 294982,
    "text": "多くの人々にとって、その感覚はそうでない感覚を凌駕している。"
  },
  {
    "start": 295086,
    "end": 300846,
    "text": "実際、コパラの起き上がりの過小評価されている点のひとつは、それが間違っていても、ちょっと腹が立つということだと思う。"
  },
  {
    "start": 300878,
    "end": 307946,
    "text": "別の文字を入力するだけだから、そんなに悪くはないよ。"
  },
  {
    "start": 308018,
    "end": 309466,
    "text": "間違っていても、そんなに悪くない。"
  },
  {
    "start": 309498,
    "end": 311706,
    "text": "ああ、反復して修正すればいいんだ。"
  },
  {
    "start": 311778,
    "end": 317674,
    "text": "つまり、僕にとってコパイロットの過小評価されているもうひとつの部分は、最初の本物のAI製品だったということだ。"
  },
  {
    "start": 317802,
    "end": 321298,
    "text": "最初の言語モデルの消費者製品のようなものだ。"
  },
  {
    "start": 321394,
    "end": 328954,
    "text": "コパイロットはLLMにとって最初のキラーアプリのようなもので、ベータ版は2021年にリリースされた。"
  },
  {
    "start": 329042,
    "end": 329560,
    "text": "そうだね。"
  },
  {
    "start": 329690,
    "end": 334012,
    "text": "では、カーソルの起源は？"
  },
  {
    "start": 334156,
    "end": 338716,
    "text": "そして2020年頃、OpenAIからスケーリングロスの論文が発表された。"
  },
  {
    "start": 338908,
    "end": 349460,
    "text": "たとえこれ以上のアイデアがなかったとしても、より多くの計算機とデータがあれば、より良いモデルを作ることができる。"
  },
  {
    "start": 349620,
    "end": 355084,
    "text": "ちなみに、スケーリング法の話題で3～4時間は話すことになるだろう。"
  },
  {
    "start": 355132,
    "end": 364094,
    "text": "そうだね。ただ、要約すると、モデルサイズやデータサイズについては、大きい方が良いという論文や一連の論文、一連のアイデアなんだ。"
  },
  {
    "start": 364262,
    "end": 368542,
    "text": "機械学習の分野では、より大きく、より良く、しかし予想通りである。"
  },
  {
    "start": 368646,
    "end": 370782,
    "text": "オーケー、それはまた別の話題だ。"
  },
  {
    "start": 370966,
    "end": 371310,
    "text": "そうだね。"
  },
  {
    "start": 371350,
    "end": 377086,
    "text": "その頃、僕らの何人かは、これはどうなるんだろう？"
  },
  {
    "start": 377238,
    "end": 384570,
    "text": "ナレッジワーカーと呼ばれるさまざまな分野の人たちが、このテクノロジーによってどのように良くなっていくのか。"
  },
  {
    "start": 385030,
    "end": 392736,
    "text": "そして、その論文で予測された理論的な利益が、本当に具体的に感じられるようになった瞬間がいくつかあったと思う。"
  },
  {
    "start": 392768,
    "end": 404496,
    "text": "AIの分野で有用な仕事をしたいのであれば、博士号を取得する必要はない。"
  },
  {
    "start": 404648,
    "end": 410380,
    "text": "最初の瞬間は、すでに少し話したと思うが、コパイロットの初期を使ったプレーが素晴らしく、魔法のようだった。"
  },
  {
    "start": 411720,
    "end": 417312,
    "text": "GPT4へのアーリーアクセスが実現したのは、すべてがかみ合った次の大きな瞬間だったと思う。"
  },
  {
    "start": 417456,
    "end": 425296,
    "text": "2022年末は、私たちがそのモデルをいじっていた時期で、能力のステップアップは非常に大きく感じられた。"
  },
  {
    "start": 425488,
    "end": 428752,
    "text": "それ以前は、いくつかの異なるプロジェクトに取り組んでいた。"
  },
  {
    "start": 428776,
    "end": 440416,
    "text": "コパイロットのため、オズのスケーリングのため、そして以前から技術に興味があったため、プログラマー向けのツールをいじくりまわしていたが、それは非常に特殊なものだった。"
  },
  {
    "start": 440488,
    "end": 448994,
    "text": "私たちは、Jupyterノートブックで作業しなければならない金融の専門家のためのツールを作ったり、これらのモデルで静的分析を行うことはできないか？"
  },
  {
    "start": 449162,
    "end": 468034,
    "text": "そしてジュピター4でのステップアップは、私たちが以前から予想していた理論的な利益を具体化するもので、その時点ですぐにでも多くのものを構築できると感じた。"
  },
  {
    "start": 468122,
    "end": 468746,
    "text": "そうなるはずだった。"
  },
  {
    "start": 468778,
    "end": 470690,
    "text": "すべてのプログラミングは、これらのモデルを通じて行われる予定だった。"
  },
  {
    "start": 470810,
    "end": 475442,
    "text": "それは、異なるタイプのプログラミング環境、異なるタイプのプログラミングを要求しているように感じた。"
  },
  {
    "start": 475586,
    "end": 479674,
    "text": "だから私たちは、そのような大きなビジョンを構築するために出発した。"
  },
  {
    "start": 479802,
    "end": 481658,
    "text": "はっきりと覚えているものがある。"
  },
  {
    "start": 481754,
    "end": 489978,
    "text": "私のルームメイトはIMOの金賞受賞者で、アメリカにはパットナムというコンクールがある。"
  },
  {
    "start": 490034,
    "end": 490898,
    "text": "それは"
  },
  {
    "start": 490914,
    "end": 493978,
    "text": "この数学コンクールは格別に優れている。"
  },
  {
    "start": 494114,
    "end": 511098,
    "text": "シャンタンとアンマンは、2022年の6月のことだったと記憶しているが、2024年の6月か7月に、モデルを使ってIMOで金メダルを獲得するかどうかを賭けていた。"
  },
  {
    "start": 511194,
    "end": 513338,
    "text": "IMOは国際数学オリンピック選手。"
  },
  {
    "start": 513474,
    "end": 513834,
    "text": "そうだね。"
  },
  {
    "start": 513882,
    "end": 515506,
    "text": "IMoとは国際数学オリンピックのことである。"
  },
  {
    "start": 515578,
    "end": 518802,
    "text": "だからアルヴィッドも私も出場する。"
  },
  {
    "start": 518826,
    "end": 521120,
    "text": "個人的なことだった。"
  },
  {
    "start": 523140,
    "end": 527028,
    "text": "こんなことはありえない、と思ったのを覚えている。"
  },
  {
    "start": 527124,
    "end": 533804,
    "text": "進歩というものを信じていたけれど、私は女の子なんだと思った。"
  },
  {
    "start": 533852,
    "end": 535800,
    "text": "アフマドがただの妄想であるようにね。"
  },
  {
    "start": 536340,
    "end": 537220,
    "text": "そうだった。"
  },
  {
    "start": 537340,
    "end": 540796,
    "text": "正直に言うと、つまり、はっきり言って、私は非常に間違っていた。"
  },
  {
    "start": 540988,
    "end": 545196,
    "text": "それはこのグループの中で最も先見の明があった賭けだったかもしれない。"
  },
  {
    "start": 545308,
    "end": 549870,
    "text": "それで、ディープミンデンの新しい結果だが、あなたが正しかったことが判明した。"
  },
  {
    "start": 550030,
    "end": 550798,
    "text": "ということだ。"
  },
  {
    "start": 550894,
    "end": 552198,
    "text": "まあ、技術的にはそうだった。"
  },
  {
    "start": 552254,
    "end": 554926,
    "text": "技術的には間違っていないが、1点差。"
  },
  {
    "start": 554998,
    "end": 565254,
    "text": "アモンは当時、このようなことにとても熱心で、以前はアモンがスケーリング法のTシャツを着て歩いていて、そこにはチャートと計算式が書かれていた。"
  },
  {
    "start": 565302,
    "end": 568718,
    "text": "AGIを感じたのか、それともスケーリングを感じたのか？"
  },
  {
    "start": 568774,
    "end": 569038,
    "text": "そうだね。"
  },
  {
    "start": 569094,
    "end": 582608,
    "text": "以前、私はスケーリング法則について深く批判的に考えたことはなかったが、マイケルとある会話をしたことをはっきりと覚えている。"
  },
  {
    "start": 582624,
    "end": 586064,
    "text": "あるいは、なぜスケーリングが進歩の大きな利益につながらないのか？"
  },
  {
    "start": 586232,
    "end": 589368,
    "text": "私は悲しみの段階を経てきたと思う。"
  },
  {
    "start": 589424,
    "end": 594420,
    "text": "怒りがあり、否定があり、そして最後には、ただそれを考えるだけで、受け入れる。"
  },
  {
    "start": 595720,
    "end": 603026,
    "text": "それ以来、私は進歩に対してかなり希望的で楽観的だったと思う。"
  },
  {
    "start": 603138,
    "end": 617978,
    "text": "ひとつだけ注意点を挙げるとすれば、どの領域で進歩を見るかにもよると思いますが、数学は素晴らしい領域で、特に形式的な定理証明は、そのことが正しかったかどうかを実際に検証するという素晴らしいシグナルを得ることができるからです。"
  },
  {
    "start": 618114,
    "end": 621018,
    "text": "ということは、RLのようなものは、本当に、本当にうまくいく可能性があるということだ。"
  },
  {
    "start": 621154,
    "end": 627450,
    "text": "超人的な計算能力を持ちながら、技術的にはAGIを持たないシステムもあり得ると思う。"
  },
  {
    "start": 627610,
    "end": 630570,
    "text": "じゃあ、カーソルまで持っていけるかな？"
  },
  {
    "start": 630730,
    "end": 632202,
    "text": "カーソルとは何か？"
  },
  {
    "start": 632346,
    "end": 634450,
    "text": "これは対コードのフォークだ。"
  },
  {
    "start": 634530,
    "end": 638122,
    "text": "対コードは、長い間最も人気のあるエディタの一つです。"
  },
  {
    "start": 638146,
    "end": 639482,
    "text": "みんな惚れ込んだよ。"
  },
  {
    "start": 639546,
    "end": 642818,
    "text": "みんなVimを辞め、私もそのためにEmaxを辞めた。"
  },
  {
    "start": 642954,
    "end": 643670,
    "text": "申し訳ない。"
  },
  {
    "start": 646610,
    "end": 652698,
    "text": "それは、開発者コミュニティを根本的な部分で統一するものだった。"
  },
  {
    "start": 652874,
    "end": 657810,
    "text": "物事の空間やスケーリングの法則を見ると、AIは驚くべきものになっている。"
  },
  {
    "start": 658150,
    "end": 665850,
    "text": "というのも、延長料金対ヴァーラスコードを書くだけでは多くの制約があるからだ。"
  },
  {
    "start": 667230,
    "end": 673990,
    "text": "もしAIがどんどん良くなっていくのであれば、AIがどのように編集プロセスの一部となるかを再考する必要がある。"
  },
  {
    "start": 674150,
    "end": 681998,
    "text": "そこで、あなたは対コードをフォークして、これからお話しする素晴らしい機能の多くを構築し始めることにした。"
  },
  {
    "start": 682094,
    "end": 683270,
    "text": "その決断はどのようなものだったのか？"
  },
  {
    "start": 683310,
    "end": 690288,
    "text": "というのも、対コードのコパイロットを含め、AI的なことをする拡張機能がたくさんあるからだ。"
  },
  {
    "start": 690344,
    "end": 693104,
    "text": "フォークの決断はどのようなものでしたか？"
  },
  {
    "start": 693232,
    "end": 710640,
    "text": "というのも、エディターの開発に取りかかったとき、このようなモデルの性能は格段に向上し、機能も改善され、ソフトウエアの作り方がまったく変わってしまうという考えがあったからです。"
  },
  {
    "start": 710680,
    "end": 713340,
    "text": "このように、ソフトウェアを作るという行為は大きく変わるだろう。"
  },
  {
    "start": 714180,
    "end": 720320,
    "text": "既存のコーディング環境にプラグインするのであれば、コードエディターに対するコントロールは非常に制限される。"
  },
  {
    "start": 721420,
    "end": 724676,
    "text": "その制限に縛られたくなかったんだ。"
  },
  {
    "start": 724828,
    "end": 727924,
    "text": "最も役に立つものだけを作れるようにしたかった。"
  },
  {
    "start": 728052,
    "end": 734960,
    "text": "さて、そうなると、当然の疑問として、コパイロットは競合相手なのだろうか？"
  },
  {
    "start": 735300,
    "end": 736680,
    "text": "どうすれば勝てるのか？"
  },
  {
    "start": 737380,
    "end": 740044,
    "text": "基本的にはスピードと機能の質だけですか？"
  },
  {
    "start": 740172,
    "end": 753900,
    "text": "つまり、これは非常に興味深い、おそらく非常にユニークなスペースだと思います。過去の技術的な波を見ると、1つの大きな出来事が起こり、新しい企業の波を解き放つようなものです。"
  },
  {
    "start": 754060,
    "end": 766600,
    "text": "毎年、モデル能力が向上するたびに、あるいはモデル能力が飛躍的に向上するたびに、新しい機能の波がやってくる。"
  },
  {
    "start": 767560,
    "end": 775736,
    "text": "AIのプログラミングでは、1年先どころか数カ月先であっても、その製品はずっとずっと役に立つ。"
  },
  {
    "start": 775768,
    "end": 781100,
    "text": "年後のカーソルは、今のカーソルを時代遅れに見せる必要があると思う。"
  },
  {
    "start": 781880,
    "end": 792340,
    "text": "マイクロソフトは素晴らしいことをいくつもやってきたと思うが、新興企業ができるようなやり方でイノベーションを起こし続け、これを推し進めるには絶好の場所にいるとは思えない。"
  },
  {
    "start": 792940,
    "end": 804100,
    "text": "ただ、急速に機能を実装し、本当に天井を押し広げるために必要な研究実験を行う。"
  },
  {
    "start": 804220,
    "end": 836332,
    "text": "プログラマーにとっての機能という観点で考えているわけではないので、機能という観点で考えているわけではないのですが、新しい1つのモデルが出てきたことで、より長いコンテクストや、より高速なものなど、さまざまなタイプのモデルが出てくると思います。"
  },
  {
    "start": 836356,
    "end": 839028,
    "text": "それは過小評価されている事実のようなもので、自分たちのために作っているんだ。"
  },
  {
    "start": 839204,
    "end": 848614,
    "text": "私たちがカーソルを始めたとき、モデルは良くなっているのに、Cobolの体験は変わっていないというもどかしさを感じていた。"
  },
  {
    "start": 848702,
    "end": 853126,
    "text": "この人たち、どんどん天井が高くなっている。"
  },
  {
    "start": 853238,
    "end": 854750,
    "text": "なぜ新しいものを作らないのか？"
  },
  {
    "start": 854910,
    "end": 856030,
    "text": "彼らは新しいものを作るべきだ。"
  },
  {
    "start": 856070,
    "end": 856930,
    "text": "そうあるべきだ。"
  },
  {
    "start": 858030,
    "end": 859446,
    "text": "アルファ版の機能はどこにある？"
  },
  {
    "start": 859518,
    "end": 861050,
    "text": "アルファの機能はなかった。"
  },
  {
    "start": 862950,
    "end": 864702,
    "text": "きっと売れていたんだろうね。"
  },
  {
    "start": 864806,
    "end": 875212,
    "text": "素晴らしいビジネスだったのは確かだけど、新しいものを使おうとする人たちの一人である僕には、とても長い間、新しいものがなかったんだ。"
  },
  {
    "start": 875316,
    "end": 876480,
    "text": "うん、面白いね。"
  },
  {
    "start": 877140,
    "end": 883484,
    "text": "カーソルとコパイロットを比べたとき、コパイロットはすぐにそうなった。"
  },
  {
    "start": 883612,
    "end": 885692,
    "text": "なぜか陳腐に感じ始めた。"
  },
  {
    "start": 885756,
    "end": 902374,
    "text": "UXやモデルとのインタラクションの方法を開発すると同時に、モデルがより良い答えを出せるようにする方法を開発しているんだ。"
  },
  {
    "start": 902422,
    "end": 906862,
    "text": "どうやってプロンプトを作り上げるのか、どうやって文脈を見つけるのか。"
  },
  {
    "start": 906926,
    "end": 909610,
    "text": "カーソルタブの場合、モデルのトレーニングはどのように行うのですか？"
  },
  {
    "start": 910150,
    "end": 917246,
    "text": "そのおかげで、同じスタッフが最初から最後まで、すべての経験に携わることができるんだ。"
  },
  {
    "start": 917358,
    "end": 923982,
    "text": "そう、UIを作る人とモデルをトレーニングする人が18フィート離れて座っているようなものなんだ。"
  },
  {
    "start": 924166,
    "end": 925640,
    "text": "しばしば同じ相手とさえね。"
  },
  {
    "start": 925750,
    "end": 927268,
    "text": "ああ、同じ人であることも多い。"
  },
  {
    "start": 927324,
    "end": 930860,
    "text": "不可能なことを可能にする。"
  },
  {
    "start": 930940,
    "end": 937588,
    "text": "しゃべっていなければ、実験もしていないし、あなたが言ったように、カーソルを使ってカーソルを書いている。"
  },
  {
    "start": 937644,
    "end": 938480,
    "text": "ああ、そうだ。"
  },
  {
    "start": 938780,
    "end": 940740,
    "text": "では、その特徴のいくつかを紹介しよう。"
  },
  {
    "start": 940820,
    "end": 950676,
    "text": "タブのオートコンプリートについて話そう。"
  },
  {
    "start": 950748,
    "end": 951956,
    "text": "タブの仕組み"
  },
  {
    "start": 951988,
    "end": 953084,
    "text": "タブダとは？"
  },
  {
    "start": 953162,
    "end": 954656,
    "text": "高いレベルで強調し、要約すること？"
  },
  {
    "start": 954768,
    "end": 959056,
    "text": "今、カーソルが得意としていることは2つある。"
  },
  {
    "start": 959128,
    "end": 964260,
    "text": "他にもいろいろあるが、プログラマーに役立つのは2つ。"
  },
  {
    "start": 964800,
    "end": 974820,
    "text": "ひとつは、自分の肩越しに見ていて、自分より先にタイプして次の行動を把握できる、本当に速い同僚であるという考えだ。"
  },
  {
    "start": 975640,
    "end": 982980,
    "text": "それがgoodautocompleteのアイデアの原型であり、次に何をするのかを予測することだった。"
  },
  {
    "start": 983100,
    "end": 993440,
    "text": "カーソルの後の文字を予測するだけでなく、実際に次にやろうとしている変化全体、次の差分、次にジャンプしようとしている場所を予測することで、このコンセプトをさらに野心的にすることができる。"
  },
  {
    "start": 993740,
    "end": 1006772,
    "text": "キルヒャーが今、かなり得意としていることの2つ目は、AIより先にジャンプして何をすべきかを指示し、指示からコードにするのを助けることだ。"
  },
  {
    "start": 1006956,
    "end": 1014080,
    "text": "この2つに関しては、人間工学に基づいた編集体験を提供し、スマートで高速な編集を実現するために多くの努力を払ってきた。"
  },
  {
    "start": 1014420,
    "end": 1018940,
    "text": "私たちが本当に望んでいたことのひとつは、モデルが私たちのためにコードを編集できるようにしたかったことです。"
  },
  {
    "start": 1019100,
    "end": 1020124,
    "text": "それは一種の願望だった。"
  },
  {
    "start": 1020172,
    "end": 1026520,
    "text": "コードを編集してくれる良いモデルができるまで、何度も試行錯誤を繰り返した。"
  },
  {
    "start": 1027700,
    "end": 1038120,
    "text": "その後、良いモデルができてからは、良い経験をするために推論を早くするための努力を重ねてきたと思う。"
  },
  {
    "start": 1038940,
    "end": 1057620,
    "text": "つまり、マイケルが言っていたような、いろいろな場所にジャンプできる機能を取り入れ始めているんだ。そのいろいろな場所にジャンプできる機能は、編集をいったん受け入れたら、次にどこに行けばいいのかが一目瞭然であるべきだという感覚から生まれたものだと思う。"
  },
  {
    "start": 1057740,
    "end": 1059900,
    "text": "それはまるで、私がこのような変化を起こしたかのようだった。"
  },
  {
    "start": 1059940,
    "end": 1064420,
    "text": "モデルは、次に行くべき場所は18行先だと知っていればいい。"
  },
  {
    "start": 1064580,
    "end": 1069040,
    "text": "例えば、気まぐれなユーザーなら、1回でも8回でもJJでも何でも押せばいい。"
  },
  {
    "start": 1069800,
    "end": 1072056,
    "text": "でも、なんで、なんで、なんでこんなことしてるんだろう？"
  },
  {
    "start": 1072088,
    "end": 1073856,
    "text": "モデルは、モデルはそれを知っているべきだ。"
  },
  {
    "start": 1073968,
    "end": 1076720,
    "text": "だから、タブを押すだけでいいんだ。"
  },
  {
    "start": 1076760,
    "end": 1081496,
    "text": "18行下に進み、次の編集を表示させ、タブを押す。"
  },
  {
    "start": 1081608,
    "end": 1084408,
    "text": "タブを押し続けることができる限り、それはあなただけだ。"
  },
  {
    "start": 1084544,
    "end": 1088424,
    "text": "だから、社内では「どれだけ多くのタブを押させられるか」を競った。"
  },
  {
    "start": 1088512,
    "end": 1098830,
    "text": "もっと抽象的なアイデアが浮かんだら、考えるべきことは、編集がどのようにゼロ・エントロピーになるかということだ。"
  },
  {
    "start": 1098920,
    "end": 1120190,
    "text": "あなたが自分の意図を表現し、編集があなたの思考を完成させるための新しい情報がないにもかかわらず、コンピュータにあなたが実際に何を考えているのかを理解させるために文字を入力しなければならないのであれば、モデルはあなたの心を読み取り、ゼロエントロピーのビットはすべてタブで削除されるべきなのかもしれない。"
  },
  {
    "start": 1120490,
    "end": 1122554,
    "text": "ええ、それは抽象的なものでした。"
  },
  {
    "start": 1122642,
    "end": 1140820,
    "text": "興味深いことに、異なるドメインでの言語モデルの損失を調べると、コードの文字正規化損失のようなものであるバイトあたりのビットは、言語よりも低くなっています。"
  },
  {
    "start": 1141160,
    "end": 1150940,
    "text": "これは、単にコードをオートコンプリートしようとするだけでなく、ユーザーが既存のコードを編集する際に次に何をしようとしているのかを予測する場合に、さらに顕著になると思う。"
  },
  {
    "start": 1151360,
    "end": 1156616,
    "text": "カーソルタブのゴールは、エディター内で行う低エントロピーなアクションをすべて排除しようということだ。"
  },
  {
    "start": 1156728,
    "end": 1162090,
    "text": "意図が効果的に決まったら、時間をジャンプして前に飛ばそう。"
  },
  {
    "start": 1162250,
    "end": 1166242,
    "text": "さて、その直感と、次にどうするかという技術的な詳細は？"
  },
  {
    "start": 1166346,
    "end": 1171418,
    "text": "カーソルでジャンプを予測するのは、直感的ではないと思う。"
  },
  {
    "start": 1171514,
    "end": 1177250,
    "text": "ああ、どうすればうまくいくのか、少しは詳しく話せると思う。"
  },
  {
    "start": 1177290,
    "end": 1181482,
    "text": "信じられないほど低遅延なので、小さなモデルを訓練する必要がある。"
  },
  {
    "start": 1181546,
    "end": 1188312,
    "text": "特にこのタスクでは、彼らは信じられないほどプレフィル・トークン・ハングリーだ。"
  },
  {
    "start": 1188336,
    "end": 1195020,
    "text": "つまり、本当に長いプロンプトが表示され、あなたのコードがたくさん表示されるが、実際にはそれほど多くのトークンは生成されないということだ。"
  },
  {
    "start": 1195360,
    "end": 1200020,
    "text": "そのために最適なのは、スパースモデル、つまりMOEモデルを使うことだ。"
  },
  {
    "start": 1200800,
    "end": 1212660,
    "text": "これは、より長いコンテクストでパフォーマンスを大幅に向上させる画期的な技術のひとつで、もうひとつは、投機的編集と呼ばれる投機的デコードのバリエーションだ。"
  },
  {
    "start": 1213120,
    "end": 1220052,
    "text": "この2つの要素が、高品質かつ高速を実現する重要な要素なのだ。"
  },
  {
    "start": 1220236,
    "end": 1222588,
    "text": "じゃあ、専門家の萌えミックスだね。"
  },
  {
    "start": 1222764,
    "end": 1224796,
    "text": "入力は大きく、出力は小さい。"
  },
  {
    "start": 1224908,
    "end": 1225316,
    "text": "そうだね。"
  },
  {
    "start": 1225388,
    "end": 1230916,
    "text": "では、キャッシングはどのような役割を果たすのでしょうか？"
  },
  {
    "start": 1231108,
    "end": 1236324,
    "text": "これだけの数の入力トークンを扱うのだから、キャッシュは大きな役割を果たす。"
  },
  {
    "start": 1236452,
    "end": 1247336,
    "text": "もし、ある行のキー入力のたびに、入力されたトークンすべてについてモデルを再実行しなければならないとしたら、レイテンシーが著しく低下することになる。"
  },
  {
    "start": 1247408,
    "end": 1249700,
    "text": "2つ目は、負荷でGPUが死んでしまうことだ。"
  },
  {
    "start": 1250920,
    "end": 1256992,
    "text": "モデルに使用される実際のプロンプトは、キャッシュを意識したデザインにする必要があります。"
  },
  {
    "start": 1257136,
    "end": 1284440,
    "text": "そして、KVキャッシュをリクエスト間で再利用する必要がある。そうすれば、より少ないコストで、より少ないコンピュートで、より少ない作業を行うことができる。"
  },
  {
    "start": 1285100,
    "end": 1286804,
    "text": "願わくば、別のファイルにもジャンプしてほしい。"
  },
  {
    "start": 1286852,
    "end": 1295360,
    "text": "あるファイルで編集を行い、その考えを完成させるために別のファイルに移動する必要がある場合、2番目のファイルにも移動する必要がある。"
  },
  {
    "start": 1296050,
    "end": 1300830,
    "text": "であれば、完全な汎化は次の行動予測のようなものである。"
  },
  {
    "start": 1301250,
    "end": 1309030,
    "text": "ターミナルでコマンドを実行すれば、あなたが書いたコードに基づいてコマンドを提案してくれるはずだ。"
  },
  {
    "start": 1309610,
    "end": 1319754,
    "text": "あるいは、実際に必要なこともある。何かを示唆してくれるのだが、それが正しいかどうかを判断するのは難しい。"
  },
  {
    "start": 1319842,
    "end": 1322830,
    "text": "それが正しいかどうかを確認するためには、種類を知る必要がある。"
  },
  {
    "start": 1323370,
    "end": 1332960,
    "text": "そして、次の完成を受け入れることができるように、必要な知識をすべて持っているようにする。"
  },
  {
    "start": 1333120,
    "end": 1335576,
    "text": "人間に知識を与える。"
  },
  {
    "start": 1335648,
    "end": 1336260,
    "text": "そうだ。"
  },
  {
    "start": 1337120,
    "end": 1337672,
    "text": "そうだね。"
  },
  {
    "start": 1337776,
    "end": 1338136,
    "text": "そうだね。"
  },
  {
    "start": 1338208,
    "end": 1344888,
    "text": "sshを持っているprimegenという男と知り合いになったんだ。"
  },
  {
    "start": 1344944,
    "end": 1347580,
    "text": "ssh経由でコーヒーを注文できる。"
  },
  {
    "start": 1348480,
    "end": 1349984,
    "text": "ああ、そうだね。"
  },
  {
    "start": 1350032,
    "end": 1350944,
    "text": "私たちはそうした。"
  },
  {
    "start": 1351112,
    "end": 1354660,
    "text": "そのモデルも、あなたを食べさせるようなことができますか？"
  },
  {
    "start": 1355270,
    "end": 1355678,
    "text": "そうだね。"
  },
  {
    "start": 1355734,
    "end": 1357126,
    "text": "カフェインを摂取できる。"
  },
  {
    "start": 1357278,
    "end": 1359470,
    "text": "オーケー、これが大枠だ。"
  },
  {
    "start": 1359590,
    "end": 1359846,
    "text": "そうだね。"
  },
  {
    "start": 1359878,
    "end": 1374126,
    "text": "マジックモーメントは、もしプログラミングがこの奇妙な規律だとしたら、次の5分間が、いつもではないが、最近やったことから予測できることがある。"
  },
  {
    "start": 1374278,
    "end": 1385352,
    "text": "つまり、次の5分間が、あなたが手を離すことによって起こるか、あるいは、あなたが次のステップを見ることによって起こるかのどちらかであり、あなたが、よし、いいぞ、いいぞ、いいぞ、と思えるような世界になるのだ。"
  },
  {
    "start": 1385376,
    "end": 1388848,
    "text": "タップ、タップ、タップの繰り返しで、大きな変化を体験できる。"
  },
  {
    "start": 1388984,
    "end": 1404400,
    "text": "この話をしているときに、カーソルについて本当にクールで顕著なことのひとつに、この差分インターフェースの状況全体が起こっていること、モデルが赤と緑でコードを修正する方法を示唆していることを挙げておく。"
  },
  {
    "start": 1404480,
    "end": 1409602,
    "text": "チャットウィンドウで申請すると、差分が表示され、その差分を受け入れることができる。"
  },
  {
    "start": 1409786,
    "end": 1412458,
    "text": "その方向性について話していただけますか？"
  },
  {
    "start": 1412594,
    "end": 1417110,
    "text": "おそらく4、5種類のデフがあるだろう。"
  },
  {
    "start": 1417850,
    "end": 1420882,
    "text": "オートコンプリートの差分を最適化しました。"
  },
  {
    "start": 1420906,
    "end": 1427410,
    "text": "これは、より大きなコードブロックをレビューする場合とは異なるdiffインターフェイスを持っている。"
  },
  {
    "start": 1427570,
    "end": 1431114,
    "text": "となると、私たちは別の差分を最適化しようとしていることになる。"
  },
  {
    "start": 1431282,
    "end": 1442610,
    "text": "複数の異なるファイルを扱う場合、そしてある種の高レベルで、オートコンプリートを行う場合の違いは、本当に、本当に速く読めることです。"
  },
  {
    "start": 1443670,
    "end": 1451646,
    "text": "でもオートコンプリートの場合は、目が一点に集中してしまうんだ。"
  },
  {
    "start": 1451838,
    "end": 1455374,
    "text": "人間はあまり多くの場所を見ることはできない。"
  },
  {
    "start": 1455422,
    "end": 1457102,
    "text": "あなたが言っているのは、インターフェイス側の話だ。"
  },
  {
    "start": 1457166,
    "end": 1457934,
    "text": "インターフェイス側では"
  },
  {
    "start": 1457982,
    "end": 1460356,
    "text": "現在、このボックスがサイドについている。"
  },
  {
    "start": 1460478,
    "end": 1462200,
    "text": "今の箱がある。"
  },
  {
    "start": 1462240,
    "end": 1468600,
    "text": "コードを削除して別のコードを追加しようとすると、横にボックスが表示される。"
  },
  {
    "start": 1468640,
    "end": 1471496,
    "text": "cursor.comのドットで表示されるかもしれない。"
  },
  {
    "start": 1471608,
    "end": 1473192,
    "text": "これが私たちが話していることだ。"
  },
  {
    "start": 1473376,
    "end": 1485616,
    "text": "最初の試みは、青く塗りつぶされた線のようなものだった。"
  },
  {
    "start": 1485648,
    "end": 1497310,
    "text": "以前は横にボックスが表示され、削除するコードをGoogleドキュメント風に表示していた。"
  },
  {
    "start": 1497850,
    "end": 1499510,
    "text": "すごく気が散った。"
  },
  {
    "start": 1499850,
    "end": 1514320,
    "text": "それから、いろいろなことを試した。削除したり、赤いハイライトを入れたり、それから、ちょっと面白いんだけど、マックのオプションボタンを押しながら、次のことをやってみたんだ。"
  },
  {
    "start": 1514440,
    "end": 1519140,
    "text": "をクリックすると、コードのある領域がハイライトされ、何かが起こるかもしれないことを示す。"
  },
  {
    "start": 1519520,
    "end": 1526340,
    "text": "この例では、入力と値はすべて青になる。"
  },
  {
    "start": 1526920,
    "end": 1530460,
    "text": "青は、AIがあなたに提案したことを強調する。"
  },
  {
    "start": 1531040,
    "end": 1536480,
    "text": "直接それを見せるのではなく、AIが提案していることをほのめかすだけだ。"
  },
  {
    "start": 1536520,
    "end": 1542364,
    "text": "本当に見たければ、オプションボタンを押したままにしておくと、新しい提案が表示される。"
  },
  {
    "start": 1542492,
    "end": 1547356,
    "text": "そしてオプションボタンを離すと、元のコードが表示される。"
  },
  {
    "start": 1547548,
    "end": 1551284,
    "text": "でも、オプションボタンを押したままにしておく必要がある。"
  },
  {
    "start": 1551332,
    "end": 1551920,
    "text": "そうだね。"
  },
  {
    "start": 1552540,
    "end": 1554960,
    "text": "ちなみに、私はマックユーザーではないが、手に入れた。"
  },
  {
    "start": 1555900,
    "end": 1558880,
    "text": "君たちが持っているボタンだろう。"
  },
  {
    "start": 1560140,
    "end": 1561868,
    "text": "繰り返すが、直感的ではないのだ。"
  },
  {
    "start": 1561924,
    "end": 1563710,
    "text": "それが重要なことだと思う。"
  },
  {
    "start": 1563820,
    "end": 1566802,
    "text": "これも最終版ではない可能性がある。"
  },
  {
    "start": 1566946,
    "end": 1573710,
    "text": "個人的には、この分野で多くの改善がなされることをとても楽しみにしている。"
  },
  {
    "start": 1574330,
    "end": 1585570,
    "text": "私たちはよく検証の問題として、これらの差分が小さな編集や大きな編集、あるいは複数のファイルなどに最適であるという話をします。"
  },
  {
    "start": 1585690,
    "end": 1592210,
    "text": "これらのデフを見直すのは、実はちょっと法外なんだ。"
  },
  {
    "start": 1594350,
    "end": 1596614,
    "text": "ここにはいくつかの異なるアイデアがある。"
  },
  {
    "start": 1596702,
    "end": 1600942,
    "text": "私たちが考えているのは、デフの一部が重要だということだ。"
  },
  {
    "start": 1601046,
    "end": 1606494,
    "text": "多くの情報を持ち、そして差分の一部は非常にエントロピーが低い。"
  },
  {
    "start": 1606542,
    "end": 1609558,
    "text": "同じことの繰り返しだ。"
  },
  {
    "start": 1609694,
    "end": 1615086,
    "text": "重要な部分を強調し、そうでない部分を灰色で消すといいかもしれない。"
  },
  {
    "start": 1615198,
    "end": 1621000,
    "text": "あるいは、デフを見て、ああ、ここにバグの可能性がある、とわかるようなモデルがあってもいい。"
  },
  {
    "start": 1621040,
    "end": 1626820,
    "text": "小さな赤い四角で印をつけ、デフのこの部分を見直すべきだと言いたい。"
  },
  {
    "start": 1627600,
    "end": 1631328,
    "text": "そういう意味でのアイデアはエキサイティングだと思う。"
  },
  {
    "start": 1631464,
    "end": 1631736,
    "text": "そうだね。"
  },
  {
    "start": 1631768,
    "end": 1635728,
    "text": "UXデザイン・エンジニアリングの実に魅力的な領域だ。"
  },
  {
    "start": 1635904,
    "end": 1645126,
    "text": "あなたは基本的に、人間のプログラマーが読む必要のあるものすべてを、最適のように、それ以上にはならないように導こうとしている。"
  },
  {
    "start": 1645278,
    "end": 1645542,
    "text": "そうだね。"
  },
  {
    "start": 1645566,
    "end": 1648022,
    "text": "インテリジェントなモデルにそれをさせたい。"
  },
  {
    "start": 1648086,
    "end": 1655530,
    "text": "現在のところ、差分アルゴリズムは通常のアルゴリズムに過ぎない。"
  },
  {
    "start": 1655950,
    "end": 1657530,
    "text": "知性はない。"
  },
  {
    "start": 1657870,
    "end": 1667190,
    "text": "アルゴリズムの設計にはインテリジェンスが必要だが、それをするためのモデルが必要なのであって、これがどうのこうのということはどうでもいいのだ。"
  },
  {
    "start": 1667270,
    "end": 1673568,
    "text": "一般的な疑問は、マット、このモデルはもっと賢くなるんじゃないか、ということだと思う。"
  },
  {
    "start": 1673664,
    "end": 1679180,
    "text": "モデルがより賢くなれば、彼らが提案できる変化もより大きくなる。"
  },
  {
    "start": 1679640,
    "end": 1684848,
    "text": "変化がどんどん大きくなるにつれて、人間はより多くの検証作業をしなければならなくなる。"
  },
  {
    "start": 1684944,
    "end": 1686624,
    "text": "どんどん難しくなる。"
  },
  {
    "start": 1686672,
    "end": 1688920,
    "text": "彼らを助ける必要があるようにね。"
  },
  {
    "start": 1689040,
    "end": 1692740,
    "text": "コードのレビューに全時間を費やしたくないんだ。"
  },
  {
    "start": 1695360,
    "end": 1698928,
    "text": "複数のファイルにまたがってもう少し詳しく教えてください。"
  },
  {
    "start": 1699064,
    "end": 1699986,
    "text": "ディビジョン？"
  },
  {
    "start": 1700088,
    "end": 1703438,
    "text": "そう、つまり、GitHubはこれを解決しようとしているんだよね？"
  },
  {
    "start": 1703574,
    "end": 1704902,
    "text": "コードレビュー付き。"
  },
  {
    "start": 1705046,
    "end": 1709390,
    "text": "コードレビューをするときは、複数のファイルにまたがる複数の差分をレビューすることになる。"
  },
  {
    "start": 1709550,
    "end": 1715126,
    "text": "先ほどアルヴィッドが言ったように、コードレビューよりもずっといいものができると思う。"
  },
  {
    "start": 1715198,
    "end": 1716710,
    "text": "コード・レビューはちょっと最悪だ。"
  },
  {
    "start": 1716870,
    "end": 1727700,
    "text": "自分にとって馴染みのないコードを理解するのに多くの時間を費やし、実際にはそれほど多くのバグを捕まえられないことも多い。"
  },
  {
    "start": 1727860,
    "end": 1738960,
    "text": "言語モデルを使えば、例えばARPが説明したようなトリックを使って、レビュー体験を大幅に改善できると思う。"
  },
  {
    "start": 1741260,
    "end": 1755998,
    "text": "また、コードがこれらの言語モデルによって生成され、他の誰かが生成したものでない場合、コードレビューの経験は、レビューする人とコードを生成した人の両方のために設計されていると思います。"
  },
  {
    "start": 1756174,
    "end": 1771010,
    "text": "コードを作成した人が言語モデルである場合、その人の経験をそれほど気にする必要はなく、レビュアーの仕事ができるだけ楽しく、簡単に、生産的になるように、レビュアーを中心に全体をデザインすることができる。"
  },
  {
    "start": 1772910,
    "end": 1778970,
    "text": "このようなことを素朴にコードレビューのように見せようとすることが問題なのだと思う。"
  },
  {
    "start": 1779310,
    "end": 1782974,
    "text": "もっとクリエイティブになれると思うし、可能性の限界を押し広げることもできる。"
  },
  {
    "start": 1783102,
    "end": 1786564,
    "text": "ただ1つだけ、順序は重要だと思う。"
  },
  {
    "start": 1786732,
    "end": 1802660,
    "text": "しかし、実際には、まず論理的にこの部分を理解したい。"
  },
  {
    "start": 1802740,
    "end": 1805560,
    "text": "あなたは、あなたを導いてくれるモデルを求めている。"
  },
  {
    "start": 1806220,
    "end": 1812320,
    "text": "というのも、実際のライティングと比較して、より自然な言語が目標になるからだ。"
  },
  {
    "start": 1813200,
    "end": 1818096,
    "text": "プログラミングのすべてが自然言語になるとは思わない。"
  },
  {
    "start": 1818288,
    "end": 1831560,
    "text": "ズワレとペア・プログラミングをしていて、ズワレがコンピューターとキーボードの前にいるときや、運転中にズワレに、この機能を実装してくれ、と言いたいときがあるからだ。"
  },
  {
    "start": 1831640,
    "end": 1832864,
    "text": "それが機能する。"
  },
  {
    "start": 1832992,
    "end": 1837720,
    "text": "ズワレに何をしてほしいか説明するのが面倒くさいんだ。"
  },
  {
    "start": 1837800,
    "end": 1847314,
    "text": "だから、私が実際にキーボードを担当して、彼に見せて、私が例の一部を書いて、それを理解させる。"
  },
  {
    "start": 1847402,
    "end": 1849258,
    "text": "だから、それはAIの場合も同じだと思う。"
  },
  {
    "start": 1849314,
    "end": 1854842,
    "text": "AIとコミュニケーションする最も簡単な方法は、例を示すことである。"
  },
  {
    "start": 1854906,
    "end": 1865030,
    "text": "また、例えばウェブサイトを作る場合、AIに何をさせたいかを示す最も簡単な方法は、AIに指示することではなく、ドラッグしたり絵を描いたりすることです。"
  },
  {
    "start": 1867400,
    "end": 1872768,
    "text": "いずれはブレイン・マシン・インターフェイスか何かができて、あなたの考えていることが理解できるようになるかもしれない。"
  },
  {
    "start": 1872904,
    "end": 1874656,
    "text": "自然言語には居場所があると思う。"
  },
  {
    "start": 1874728,
    "end": 1880344,
    "text": "ほとんどの人がほとんどの時間、プログラムを組む方法ではないことは間違いないと思う。"
  },
  {
    "start": 1880512,
    "end": 1882860,
    "text": "このエディターでAGIを本当に実感している。"
  },
  {
    "start": 1883720,
    "end": 1887504,
    "text": "その下で、多くの機械学習が行われているように感じる。"
  },
  {
    "start": 1887672,
    "end": 1900826,
    "text": "カーソルが本当に機能するように、推論や激しいことに長けているフロンティア・モデルとともにトレーニングしたカスタム・モデルのアンサンブルによって、すべてを機能させるMLについて教えてください。"
  },
  {
    "start": 1901018,
    "end": 1907506,
    "text": "例えば、カーソルタブは、このモデルをフロンティアモデルよりもさらに優れたものに特化させることができる素晴らしい例だ。"
  },
  {
    "start": 1907538,
    "end": 1918190,
    "text": "タスクのエバルを見ると、他のドメインに設定している。カスタムモデルが必要なのは驚きだが、これは必要なことで、かなりうまく機能している。"
  },
  {
    "start": 1919210,
    "end": 1927490,
    "text": "これらのモデルは、フロンティアモデルのように、コードの計画をスケッチし、変更のラフスケッチを生成するのに非常に適していると思う。"
  },
  {
    "start": 1927650,
    "end": 1933906,
    "text": "実際、フロンティアモデルでは差分を作るのはかなり難しい。"
  },
  {
    "start": 1933938,
    "end": 1935190,
    "text": "トレーニングモデル"
  },
  {
    "start": 1937770,
    "end": 1948430,
    "text": "ソネットでもゼロワンでも、どんなフロンティア・モデルでも、これをやろうとすると、特に超超大型ファイルでは、行番号のカウントなどという馬鹿げたことが本当にめちゃくちゃになる。"
  },
  {
    "start": 1950130,
    "end": 1962306,
    "text": "この問題を解決するために私たちが行ったのは、モデルに大まかなコードブロックをスケッチさせ、その変更をファイルに適用するようにモデルを訓練することです。"
  },
  {
    "start": 1962458,
    "end": 1967162,
    "text": "applyとは、モデルがあなたのコードを見ることである。"
  },
  {
    "start": 1967346,
    "end": 1972084,
    "text": "どんな新しいことをすればいいのか、実にいい提案をしてくれる。"
  },
  {
    "start": 1972282,
    "end": 1979376,
    "text": "人間にとって、あなたが言っている2つを組み合わせるという一見些細なステップは、それほど些細なことではない。"
  },
  {
    "start": 1979448,
    "end": 1983064,
    "text": "一般的な認識とは異なり、これは決定論的アルゴリズムではない。"
  },
  {
    "start": 1983152,
    "end": 1997908,
    "text": "決定論的なマッチングをしようとしても、少なくとも40％は失敗する。"
  },
  {
    "start": 1998064,
    "end": 2001200,
    "text": "その結果、ひどい製品体験になるだけだ。"
  },
  {
    "start": 2003180,
    "end": 2008720,
    "text": "一般的に、このような体制は、ますます賢いモデルになっていくと思う。"
  },
  {
    "start": 2009420,
    "end": 2016600,
    "text": "もう一つ、応用することでできることは、最もインテリジェントなモデルでより少ないトークンを使うことができるということだ。"
  },
  {
    "start": 2017060,
    "end": 2023520,
    "text": "トークンを生成するためのレイテンシーとコストの両面で高くつく。"
  },
  {
    "start": 2024140,
    "end": 2034212,
    "text": "というのも、この非常に大雑把なスケッチを、小さなモデルに実装させることができるからだ。"
  },
  {
    "start": 2034316,
    "end": 2043532,
    "text": "この体制は今後も続くと思う。より賢いモデルを使ってプランニングを行い、実装の細部はあまり賢くないモデルが担当すればいい。"
  },
  {
    "start": 2043596,
    "end": 2056554,
    "text": "もしかしたら、ゼロになるかもしれないし、ソネットによって再帰的に適用されるような、さらに高いレベルのプランが与えられて、さらに高性能なモデルが適用されるかもしれない。"
  },
  {
    "start": 2056642,
    "end": 2059110,
    "text": "どうすれば早くできるかを話し合うべきかもしれない。"
  },
  {
    "start": 2060010,
    "end": 2061554,
    "text": "速いというのは常に興味深いディテールだ。"
  },
  {
    "start": 2061642,
    "end": 2062586,
    "text": "速いのはいいことだ。"
  },
  {
    "start": 2062738,
    "end": 2063194,
    "text": "そうだね。"
  },
  {
    "start": 2063282,
    "end": 2064802,
    "text": "どうやって速くするんだ？"
  },
  {
    "start": 2064986,
    "end": 2065370,
    "text": "そうだね。"
  },
  {
    "start": 2065410,
    "end": 2069714,
    "text": "速くするための大きな要素のひとつが、投機的な編集だ。"
  },
  {
    "start": 2069882,
    "end": 2073058,
    "text": "投機的編集は投機的解読の変形である。"
  },
  {
    "start": 2073154,
    "end": 2076950,
    "text": "投機的デコードについて簡単に説明しておくといいだろう。"
  },
  {
    "start": 2077680,
    "end": 2098568,
    "text": "投機的デコードでは、ほとんどの場合、言語モデル生成でメモリに制約がある場合、一度に複数のトークンを処理すると、一度に1つのトークンを生成するよりも高速になるという事実を利用することができます。"
  },
  {
    "start": 2098744,
    "end": 2107710,
    "text": "これは、プロンプトトークンと生成されたトークンで1秒あたりのトークンを比較すると、プロンプトトークンの方がはるかに速いのと同じ理由である。"
  },
  {
    "start": 2109250,
    "end": 2129424,
    "text": "つまり、通常特定のデコーディングが行うような、本当に小さなモデルを使ってドラフト・トークンを予測し、より大きなモデルを使ってコードを編集して検証するのではなく、既存のコードがどのようなものになるかを非常に強力に事前に予測するのです。"
  },
  {
    "start": 2129522,
    "end": 2140724,
    "text": "そうすれば、モデルはほとんどの場合、「よし、このコードを吐き出そう」と同意してくれる。"
  },
  {
    "start": 2140812,
    "end": 2143380,
    "text": "であれば、それらの行をすべて並行して処理することができる。"
  },
  {
    "start": 2143500,
    "end": 2145212,
    "text": "これを十分な数のチャンクで行うだけだ。"
  },
  {
    "start": 2145236,
    "end": 2153236,
    "text": "そうすると、最終的には、モデルがグランド・トゥルースのオリジナル・コードとは異なるテキストを予測するという不一致のポイントに到達することになる。"
  },
  {
    "start": 2153348,
    "end": 2162164,
    "text": "トークンが生成され、トークンが元のコードと十分に一致した後に、コードの塊から推測を再開することになる。"
  },
  {
    "start": 2162292,
    "end": 2168932,
    "text": "結局のところ、これは通常の編集コードをより高速化したものに過ぎない。"
  },
  {
    "start": 2168956,
    "end": 2173652,
    "text": "すべてのコードを書き直したモデルの、より高速なバージョンのようだ。"
  },
  {
    "start": 2173676,
    "end": 2181640,
    "text": "diffで使っているのとまったく同じインターフェイスを使うことができるが、ストリーミングの速度が格段に速くなるだけだ。"
  },
  {
    "start": 2182040,
    "end": 2188896,
    "text": "ワイヤレス・ストリーミングの利点は、コードが完成する前にレビューを始めることができることだ。"
  },
  {
    "start": 2188928,
    "end": 2191340,
    "text": "大きなローディング画面はない。"
  },
  {
    "start": 2191880,
    "end": 2199312,
    "text": "もしかしたら、それが利点のひとつなのかもしれない。"
  },
  {
    "start": 2199456,
    "end": 2205472,
    "text": "ここで興味深いのは、推測のようなものが、今ではかなり一般的な考えになっているということだ。"
  },
  {
    "start": 2205536,
    "end": 2214070,
    "text": "言語モデルだけでなく、CPUにも投機があるし、データベースにも投機がある。"
  },
  {
    "start": 2214530,
    "end": 2219818,
    "text": "LLMとLLMのどちらがコーディングに長けているかという馬鹿げた質問をしてみよう。"
  },
  {
    "start": 2219914,
    "end": 2224082,
    "text": "DPTクロード、プログラミングの文脈ではどちらが勝つ？"
  },
  {
    "start": 2224106,
    "end": 2231310,
    "text": "その答えはもっと微妙なものだと思う。なぜなら、この問題のすべての部分に異なるモデルが関わっているように思えるからだ。"
  },
  {
    "start": 2231930,
    "end": 2254590,
    "text": "パレートが他を圧倒するモデルはないと思う。つまり、重要だと思われるすべてのカテゴリーでパレートが優れているということだ。そのカテゴリーとは、スピード、コード編集能力、たくさんのコードを処理する能力、長い文脈、その他いくつかのこと、そしてコーディング能力などだ。"
  },
  {
    "start": 2255370,
    "end": 2259426,
    "text": "今、一番いいと思うのはソネットだ。"
  },
  {
    "start": 2259458,
    "end": 2261082,
    "text": "これは総意だと思う。"
  },
  {
    "start": 2261226,
    "end": 2264834,
    "text": "R1は本当に面白いし、推理が本当にうまい。"
  },
  {
    "start": 2264962,
    "end": 2273350,
    "text": "本当に難しいプログラミング、インタビュー形式の問題やリートコードの問題を与えれば、かなり、かなりうまくできる。"
  },
  {
    "start": 2273960,
    "end": 2280500,
    "text": "ソネットほど、あなたの大まかな意図を理解しているようには感じられない。"
  },
  {
    "start": 2282120,
    "end": 2289496,
    "text": "他の多くのフロンティアモデルを見ると、必ずしも終わっていないように感じる。"
  },
  {
    "start": 2289568,
    "end": 2297528,
    "text": "ベンチマークのトレーニングをしているとは言わないが、ベンチマークの成績は、中間に位置するすべてのものに対して非常に良い。"
  },
  {
    "start": 2297664,
    "end": 2303342,
    "text": "もし、これらのベンチマークや、ベンチマークの分布にあるものをすべて試したなら、彼らは本当に良い結果を出すだろう。"
  },
  {
    "start": 2303366,
    "end": 2311310,
    "text": "そのソネットから少し外れたところに追いやると、同じ能力を維持するのに一番うまくいくのはソネットだと思う。"
  },
  {
    "start": 2311470,
    "end": 2317046,
    "text": "ベンチマークでは、コーディングで何かを指示しようとするときと同じような能力がある。"
  },
  {
    "start": 2317238,
    "end": 2324410,
    "text": "通常のプログラミング体験とベンチマークの違いは何ですか？"
  },
  {
    "start": 2324710,
    "end": 2327350,
    "text": "例えば、ベンチマークはどこで不足すると思いますか？"
  },
  {
    "start": 2327390,
    "end": 2331222,
    "text": "ところで、これらのモデルを評価するとき、それは本当に本当に難しいことなんだ。"
  },
  {
    "start": 2331366,
    "end": 2334894,
    "text": "まるで、決定的に重要なディテールのようにね。"
  },
  {
    "start": 2334942,
    "end": 2350278,
    "text": "ベンチマークのようなものと、実際のコーディングのようなものとの違いは何ですか？実際のコーディングは、インタビュー形式のコーディングではなく、あなたがやっている、あなたが知っている、あなたがやっている、あなたが知っている、あなたは、人間が時々中途半端に壊れた英語を言っているようなものです。"
  },
  {
    "start": 2350334,
    "end": 2353890,
    "text": "時々、ああ、前と同じようにしてくれ、と言うことがある。"
  },
  {
    "start": 2354550,
    "end": 2361738,
    "text": "時には、これを追加して、それから別のことをやって、それからこのUIエレメントを作ってくれ、と言うこともある。"
  },
  {
    "start": 2361794,
    "end": 2367390,
    "text": "となると、多くのことは文脈に左右されるようなものだ。"
  },
  {
    "start": 2367850,
    "end": 2373042,
    "text": "人間を理解し、その人間が望むことをする。"
  },
  {
    "start": 2373186,
    "end": 2380910,
    "text": "抽象的な言い方をすれば、面接の問題は非常によく特定されているということかもしれない。"
  },
  {
    "start": 2382140,
    "end": 2388640,
    "text": "彼らはスペックに大きく傾倒しているが、人間的なものはスペックに乏しい。"
  },
  {
    "start": 2389660,
    "end": 2390356,
    "text": "そうだね。"
  },
  {
    "start": 2390508,
    "end": 2405700,
    "text": "このベンチマークの問題は、先ほどの土の話と、アモンが言いたかったことの両方が複雑に絡み合っていると思う。"
  },
  {
    "start": 2405740,
    "end": 2413874,
    "text": "というのも、実際のプログラミングは非常に厄介で、何が正しいのか、何が正しくないのか、明確に規定されていないことがあるからだ。"
  },
  {
    "start": 2414002,
    "end": 2418178,
    "text": "となると、この公開ベンチマークの問題もあり、二重に難しい。"
  },
  {
    "start": 2418274,
    "end": 2421706,
    "text": "というのも、公的なベンチマークは時にヒルクライムされることがあるからだ。"
  },
  {
    "start": 2421778,
    "end": 2428050,
    "text": "そうなると、公開ベンチマークのデータをモデルから取り出すのは本当に、本当に難しい。"
  },
  {
    "start": 2428210,
    "end": 2439392,
    "text": "例えば、最も人気のあるエージェントベンチマークの1つであるスイートベンチは、これらの基礎モデルのトレーニングデータにおいて、本当に本当に汚染されている。"
  },
  {
    "start": 2439496,
    "end": 2447700,
    "text": "このような基礎モデルにスイートベンチの問題を依頼しても、実際にはコードベースというコンテキストを与えなければ、彼らは正しいファイルパスや正しい関数名を幻覚として見ることができる。"
  },
  {
    "start": 2450400,
    "end": 2453168,
    "text": "また、こういったことの公的な側面が厄介なんだ。"
  },
  {
    "start": 2453304,
    "end": 2453688,
    "text": "そうだね。"
  },
  {
    "start": 2453744,
    "end": 2469746,
    "text": "その場合、文字通りの課題やプルリクエストそのものをトレーニングすることができ、ラボがより良い仕事をし始めるか、あるいはすでにそれらのものを除染するのに良い仕事をしているかもしれないが、リポジトリそのものの実際のトレーニングデータを出すことはない。"
  },
  {
    "start": 2469898,
    "end": 2472730,
    "text": "これらはすべて、最も人気のあるpythonリポジトリのいくつかです。"
  },
  {
    "start": 2472810,
    "end": 2474310,
    "text": "シンピーはその一例だ。"
  },
  {
    "start": 2474610,
    "end": 2483754,
    "text": "これらのベンチマークで真の評価点を得るために、彼らがsympyや人気のあるパイソンのリポジトリでモデルにハンディをつけるとは思えない。"
  },
  {
    "start": 2483802,
    "end": 2497028,
    "text": "そうだね、親愛なる人たちやベンチマークを考えると、これらのモデルを使ってシステムを構築したり、これらのモデルを構築しているところが、正しい方向に進んでいるかどうかの感覚を得るために実際に使う、いくつかの興味深い松葉杖のようなものがあると思う。"
  },
  {
    "start": 2497124,
    "end": 2508844,
    "text": "そして、多くのところでは、実際に人間がその製品を使って遊び、質的なフィードバックを与える。"
  },
  {
    "start": 2508972,
    "end": 2514012,
    "text": "そして、社内ではこれらのモデルを定性的に評価し、実際にそれに多くを傾けている。"
  },
  {
    "start": 2514036,
    "end": 2516136,
    "text": "私たちが行っている個人的なエバルのようなものに加えてね。"
  },
  {
    "start": 2516308,
    "end": 2517620,
    "text": "雰囲気のようなものだ。"
  },
  {
    "start": 2518240,
    "end": 2522248,
    "text": "そう、バイブのベンチマーク、人間のベンチマークだ。"
  },
  {
    "start": 2522424,
    "end": 2525384,
    "text": "人間たちを引き寄せて雰囲気をチェックする。"
  },
  {
    "start": 2525512,
    "end": 2526600,
    "text": "ああ、わかったよ。"
  },
  {
    "start": 2526720,
    "end": 2527192,
    "text": "つまり、それは"
  },
  {
    "start": 2527216,
    "end": 2528072,
    "text": "それが僕の仕事なんだ。"
  },
  {
    "start": 2528096,
    "end": 2545112,
    "text": "ネットのフォーラムやRedditやXを読むのと同じように、まあ、クロードやGPTが馬鹿になったような気がする、みたいなことを言われるから、人の意見をきちんと読み込む方法がわからないんだ。"
  },
  {
    "start": 2545176,
    "end": 2549728,
    "text": "彼らは言うだろう、私はそんな気がする、と。"
  },
  {
    "start": 2549904,
    "end": 2553672,
    "text": "モデルの問題なのか、私の問題なのか。"
  },
  {
    "start": 2553856,
    "end": 2554128,
    "text": "そうだね。"
  },
  {
    "start": 2554144,
    "end": 2566780,
    "text": "クロードについては、AWSは異なるチップを搭載しており、Nvidia GPUとは若干異なる数値を持っているのではないかという興味深い話を聞いた。"
  },
  {
    "start": 2567730,
    "end": 2580690,
    "text": "クロードのパフォーマンスが低下したのは、AWSの岩盤上に存在する量子化されたバージョンと、anthropicsのGPUで動作しているものとを使い分けたからではないか、と誰かが推測していた。"
  },
  {
    "start": 2580770,
    "end": 2582938,
    "text": "陰謀論を持っている人たちにインタビューしているんだ。"
  },
  {
    "start": 2582994,
    "end": 2585602,
    "text": "この陰謀について話してくれて嬉しいよ。"
  },
  {
    "start": 2585666,
    "end": 2590090,
    "text": "まあ、彼らが言うような陰謀論とは違う。"
  },
  {
    "start": 2590130,
    "end": 2593098,
    "text": "彼らはただ、彼らは人間なんだ。"
  },
  {
    "start": 2593114,
    "end": 2603700,
    "text": "細かいことだけど、バタバタして、チップも散らかるし、虫のようにバグが発生することもある。"
  },
  {
    "start": 2604200,
    "end": 2608020,
    "text": "バグを回避するのがいかに難しいか、言い過ぎたことはない。"
  },
  {
    "start": 2608680,
    "end": 2612624,
    "text": "この中で、優れたプロンプトの役割は何だろう？"
  },
  {
    "start": 2612752,
    "end": 2619060,
    "text": "ベンチマークのプロンプトは実に構造化され、よく練られているとおっしゃいましたね。"
  },
  {
    "start": 2620160,
    "end": 2630130,
    "text": "成功を最大化するために人間は何をすべきなのか、そしてあなたがブログで書いた人間の重要性とは何なのか、彼はそれをプロンプト・デザインと呼んだ。"
  },
  {
    "start": 2630670,
    "end": 2639990,
    "text": "どのモデルも微妙に違うし、プロンプトに対する反応も違う。"
  },
  {
    "start": 2640030,
    "end": 2650482,
    "text": "昨年のGPTのオリジナル4人組や、ある種のオリジナルモデルたちは、プロンプトにかなり敏感だったと思う。"
  },
  {
    "start": 2650566,
    "end": 2653150,
    "text": "彼らはまた、非常に小さなコンテキストウィンドウを持っていた。"
  },
  {
    "start": 2654450,
    "end": 2660434,
    "text": "コードベース周辺には、プロンプトに関連しそうな情報がすべてある。"
  },
  {
    "start": 2660482,
    "end": 2664474,
    "text": "例えば、ドキュメントがあり、追加したファイルがあり、会話履歴がある。"
  },
  {
    "start": 2664642,
    "end": 2668762,
    "text": "そうなると、プロンプトに何を書くのか、どうやって決めるのかという問題が出てくる。"
  },
  {
    "start": 2668786,
    "end": 2677784,
    "text": "スペースが限られている場合、そして今日のモデルであっても、長いコンテクストがある場合、コンテクストウィンドウ全体を埋めることは、より遅くなることを意味する。"
  },
  {
    "start": 2677872,
    "end": 2682904,
    "text": "モデルが実際に混乱することもあるし、他のモデルよりも混乱するモデルもいるということだ。"
  },
  {
    "start": 2683072,
    "end": 2689540,
    "text": "私たちは内部でプリエンプトと呼んでいるシステムを導入している。"
  },
  {
    "start": 2689920,
    "end": 2700420,
    "text": "8000のトークンコンテキストウィンドウがあった以前の時代に作られたものだと思う。"
  },
  {
    "start": 2700720,
    "end": 2705830,
    "text": "それはウェブサイトを作るときと少し似ている。"
  },
  {
    "start": 2707450,
    "end": 2717642,
    "text": "モバイルでもデスクトップでも使えるようにしたい。"
  },
  {
    "start": 2717666,
    "end": 2722026,
    "text": "例えば、印刷物の雑誌をデザインしている場合、どこに何を載せればいいかはよく分かっているはずだ。"
  },
  {
    "start": 2722098,
    "end": 2730790,
    "text": "ウェブサイトやプロンプトがある場合、これらの入力があり、常に機能するようにフォーマットする必要がある。"
  },
  {
    "start": 2731930,
    "end": 2734378,
    "text": "そのアイデアは、よし、インスピレーションを得ようというものだった。"
  },
  {
    "start": 2734434,
    "end": 2737394,
    "text": "ウェブサイトをデザインする最良の方法とは？"
  },
  {
    "start": 2737442,
    "end": 2740842,
    "text": "まあ、僕らが本当に好きなのは反応することなんだ。"
  },
  {
    "start": 2740906,
    "end": 2750298,
    "text": "宣言的アプローチでは、JavaScriptでJSXを使用し、これが私の欲しいものですと宣言する。"
  },
  {
    "start": 2750354,
    "end": 2755910,
    "text": "この方が優先順位が高いとか、この方が他のものよりZ指数が高いとか。"
  },
  {
    "start": 2757260,
    "end": 2770920,
    "text": "そして、ウェブデザインのレンダリングエンジンはクロームで、私たちの場合はプリエンプト・レンダラーです。"
  },
  {
    "start": 2771940,
    "end": 2774800,
    "text": "私たちは、それがかなり役に立つことがわかった。"
  },
  {
    "start": 2775100,
    "end": 2778440,
    "text": "その役割は時代とともに変化してきたと思う。"
  },
  {
    "start": 2778900,
    "end": 2790360,
    "text": "当初は小さなコンテキスト・ウィンドウに合わせるためだったが、今ではプロンプトに入るデータと実際のレンダリングを分割するのに役立つので、本当に便利だ。"
  },
  {
    "start": 2791860,
    "end": 2800164,
    "text": "プロンプトのレンダリングを変更し、古いプロンプトで試すことができるため、デバッグが容易になる。"
  },
  {
    "start": 2800252,
    "end": 2805164,
    "text": "そうすれば、この評価セット全体について、私の変更が実際に改善されたかどうかがわかるだろう？"
  },
  {
    "start": 2805292,
    "end": 2807756,
    "text": "文字通りJSXでプロンプトを出すのか？"
  },
  {
    "start": 2807948,
    "end": 2808680,
    "text": "そうだ。"
  },
  {
    "start": 2809100,
    "end": 2810444,
    "text": "なんだか反応しているように見える。"
  },
  {
    "start": 2810492,
    "end": 2817280,
    "text": "例えば、ファイル・コンポーネントというコンポーネントがあり、カーソルを取り込む。"
  },
  {
    "start": 2817740,
    "end": 2823460,
    "text": "通常、ファイルの中でカーソルがある行は1行で、おそらくそれが最も重要な行だろう。"
  },
  {
    "start": 2823540,
    "end": 2831396,
    "text": "そこで優先順位をつけ、その行が最も高い優先順位を持ち、その行から遠い行ごとに1ずつ引いていく。"
  },
  {
    "start": 2831468,
    "end": 2834892,
    "text": "そして、最終的にレンダリングされたときに、実際に何行入るかを計算するんだ。"
  },
  {
    "start": 2834916,
    "end": 2836882,
    "text": "そのことを中心に考えている。"
  },
  {
    "start": 2836986,
    "end": 2837698,
    "text": "すごいね。"
  },
  {
    "start": 2837754,
    "end": 2850270,
    "text": "コードベース全体からたくさんのコードブロックがある場合、検索や埋め込み、再ランク付けのスコアなどを使って、それぞれのコンポーネントに優先順位をつけることもできる。"
  },
  {
    "start": 2850770,
    "end": 2855706,
    "text": "人間が質問するときにも、そのようなものを使おうとしているのだろうか？"
  },
  {
    "start": 2855738,
    "end": 2859850,
    "text": "例えば、問題の中でJSXを書くことは有益だろうか？"
  },
  {
    "start": 2859890,
    "end": 2863030,
    "text": "あるいは、全体的にルーズで雑であるべきだという考え方もある。"
  },
  {
    "start": 2863350,
    "end": 2869446,
    "text": "私たちのゴールは、自分にとって最も自然なことをすることだと思う。"
  },
  {
    "start": 2869598,
    "end": 2876814,
    "text": "そうなると、私たちの仕事は、どうすれば相対的なものを実際に取り出すことができるかを考えることである。"
  },
  {
    "start": 2876902,
    "end": 2886110,
    "text": "まあ、これはアービンと議論したことなんだけど、彼の考え方は、その人が望むだけ怠けさせるべきだというものなんだ。"
  },
  {
    "start": 2886150,
    "end": 2890044,
    "text": "うん、でも、そうだね、美しいことだよ。"
  },
  {
    "start": 2890222,
    "end": 2894440,
    "text": "プログラマーにもっと求めてもいいような気がするんだけど？"
  },
  {
    "start": 2894560,
    "end": 2898696,
    "text": "つまり、人間は怠け者なんだ。"
  },
  {
    "start": 2898888,
    "end": 2905584,
    "text": "ただダラダラしているのと、促されるままに提供するのとでは、ある種の緊張感がある。"
  },
  {
    "start": 2905632,
    "end": 2918928,
    "text": "まるで、文法ではなく、プロンプトの中に込められた思いの深さを表現するように、システムがプレッシャーをかけたり、鼓舞したりするような感じだ。"
  },
  {
    "start": 2918984,
    "end": 2931664,
    "text": "システムがある程度完璧なレベルに近づいても、モデルに何かを求めるときに、何をすべきかを知るための十分な意図が伝わらないことがよくあると思う。"
  },
  {
    "start": 2931792,
    "end": 2934240,
    "text": "その意図を解決する方法はいくつかある。"
  },
  {
    "start": 2934400,
    "end": 2937768,
    "text": "ひとつは、モデルにただ聞いてもらうという単純なことだ。"
  },
  {
    "start": 2937944,
    "end": 2942900,
    "text": "あなたの質問では、これらのパーツをどのようにすればいいのかわからない。"
  },
  {
    "start": 2944260,
    "end": 2954660,
    "text": "もうひとつは、ここまでの問い合わせにあった不確実性を考慮すると、5、6世代はあり得るということだろう。"
  },
  {
    "start": 2954700,
    "end": 2957600,
    "text": "実際に全部見せて、選んでもらえばいいじゃないか。"
  },
  {
    "start": 2959300,
    "end": 2963440,
    "text": "モデルにとって、言い返すことを選択するのは難しいことなのか？"
  },
  {
    "start": 2966540,
    "end": 2969640,
    "text": "不確実性にどう対処するかは難しいね。"
  },
  {
    "start": 2970550,
    "end": 2975878,
    "text": "曖昧さを減らすために、より多くの情報を求めることを選択するか？"
  },
  {
    "start": 2976014,
    "end": 2984294,
    "text": "つまり、私たちがやっていることのひとつは、最近追加したようなものですが、追加できるファイルを提案することです。"
  },
  {
    "start": 2984342,
    "end": 3008974,
    "text": "タイピングしている間に、不確実性が何であるかを推測することができるし、APIを書いているときに、クライアントとサーバーが超便利であることを、同じファイル内で以前に行ったコミットを使って推測することもできる。"
  },
  {
    "start": 3009142,
    "end": 3018650,
    "text": "現在のプロンプトからすると、どのファイルが最も重要なのか、すべてのコミットにわたってどのように解決するのか、という難しい技術的な問題がある。"
  },
  {
    "start": 3018950,
    "end": 3024930,
    "text": "まだ、初期バージョンは未定で、もっと正確なものにできると確信している。"
  },
  {
    "start": 3026810,
    "end": 3036350,
    "text": "これは非常に実験的なものですが、私たちのアイデアは、このファイル、このファイル、このファイルを追加して、これらのファイルを編集するようにモデルに指示するだけです。"
  },
  {
    "start": 3037010,
    "end": 3044402,
    "text": "APIを作るのであれば、APIを使うクライアントとサーバー、そしてAPIを解決するもう1つのサーバーも編集する必要があるからだ。"
  },
  {
    "start": 3044546,
    "end": 3045830,
    "text": "クールだろうね。"
  },
  {
    "start": 3046130,
    "end": 3051942,
    "text": "どちらも、プロンプトを書いている段階と、エンターテインメントをクリックする前の段階がある。"
  },
  {
    "start": 3051996,
    "end": 3054138,
    "text": "もしかしたら、不確実性の解消に貢献できるかもしれない。"
  },
  {
    "start": 3054274,
    "end": 3056874,
    "text": "どの程度、エージェント的なアプローチを使っていますか？"
  },
  {
    "start": 3057002,
    "end": 3058470,
    "text": "エージェントの有用性は？"
  },
  {
    "start": 3058970,
    "end": 3062510,
    "text": "エージェントは本当にクールだと思う。"
  },
  {
    "start": 3063090,
    "end": 3068074,
    "text": "エージェントは人間に似ていると思う。"
  },
  {
    "start": 3068162,
    "end": 3079682,
    "text": "人間と同じように行動するデモを見て、AGIに近づいていると感じることができるようなものだ。"
  },
  {
    "start": 3079746,
    "end": 3086818,
    "text": "エージェントは、まだ多くのことに超便利ではないと思う。"
  },
  {
    "start": 3086994,
    "end": 3090506,
    "text": "実際に役に立つところまで来ていると思う。"
  },
  {
    "start": 3090698,
    "end": 3099634,
    "text": "だから、エージェントがいたほうがいい仕事というのはあると思う。"
  },
  {
    "start": 3099722,
    "end": 3100682,
    "text": "エージェントが欲しいくらいだ。"
  },
  {
    "start": 3100706,
    "end": 3108482,
    "text": "例えば、チャット入力ボックスの中でコマンドcやコマンドvができないバグがあります。"
  },
  {
    "start": 3108626,
    "end": 3110738,
    "text": "それは、超よく指定された仕事だ。"
  },
  {
    "start": 3110794,
    "end": 3114346,
    "text": "私はただ、2つの文章のように、これは機能しません、直してくださいと言いたいだけです。"
  },
  {
    "start": 3114418,
    "end": 3118218,
    "text": "それなら、私は、ただ単に消えてくれるエージェントが欲しいですね。"
  },
  {
    "start": 3118274,
    "end": 3122618,
    "text": "そして1日後、私は戻ってきて、そのことを見直した。"
  },
  {
    "start": 3122754,
    "end": 3123946,
    "text": "ということですか？"
  },
  {
    "start": 3124018,
    "end": 3125362,
    "text": "正しいファイルを見つけましたか？"
  },
  {
    "start": 3125466,
    "end": 3131600,
    "text": "そう、正しいファイルを見つけ、バグを再現しようとし、バグを修正し、それが正しいかどうか検証する。"
  },
  {
    "start": 3131680,
    "end": 3134180,
    "text": "これは長い時間を要するプロセスかもしれない。"
  },
  {
    "start": 3134680,
    "end": 3137216,
    "text": "だから、私はそれが欲しいと思う。"
  },
  {
    "start": 3137408,
    "end": 3144940,
    "text": "プログラミングの多くは、エージェントがプログラミングのすべてを引き継ぐという考え方があるように思う。"
  },
  {
    "start": 3146080,
    "end": 3152432,
    "text": "なぜなら、プログラミングの多くは反復することに価値があるからだ。"
  },
  {
    "start": 3152536,
    "end": 3162840,
    "text": "あるいは、初期バージョンを見るまでは何が欲しいのかよくわからないから、前もって何かを指定したくないという場合もあるだろう。"
  },
  {
    "start": 3163660,
    "end": 3171800,
    "text": "多くのプログラミングでは、初期バージョンを即座に返してくれて、それを超高速で反復できるようなシステムが必要だと思う。"
  },
  {
    "start": 3172220,
    "end": 3185528,
    "text": "最近登場したリレント・エージェントのように、開発環境のセットアップ、ソフトウェア・パッケージのインストール、すべての設定、データベースの設定、そしてアプリのデプロイまでやってくれるものはどうだろう。"
  },
  {
    "start": 3185704,
    "end": 3189592,
    "text": "それも夢に出てくることですか？"
  },
  {
    "start": 3189776,
    "end": 3190400,
    "text": "私はそう思う。"
  },
  {
    "start": 3190440,
    "end": 3191792,
    "text": "それは本当にクールだと思う。"
  },
  {
    "start": 3191936,
    "end": 3195184,
    "text": "ある種のプログラミングにはとてもクールだろう。"
  },
  {
    "start": 3195232,
    "end": 3197416,
    "text": "それはカーソルの範囲内ですか？"
  },
  {
    "start": 3197608,
    "end": 3202744,
    "text": "ああ、今はまだ積極的に取り組んでいるわけではないが、間違いなくある。"
  },
  {
    "start": 3202832,
    "end": 3207544,
    "text": "私たちは、プログラマーの生活をより簡単で楽しいものにしたいと考えています。"
  },
  {
    "start": 3207672,
    "end": 3213500,
    "text": "いくつかのことは本当に面倒で、多くの手順を踏む必要があり、それをエージェントに委ねたい。"
  },
  {
    "start": 3214090,
    "end": 3214954,
    "text": "それからいくつか。"
  },
  {
    "start": 3215002,
    "end": 3217794,
    "text": "あなたが仕事をしている間、バックグラウンドでエージェントを雇うことができる。"
  },
  {
    "start": 3217922,
    "end": 3222458,
    "text": "例えば、バックエンドとフロントエンドの両方があり、フロントエンドに取り組んでいるとしよう。"
  },
  {
    "start": 3222474,
    "end": 3226978,
    "text": "そうすれば、機能しないバックグラウンド・エージェントを持つことができ、自分が何をしているのかを把握することができる。"
  },
  {
    "start": 3227034,
    "end": 3234390,
    "text": "そうすれば、バックエンドの部分まで到達したときに、反復することができる最初のコードの一部を手に入れることができる。"
  },
  {
    "start": 3235890,
    "end": 3238070,
    "text": "それもとてもクールだ。"
  },
  {
    "start": 3238650,
    "end": 3244974,
    "text": "すでに話したことのひとつにスピードがあるが、もう少しそのことについてダラダラと話してもいいかな。"
  },
  {
    "start": 3245122,
    "end": 3251646,
    "text": "これを本当に速くするための技術的な詳細が、さまざまなところで語られている。"
  },
  {
    "start": 3251718,
    "end": 3256150,
    "text": "カーソルのあらゆる面で、カーソルのほとんどの面で、本当に速く感じる。"
  },
  {
    "start": 3256270,
    "end": 3258454,
    "text": "さっきも言ったように、おそらく一番遅いのは申請だろう。"
  },
  {
    "start": 3258502,
    "end": 3261170,
    "text": "申し訳ないが、痛みからだ。"
  },
  {
    "start": 3262350,
    "end": 3262966,
    "text": "苦痛だよ。"
  },
  {
    "start": 3262998,
    "end": 3266250,
    "text": "それは私たちが感じている痛みであり、私たちはそれを解決するために取り組んでいる。"
  },
  {
    "start": 3267390,
    "end": 3270990,
    "text": "ああ、つまり、何か、何か感じるものがあるんだ。"
  },
  {
    "start": 3271030,
    "end": 3273916,
    "text": "1秒とか2秒とか、遅く感じる。"
  },
  {
    "start": 3273948,
    "end": 3279040,
    "text": "つまり、他のすべてが本当に、本当に速いということだ。"
  },
  {
    "start": 3279500,
    "end": 3286840,
    "text": "これらのモデルのいくつかを作る方法、チャットを速くする方法、divを速くする方法についての技術的な詳細はありますか？"
  },
  {
    "start": 3287140,
    "end": 3289020,
    "text": "何か思い浮かぶものはありますか？"
  },
  {
    "start": 3289140,
    "end": 3291812,
    "text": "ああ、だから僕らが使っている戦略の多くを説明することができる。"
  },
  {
    "start": 3291876,
    "end": 3294000,
    "text": "ひとつ興味深いのはキャッシュウォーミングだ。"
  },
  {
    "start": 3294740,
    "end": 3300830,
    "text": "つまり、ユーザーがタイプしている最中に"
  },
  {
    "start": 3301570,
    "end": 3307430,
    "text": "おそらく、何らかの文脈を使うことになるだろうし、ユーザーが入力を終える前にそれを知ることができる。"
  },
  {
    "start": 3308690,
    "end": 3315850,
    "text": "前に説明したように、KVキャッシュを再利用することで、より低いレイテンシ、より低いコスト、クロスリクエストとなる。"
  },
  {
    "start": 3316010,
    "end": 3321018,
    "text": "ユーザーが入力を始めると、すぐにキャッシュを、例えば現在のファイルの内容で温めることができる。"
  },
  {
    "start": 3321194,
    "end": 3325386,
    "text": "エンターキーを押しても、トークンはほとんどない。"
  },
  {
    "start": 3325418,
    "end": 3328642,
    "text": "実際には、ジェネレーションを開始する前にプリフィルと計算をしなければならない。"
  },
  {
    "start": 3328706,
    "end": 3330594,
    "text": "これにより、TTFTは大幅に低下する。"
  },
  {
    "start": 3330682,
    "end": 3332990,
    "text": "kvキャッシュの仕組みについて教えてください。"
  },
  {
    "start": 3333070,
    "end": 3338570,
    "text": "ああ、だからトランスフォーマーのやり方は好きだよ。"
  },
  {
    "start": 3340870,
    "end": 3352414,
    "text": "トランスフォーマーが各トークンを独立に見るだけでなく、前のトークンを見ることができるメカニズムのように、トランスフォーマーが独立に各トークンを見るだけでなく、前のトークンを見ることができるメカニズムのひとつが、緊張のためのキーと値である。"
  },
  {
    "start": 3352542,
    "end": 3367778,
    "text": "一般的にアテンションが機能する方法は、現在のトークンにいくつかのクエリがあり、次に以前のすべてのトークンのキーと値があります。"
  },
  {
    "start": 3367954,
    "end": 3379218,
    "text": "デフォルトでは、チャットをするとき、モデルはトークンひとつひとつに対して、モデル全体を通してこのフォワードパスを行わなければならない。"
  },
  {
    "start": 3379314,
    "end": 3383310,
    "text": "行列の掛け算がたくさん起こるわけだから、本当に本当に遅い。"
  },
  {
    "start": 3383610,
    "end": 3393500,
    "text": "その代わりに、すでにキーと値を保存していて、それをGPUに保持している場合、直近のn個のトークンをソートしたとします。"
  },
  {
    "start": 3393540,
    "end": 3406092,
    "text": "n+1トークンの出力トークンを計算したい場合、最初のnトークンをモデル全体に渡す必要はない。"
  },
  {
    "start": 3406276,
    "end": 3409788,
    "text": "だから、最後のトークンをフォワードパスで通過させるだけでいい。"
  },
  {
    "start": 3409924,
    "end": 3419728,
    "text": "そして、注意を払うときには、計算されたキーと値を再利用することになる。これは、トランスフォーマーの唯一のシーケンシャルな部分、あるいはシーケンシャルに依存する部分である。"
  },
  {
    "start": 3419864,
    "end": 3425980,
    "text": "プロンプトのキャッシュなど、より高度なキャッシュはあるのでしょうか？"
  },
  {
    "start": 3426520,
    "end": 3430700,
    "text": "ええ、他にもキャッシュの種類はあります。"
  },
  {
    "start": 3432480,
    "end": 3446180,
    "text": "カーソルタブでできる面白いことのひとつは、基本的に、ユーザーが提案を受け入れたかどうかを予測し、別のリクエストをトリガーできることだ。"
  },
  {
    "start": 3446600,
    "end": 3453864,
    "text": "もし彼らがそれを受け入れたらどうなるかを推測しているのだから。"
  },
  {
    "start": 3453992,
    "end": 3461700,
    "text": "そうすれば、キャッシュされた値、つまりこの提案があって、タブを押せばすぐに次の提案が待っている。"
  },
  {
    "start": 3462360,
    "end": 3474266,
    "text": "これは一種の巧妙なヒューリスティック・トリックで、より高度なキャッシュを使用し、実際にはモデルに変更がないにもかかわらず、速く感じることができる。"
  },
  {
    "start": 3474338,
    "end": 3480490,
    "text": "もしKVキャッシュを小さくすることができれば、その利点のひとつは、より多くの推測が可能になることだ。"
  },
  {
    "start": 3480530,
    "end": 3483990,
    "text": "役に立つかもしれない10のことを紹介しよう。"
  },
  {
    "start": 3485690,
    "end": 3490650,
    "text": "次の10個を予測し、ユーザーが10個のうちの1個を当てる可能性がある。"
  },
  {
    "start": 3490770,
    "end": 3494470,
    "text": "ユーザーが、あなたが見せたものを正確にヒットさせるよりも、はるかに高い確率です。"
  },
  {
    "start": 3494900,
    "end": 3498972,
    "text": "もしかしたら、彼らが別の文字をタイプして、私たちがキャッシュの中の別の何かをヒットしたのかもしれない。"
  },
  {
    "start": 3499076,
    "end": 3513036,
    "text": "一般的な現象としては、このようなトリックがありますが、RLではモデルからのサンプルが1つだけではあまり良くない場合にも超便利だと思います。"
  },
  {
    "start": 3513148,
    "end": 3522470,
    "text": "10通りのことを予測した場合、そのうちの1つが当たる確率の方がはるかに高い。"
  },
  {
    "start": 3522550,
    "end": 3526246,
    "text": "パッシブなKカーブやRLの一部がある。"
  },
  {
    "start": 3526438,
    "end": 3533650,
    "text": "RLでは、このパッシブK現象を利用して、さまざまな予測を立てることができる。"
  },
  {
    "start": 3534150,
    "end": 3545198,
    "text": "これを考えるひとつの方法として、モデルは内部的に、どの重要な事柄が正しいのか、あるいはどの重要な事柄が人間の望むものなのかについて、不確実性があることを知っている。"
  },
  {
    "start": 3545374,
    "end": 3560668,
    "text": "ルルデナ・カーソル・タブ・モデルを使うとき、私たちがやっていることのひとつは、モデルが出す100種類の提案のうち、どれが人間にとってより従順かを予測することだ。"
  },
  {
    "start": 3560764,
    "end": 3563160,
    "text": "人間が他のものよりも好きなものはどれだろう？"
  },
  {
    "start": 3563820,
    "end": 3581052,
    "text": "そして、人間がより好むものには報酬を与え、人間がより好むものには罰を与え、人間がより好む提案を出力するようにモデルを訓練する。"
  },
  {
    "start": 3581116,
    "end": 3584960,
    "text": "パッシブKカーブを利用したRLループのようなものは非常に便利だ。"
  },
  {
    "start": 3585660,
    "end": 3588404,
    "text": "オマーンならもっと詳しく説明できるかもしれない。"
  },
  {
    "start": 3588572,
    "end": 3597236,
    "text": "ああ、スピードとは少し違うけど、技術的には小さいモデルで逃げられるから、それを結びつけたということだよ。"
  },
  {
    "start": 3597268,
    "end": 3601120,
    "text": "もし、小さい方のモデルを修理して、大きい方と同じ性能を得たとしたら。"
  },
  {
    "start": 3602690,
    "end": 3603490,
    "text": "という感じだ。"
  },
  {
    "start": 3603570,
    "end": 3608882,
    "text": "ツバメはKVについて、KVキャッシュのサイズを減らすことについて話していた。"
  },
  {
    "start": 3608946,
    "end": 3611510,
    "text": "他にもスピードに役立つテクニックがある。"
  },
  {
    "start": 3612570,
    "end": 3619430,
    "text": "年前のことだが、人々は主にマルチアテンションを使用していた。"
  },
  {
    "start": 3620170,
    "end": 3628442,
    "text": "グループクエリーやマルチクエリーアテンションなど、より効率的なアテンションスキームへの移行が進んでいると思う。"
  },
  {
    "start": 3628626,
    "end": 3636346,
    "text": "これは、バッチサイズが大きい場合、トークンをより速く生成することができるので、本当に便利です。"
  },
  {
    "start": 3636538,
    "end": 3644630,
    "text": "ここで興味深いのは、最初のトークンのプレフィル速度に影響がないことだ。"
  },
  {
    "start": 3645050,
    "end": 3648722,
    "text": "これが重要なのは、トークンを生成することだ。"
  },
  {
    "start": 3648906,
    "end": 3649738,
    "text": "なぜだろう？"
  },
  {
    "start": 3649794,
    "end": 3658776,
    "text": "なぜなら、トークンを生成するときにボトルネックになるのではなく、この超並列化可能な行列乗算をすべてのトークンで行うからだ。"
  },
  {
    "start": 3658888,
    "end": 3667260,
    "text": "バッチサイズが大きい長いコンテキストの場合、キャッシュのキーと値をどれだけ早く読み込めるかがボトルネックになる。"
  },
  {
    "start": 3668080,
    "end": 3670688,
    "text": "つまり、メモリ帯域幅だ。"
  },
  {
    "start": 3670704,
    "end": 3672208,
    "text": "どうすればもっと速くなるのか？"
  },
  {
    "start": 3672384,
    "end": 3675088,
    "text": "これらのキーと値のサイズを圧縮することができる。"
  },
  {
    "start": 3675184,
    "end": 3680794,
    "text": "マルチクエリ・アテンションはその中でも最も攻撃的なもので、通常はマルチヘッド・アテンションが使われる。"
  },
  {
    "start": 3680842,
    "end": 3688994,
    "text": "あなたはいくつかの、引用符なしの注目ヘッドといくつかの種類のクエリーヘッドを持っている。"
  },
  {
    "start": 3689162,
    "end": 3694630,
    "text": "マルチクエリは、クエリ・ヘッドを保持するだけで、すべてのキー・バリュー・ヘッドは削除される。"
  },
  {
    "start": 3695250,
    "end": 3701002,
    "text": "キーバリューヘッドは1種類しかなく、残りのクエリーヘッドはすべてある。"
  },
  {
    "start": 3701186,
    "end": 3706742,
    "text": "グループクエリでは、代わりにすべてのクエリヘッドを保存します。"
  },
  {
    "start": 3706886,
    "end": 3715702,
    "text": "その場合、キーとバリューの頭数は少なくなるが、1つにはならない。"
  },
  {
    "start": 3715886,
    "end": 3719930,
    "text": "とにかく、ここで重要なのは、KVキャッシュのサイズを小さくしているだけだということだ。"
  },
  {
    "start": 3720310,
    "end": 3722126,
    "text": "それならMLAがある。"
  },
  {
    "start": 3722318,
    "end": 3725726,
    "text": "ああ、マルチ潜伏はもう少し複雑だ。"
  },
  {
    "start": 3725918,
    "end": 3739590,
    "text": "この仕組みは、全ヘッドのキーと値を1つの潜在ベクトルに変換し、推論時に展開する。"
  },
  {
    "start": 3739750,
    "end": 3743410,
    "text": "MLAはDeepseqという会社のものだ。"
  },
  {
    "start": 3743990,
    "end": 3745850,
    "text": "なかなか面白いアルゴリズムだ。"
  },
  {
    "start": 3746150,
    "end": 3758510,
    "text": "MQAでも他の場所でも、KVヘッドの数を減らすことが重要なアイデアなのかもしれない。"
  },
  {
    "start": 3758630,
    "end": 3763320,
    "text": "そうすることで得られる利点は、つまり、数が減るということだ。"
  },
  {
    "start": 3763440,
    "end": 3772720,
    "text": "理論的には、キーと値がそれぞれ異なるように、実際には多くの違いを求めるのかもしれない。"
  },
  {
    "start": 3772800,
    "end": 3783744,
    "text": "サイズを小さくする1つの方法は、すべてのキーと値を1つの大きな共有ベクターに保持し、トークンごとに小さなベクターを持つことだ。"
  },
  {
    "start": 3783832,
    "end": 3791268,
    "text": "というのも、小さいものしか保存できないからです。"
  },
  {
    "start": 3791364,
    "end": 3801300,
    "text": "最終的な計算をするときには、メモリに制約があることを忘れないでほしい。"
  },
  {
    "start": 3801340,
    "end": 3817882,
    "text": "ということは、もし潜在ベクトルを展開し直すことができれば、その方がはるかに効率的なのです。"
  },
  {
    "start": 3817946,
    "end": 3818122,
    "text": "そうだね。"
  },
  {
    "start": 3818146,
    "end": 3830710,
    "text": "キーと値を別々に持ち、ペアごとに照合してクエリを実行するほうが、少なくともそのやりとりにおいては、すべてを1つに圧縮するよりも豊かかもしれない。"
  },
  {
    "start": 3831170,
    "end": 3831850,
    "text": "オーケー。"
  },
  {
    "start": 3831970,
    "end": 3835266,
    "text": "そのすべてが、メモリに縛られていることへの対処なんだ。"
  },
  {
    "start": 3835378,
    "end": 3835898,
    "text": "そうだね。"
  },
  {
    "start": 3835994,
    "end": 3849558,
    "text": "KVキャッシュに割り当てられる領域が少なくなったので、キャッシュをより大きくすることができます。"
  },
  {
    "start": 3849574,
    "end": 3870596,
    "text": "より積極的に、より多くのものをキャッシュすることができ、より多くのキャッシュヒットを得ることができ、先に説明したような理由で最初のトークンまでの時間を短縮するのに役立ちます。"
  },
  {
    "start": 3870628,
    "end": 3874332,
    "text": "そのスピードは、まあ、プロンプトを確実に大きくすることもできる。"
  },
  {
    "start": 3874396,
    "end": 3874836,
    "text": "ああ、そうだ。"
  },
  {
    "start": 3874868,
    "end": 3883556,
    "text": "KVキャッシュのサイズは、基本的なものと同様に、すべてのプロンプトのサイズに並列処理されるプロンプトの数を掛けたものになります。"
  },
  {
    "start": 3883588,
    "end": 3891772,
    "text": "バッチサイズやプロンプトのサイズを大きくしても、トークン生成のレイテンシを悪化させることはありません。"
  },
  {
    "start": 3891876,
    "end": 3894252,
    "text": "アルヴィド、君はシャドウ・ワークスペースというブログ記事を書いたね。"
  },
  {
    "start": 3894316,
    "end": 3894612,
    "text": "そうだ。"
  },
  {
    "start": 3894676,
    "end": 3896372,
    "text": "バックグラウンドでコードを反復する。"
  },
  {
    "start": 3896476,
    "end": 3896740,
    "text": "そうだね。"
  },
  {
    "start": 3896780,
    "end": 3897960,
    "text": "どうしたんだ？"
  },
  {
    "start": 3898390,
    "end": 3906650,
    "text": "はっきり言って、私たちはバックグラウンドでいろいろなことが起こっていることを望んでいるし、今、いろいろなことを試しているところだ。"
  },
  {
    "start": 3907510,
    "end": 3916214,
    "text": "キャッシュを温めたり、例えばコマンドKのプロンプトに入る正しいコンテキストを把握したりする以外には、あまりそういうことはしていない。"
  },
  {
    "start": 3916382,
    "end": 3930688,
    "text": "つまり、バックグラウンドで実際に計算を費やすことができれば、次の数行を予測するよりも少し長い時間軸でユーザーを助けることができるということだ。"
  },
  {
    "start": 3930744,
    "end": 3933928,
    "text": "あと10分で何を作るつもりだ？"
  },
  {
    "start": 3934024,
    "end": 3938848,
    "text": "バックグラウンドで行うことで、より多くの計算を費やすことができる。"
  },
  {
    "start": 3938984,
    "end": 3960200,
    "text": "私たちが実装したシャドウ・ワークスペースのアイデアは、内部で実験に使っているのですが、バックグラウンドで何かをすることの利点を実際に得るためには、モデルにフィードバックする何らかのシグナルが必要だということです。"
  },
  {
    "start": 3960740,
    "end": 3962876,
    "text": "というわけで、Oの一本はその良い例だ。"
  },
  {
    "start": 3962948,
    "end": 3967960,
    "text": "パフォーマンスを向上させるもうひとつの方法は、モデルを反復させてフィードバックを得ることだ。"
  },
  {
    "start": 3968660,
    "end": 3976916,
    "text": "プログラマーにとって非常に重要なフィードバックのひとつに、言語サーバーがある。"
  },
  {
    "start": 3976948,
    "end": 3991794,
    "text": "言語ごとに独立した言語サーバーのようなものがあり、間違った型を使っているとエラーになったり、定義に移動してコードの構造を理解したりすることができる。"
  },
  {
    "start": 3991882,
    "end": 4003474,
    "text": "言語サーバーは、typescriptの人たちによって開発されたtypescript言語サーバーや、Rubstの人たちによって開発されたRubst言語サーバーのように、開発された拡張機能である。"
  },
  {
    "start": 4003522,
    "end": 4012270,
    "text": "その対コードは、対コードにすべての異なる言語を組み込む必要はなく、リンティングの目的で既存のコンパイラー・インフラストラクチャを使用することができる。"
  },
  {
    "start": 4012730,
    "end": 4019218,
    "text": "糸くずを取るためであり、定義を確認するためであり、使用している正しい型を確認するためでもある。"
  },
  {
    "start": 4019394,
    "end": 4021250,
    "text": "タイプチェックもしているのか？"
  },
  {
    "start": 4021370,
    "end": 4023910,
    "text": "そう、タイプチェックをし、リファレンスに行く。"
  },
  {
    "start": 4025610,
    "end": 4028458,
    "text": "大きなプロジェクトで仕事をしているときは、それが必要だ。"
  },
  {
    "start": 4028634,
    "end": 4032596,
    "text": "もしそれがなければ、大きなプロジェクトでコーディングするのは本当に難しい。"
  },
  {
    "start": 4032708,
    "end": 4040316,
    "text": "カーソルの中で、言語サーバープロトコルの通信がどのように使われているのか、もう一度教えてください。"
  },
  {
    "start": 4040428,
    "end": 4043556,
    "text": "NVSのコードと同じように、プログラマーに見せるためにカーソルで使われているのだ。"
  },
  {
    "start": 4043628,
    "end": 4049320,
    "text": "ということは、同じ情報をモデル（I.O.モデル）にも見せたいということだ。"
  },
  {
    "start": 4049900,
    "end": 4054676,
    "text": "バックグラウンドで行うため、ユーザーに影響を与えない方法で行いたい。"
  },
  {
    "start": 4054788,
    "end": 4066390,
    "text": "シャドウ・ワークスペースのアイデアは、カーソルを非表示にする別のウィンドウを作るというものだ。"
  },
  {
    "start": 4066470,
    "end": 4068806,
    "text": "だから、このフラグを設定すればエレクトロンは隠される。"
  },
  {
    "start": 4068878,
    "end": 4070630,
    "text": "窓はあるが、実際には見えない。"
  },
  {
    "start": 4070710,
    "end": 4078610,
    "text": "このウィンドウの中では、AIエージェントは保存しない限り、好きなようにコードを修正できる。"
  },
  {
    "start": 4079150,
    "end": 4083966,
    "text": "その後、リンターからフィードバックを得て、定義に行き、コードを反復することができる。"
  },
  {
    "start": 4084038,
    "end": 4088270,
    "text": "文字通り、まるでバックグラウンドですべてを動かしているかのようにね。"
  },
  {
    "start": 4088430,
    "end": 4090686,
    "text": "そうだね。"
  },
  {
    "start": 4090798,
    "end": 4093926,
    "text": "それが最終的なバージョンであり、あなたが望むものだ。"
  },
  {
    "start": 4093958,
    "end": 4100566,
    "text": "このブログの記事の多くは、それをどうやって実現するかについて書いている。"
  },
  {
    "start": 4100678,
    "end": 4105630,
    "text": "ユーザーのマシンに設置し、ユーザーの環境を正確に反映させたい。"
  },
  {
    "start": 4105790,
    "end": 4122672,
    "text": "Linuxでは、ファイルシステムを実際にミラーリングして、AIがファイルに変更を加えるというクールなことができる。"
  },
  {
    "start": 4122776,
    "end": 4131980,
    "text": "一方、マックやウィンドウズでは少し難しい。"
  },
  {
    "start": 4134080,
    "end": 4136080,
    "text": "楽しい技術的な問題だ。"
  },
  {
    "start": 4136120,
    "end": 4141759,
    "text": "そういうわけで、私が好きなハチャメチャかもしれないが面白いアイデアのひとつが、セーブ時にロックをかけるというものだ。"
  },
  {
    "start": 4142819,
    "end": 4154643,
    "text": "基本的には、言語モデルにディスクへの保存をロックさせ、ディスクに保存されたファイルのグランドトゥルース版で操作する代わりに、以前はシャドウ・ワークスペースだったものを操作することができる。"
  },
  {
    "start": 4154691,
    "end": 4158963,
    "text": "メモリー上にしか存在しない保存されていないもので、リンターエラーが発生する。"
  },
  {
    "start": 4159051,
    "end": 4161155,
    "text": "そして、コードを実行しようとする。"
  },
  {
    "start": 4161267,
    "end": 4171365,
    "text": "ロックがかかっているという小さな警告が表示されるだけで、同時並行で物事を進めようとしている場合は言語サーバーから、同時並行で物事を進めようとしている場合はシャドウ・ワークスペースから、ロックを取り戻すことになります。"
  },
  {
    "start": 4171557,
    "end": 4172909,
    "text": "それはとてもエキサイティングな未来だ。"
  },
  {
    "start": 4172989,
    "end": 4189565,
    "text": "ところで、少し余談になりますが、モデルにファイルを変更させることは、人々にとっては恐ろしいことですが、エージェントに一連の作業をさせ、翌日戻ってきて観察することができるのは本当に素晴らしいことです。"
  },
  {
    "start": 4189717,
    "end": 4191643,
    "text": "同僚とかそんな感じ。"
  },
  {
    "start": 4191781,
    "end": 4192272,
    "text": "そうだね。"
  },
  {
    "start": 4192376,
    "end": 4205560,
    "text": "単純なことであれば、ユーザーの代わりにプログラミングをしながら数分のスパンで何かをするような場合、ユーザーのマシンでローカルに何かを動作させることは理にかなっている。"
  },
  {
    "start": 4205680,
    "end": 4213360,
    "text": "より積極的に、より大きな変更を行い、より長い時間がかかるような場合は、おそらくサンドボックスのリモート環境で行うことになると思う。"
  },
  {
    "start": 4213520,
    "end": 4227082,
    "text": "このリモート・サンドボックスを使って、どうやってユーザーの環境を正確に再現するのか、あるいは、コードを実行するのと実質的に同等になるまでほとんど再現するのか、というのも、非常に厄介な問題だ。"
  },
  {
    "start": 4227186,
    "end": 4230790,
    "text": "気になるのは、どんなエージェンシーにコーディングを依頼したいのか？"
  },
  {
    "start": 4231610,
    "end": 4232882,
    "text": "バグを見つけてほしいのか？"
  },
  {
    "start": 4232906,
    "end": 4235390,
    "text": "新機能の実装を望むか？"
  },
  {
    "start": 4235690,
    "end": 4236810,
    "text": "どのようなエージェントがお望みですか？"
  },
  {
    "start": 4236890,
    "end": 4240750,
    "text": "ところで、エージェントについて考えるとき、私はコーディングのことだけを考えているわけではない。"
  },
  {
    "start": 4241250,
    "end": 4241778,
    "text": "私はそう思う。"
  },
  {
    "start": 4241834,
    "end": 4243390,
    "text": "練習のために。"
  },
  {
    "start": 4243690,
    "end": 4246042,
    "text": "今回のポッドキャストはビデオ編集。"
  },
  {
    "start": 4246146,
    "end": 4266438,
    "text": "Adobeのコードを見ると、後ろにコードがあり、非常に稚拙なコードですが、例えば、コードを使ってプレミアとやり取りすることができます。"
  },
  {
    "start": 4266574,
    "end": 4273930,
    "text": "編集とは直接関係のない多くの作業を自動化することで、そのようなあらゆる種類の作業をイメージしている。"
  },
  {
    "start": 4274760,
    "end": 4275288,
    "text": "そうだ。"
  },
  {
    "start": 4275384,
    "end": 4276936,
    "text": "なるほど、そういうことを考えていたんだ。"
  },
  {
    "start": 4276968,
    "end": 4298384,
    "text": "論理的なバグ、論理的でないバグ、スピリチュアルなバグ、実装の大きな方向性みたいなもの、そういうものをね。"
  },
  {
    "start": 4298552,
    "end": 4299320,
    "text": "それは意見だ。"
  },
  {
    "start": 4299360,
    "end": 4300016,
    "text": "バグ発見。"
  },
  {
    "start": 4300088,
    "end": 4311216,
    "text": "そう、つまり、素朴にバグを見つけるように促されただけなのに、これらのモデルがバグを見つけるのが下手なのは本当に興味深い。"
  },
  {
    "start": 4311328,
    "end": 4312784,
    "text": "最も賢いモデルでさえ。"
  },
  {
    "start": 4312832,
    "end": 4313580,
    "text": "その通りだ。"
  },
  {
    "start": 4313920,
    "end": 4314696,
    "text": "ゼロ1でもね。"
  },
  {
    "start": 4314768,
    "end": 4315940,
    "text": "それをどう説明する？"
  },
  {
    "start": 4316280,
    "end": 4317860,
    "text": "いい直感はありますか？"
  },
  {
    "start": 4318600,
    "end": 4328336,
    "text": "これらのモデルは、トレーニング前の分布を実に強く反映していると思うし、損失が小さくなるにつれて一般化していくと思う。"
  },
  {
    "start": 4328448,
    "end": 4336404,
    "text": "損失と規模がかなり小さいか、損失が十分に小さいので、コードで完全に一般化しているとは思えない。"
  },
  {
    "start": 4336452,
    "end": 4344956,
    "text": "フロンティアモデルが得意としているのは、コード生成と質問応答だ。"
  },
  {
    "start": 4345148,
    "end": 4366030,
    "text": "GitHubにあるすべてのコード、何兆ものトークン、スタック・オーバーフローやGitHubの問題のようなものでの質問と回答など、オンラインにはあまり存在しないものです。"
  },
  {
    "start": 4366150,
    "end": 4369830,
    "text": "例えば、カーソル・タブは次の編集を予測することを目的としている。"
  },
  {
    "start": 4369910,
    "end": 4373638,
    "text": "これまでの編集を考えると、もろさのようなものが表れている。"
  },
  {
    "start": 4373694,
    "end": 4385698,
    "text": "バグの検出はもうひとつの良い例で、実際にバグを検出して修正を提案する例はそれほど多くなく、モデルたちは本当に苦労している。"
  },
  {
    "start": 4385854,
    "end": 4396722,
    "text": "それは、一般的なコードで事前に訓練されたモデルからカーソルタブの目的への素晴らしい移行を得るのと同じように、モデルを移行する問題だと思う。"
  },
  {
    "start": 4396906,
    "end": 4402338,
    "text": "コードからバグを検出するのが得意な一般化されたモデルも、非常によく似ている。"
  },
  {
    "start": 4402394,
    "end": 4405242,
    "text": "ただ、その方向に少し誘導する必要がある。"
  },
  {
    "start": 4405386,
    "end": 4410550,
    "text": "はっきり言って、事前トレーニングを受けている間は、彼らはコードを本当によく理解していると思う。"
  },
  {
    "start": 4411170,
    "end": 4421900,
    "text": "構築されつつある表現は、ほぼ間違いなく流れのどこかで、モデルは何か大ざっぱなことが起こっているのかもしれないと知っている。"
  },
  {
    "start": 4421980,
    "end": 4434680,
    "text": "大雑把なところもあるが、実際にその大雑把さを引き出しているのは、人間はどのバグが本当に重要なのかを見極めているということだ。"
  },
  {
    "start": 4436020,
    "end": 4438480,
    "text": "実際に何か怪しいことがあると言っているだけではない。"
  },
  {
    "start": 4439060,
    "end": 4440412,
    "text": "この大雑把さは些細なことなのだろうか？"
  },
  {
    "start": 4440476,
    "end": 4441316,
    "text": "これは大雑把か？"
  },
  {
    "start": 4441388,
    "end": 4442822,
    "text": "サーバーをダウンさせるつもりですか？"
  },
  {
    "start": 4442956,
    "end": 4448498,
    "text": "なぜスタッフ・エンジニアなのかという文化的な知識もその一部かもしれない。"
  },
  {
    "start": 4448554,
    "end": 4449234,
    "text": "スタッフ・エンジニア？"
  },
  {
    "start": 4449282,
    "end": 4457842,
    "text": "スタッフ・エンジニアが優秀なのは、3年前に誰かが大雑把なコードを書いてサーバーをダウンさせたことを知っているからだ。"
  },
  {
    "start": 4457986,
    "end": 4462790,
    "text": "とは対照的だ。"
  },
  {
    "start": 4463690,
    "end": 4465930,
    "text": "これは実験のようなものだ。"
  },
  {
    "start": 4465970,
    "end": 4467450,
    "text": "少々のバグは問題ない。"
  },
  {
    "start": 4467490,
    "end": 4470314,
    "text": "ただ実験して感触を確かめようとしているようなものだ。"
  },
  {
    "start": 4470482,
    "end": 4482410,
    "text": "実験を書いているときに、そのモデルが本当にうっとうしいと感じるなら、それは本当に悪いことだ。しかし、超生産的なものを書いているのなら、データベースを書いているのなら、postgresやLinux、あるいはあなたのリナス・トーバルズでコードを書いているのだろう。"
  },
  {
    "start": 4482570,
    "end": 4491190,
    "text": "エッジケースであっても容認できないし、ユーザーがどれだけ偏執狂的かという校正が必要なだけだ。"
  },
  {
    "start": 4491570,
    "end": 4497618,
    "text": "それでも、最大限のパラノイアを入れても、まだまったく理解できない。"
  },
  {
    "start": 4497714,
    "end": 4498570,
    "text": "ああ、そうだ。"
  },
  {
    "start": 4498730,
    "end": 4502714,
    "text": "つまり、でも、これは人間にとっても難しいことなんだ。"
  },
  {
    "start": 4502842,
    "end": 4505922,
    "text": "どのコードのどの行が重要で、どの行があなたらしくないのか。"
  },
  {
    "start": 4506026,
    "end": 4520110,
    "text": "ウェブサイトにおける原則のひとつに、あるコードが大きなダメージを与える可能性がある場合、この行は危険であるというコメントを全角で10回付け加えるべきだというものがありますね。"
  },
  {
    "start": 4520530,
    "end": 4526240,
    "text": "いや、関数内のコード1行1行をそうしなければならない、と言っているのだ。"
  },
  {
    "start": 4526370,
    "end": 4527964,
    "text": "実に深い。"
  },
  {
    "start": 4528052,
    "end": 4533388,
    "text": "エンジニアは次のステップに進むからだ。"
  },
  {
    "start": 4533444,
    "end": 4537660,
    "text": "同じ人間でも、タイタニックと同期させる方法を忘れているだけかもしれない。"
  },
  {
    "start": 4537700,
    "end": 4538916,
    "text": "単一の機能。"
  },
  {
    "start": 4539108,
    "end": 4542844,
    "text": "コードの一部分を見ただけでは、そのことがよくわからないかもしれない。"
  },
  {
    "start": 4542932,
    "end": 4543108,
    "text": "そうだね。"
  },
  {
    "start": 4543124,
    "end": 4560368,
    "text": "これは、今日のAIモデルにも部分的に当てはまると思いますが、実際に危険、危険、危険と一行一行に書くと、モデルはその部分に注目し、バグを見つけやすくなります。"
  },
  {
    "start": 4560464,
    "end": 4568008,
    "text": "これは、ラベリングコードがどれほどのダメージを与えるかを示す、実に良い習慣なんだ。"
  },
  {
    "start": 4568184,
    "end": 4569912,
    "text": "賛否両論あるよね。"
  },
  {
    "start": 4570096,
    "end": 4571820,
    "text": "醜いと思う人もいる。"
  },
  {
    "start": 4572320,
    "end": 4572824,
    "text": "飲み込む。"
  },
  {
    "start": 4572872,
    "end": 4574584,
    "text": "まあ、実際、そうだと思うよ。"
  },
  {
    "start": 4574632,
    "end": 4588228,
    "text": "実際、これは僕がアリアから学んだことのひとつなんだけど、美的感覚としては好きじゃないんだけど、モデルにとっては便利で、人間にとっては忘れてしまうことが多いんだ。"
  },
  {
    "start": 4588284,
    "end": 4590892,
    "text": "小さなミスを犯すのは本当に簡単だ。"
  },
  {
    "start": 4590996,
    "end": 4595892,
    "text": "サーバーをダウンさせればいいんだ。"
  },
  {
    "start": 4595996,
    "end": 4602540,
    "text": "もちろん、テストは好きだし、どんなことでもやるけど、常に気をつけなきゃいけないことがある。"
  },
  {
    "start": 4602580,
    "end": 4602748,
    "text": "そうだね。"
  },
  {
    "start": 4602764,
    "end": 4604324,
    "text": "普通のドコモのストリングスのようにね。"
  },
  {
    "start": 4604372,
    "end": 4609580,
    "text": "人は変化を起こすとき、この本をざっと読んで、ああ、こうすればいいんだ、と思うことが多いと思う。"
  },
  {
    "start": 4610840,
    "end": 4614820,
    "text": "そのようなことがないように、彼らにそれを指摘する必要がある。"
  },
  {
    "start": 4615720,
    "end": 4618540,
    "text": "ああ、大きなダメージを与える可能性があることを肝に銘じなければならない。"
  },
  {
    "start": 4619560,
    "end": 4621360,
    "text": "そういうことはあまり考えていない。"
  },
  {
    "start": 4621480,
    "end": 4625800,
    "text": "そう、どうすればこれがどう機能するのかを理解し、改善できるかを考えるんだ。"
  },
  {
    "start": 4625840,
    "end": 4629160,
    "text": "他の方向について考えるのはそれからだ。"
  },
  {
    "start": 4629240,
    "end": 4634188,
    "text": "あらゆるものに対して正式な検証ができるようになるまでは、好きなことをすればいい。"
  },
  {
    "start": 4634244,
    "end": 4638764,
    "text": "証明に合格すれば、バグを導入していないことが確実にわかる。"
  },
  {
    "start": 4638852,
    "end": 4641716,
    "text": "具体的に、その未来はどのようなものだと思いますか？"
  },
  {
    "start": 4641908,
    "end": 4654132,
    "text": "人々はテストを書かなくなり、関数を書くようにモデルが提案し、モデルが仕様を提案し、その仕様をレビューするようになると思う。"
  },
  {
    "start": 4654196,
    "end": 4661270,
    "text": "その間に、スマート推論モデルは、実装が仕様に従っていることの証明を計算する。"
  },
  {
    "start": 4661970,
    "end": 4664130,
    "text": "ほとんどの試合でそうだと思う。"
  },
  {
    "start": 4664250,
    "end": 4678354,
    "text": "これは、先ほどあなたが話していた、ソフトウェアで何をしたいのかという意図を特定することの難しさ、つまり、意図を特定することが本当に難しいからこそ、それがあなたの意図に実際に合致していることを証明することも本当に難しくなってしまう、ということに少し通じていると思いませんか？"
  },
  {
    "start": 4678402,
    "end": 4681070,
    "text": "そのスペックを生み出すのが難しいと思っているようにね。"
  },
  {
    "start": 4681690,
    "end": 4682090,
    "text": "そうだね。"
  },
  {
    "start": 4682130,
    "end": 4687748,
    "text": "あるいは、あるスペックについてなら、できるかもしれない。"
  },
  {
    "start": 4687844,
    "end": 4690716,
    "text": "形式的な検証を実際に行うことができるのかという疑問があると思う。"
  },
  {
    "start": 4690868,
    "end": 4692804,
    "text": "そんなことが可能なのか？"
  },
  {
    "start": 4692852,
    "end": 4694812,
    "text": "そこにはもっと掘り下げるべきことがあるように思う。"
  },
  {
    "start": 4694916,
    "end": 4699460,
    "text": "また、たとえスペックがあったとしても、そのスペックをどうやって持っているのか？"
  },
  {
    "start": 4699580,
    "end": 4700964,
    "text": "仕様書は自然言語で書かれているか？"
  },
  {
    "start": 4701012,
    "end": 4701620,
    "text": "地図はどうですか？"
  },
  {
    "start": 4701700,
    "end": 4705676,
    "text": "いや、スペックは正式なものになるだろう。"
  },
  {
    "start": 4705708,
    "end": 4710584,
    "text": "ということは、スペック言語では簡単に規定できないことを気にしているのだと思う。"
  },
  {
    "start": 4710732,
    "end": 4712752,
    "text": "なるほど、なるほど。"
  },
  {
    "start": 4712816,
    "end": 4715856,
    "text": "形式的検証に対する反論が必要なのかもしれない。"
  },
  {
    "start": 4715968,
    "end": 4716312,
    "text": "そうだね。"
  },
  {
    "start": 4716376,
    "end": 4720520,
    "text": "心配なのは、ユニットテストのようなものを置き換える巨大な文書があることだ。"
  },
  {
    "start": 4720680,
    "end": 4722300,
    "text": "ええ、ええ、ええ。"
  },
  {
    "start": 4723240,
    "end": 4731380,
    "text": "また、スペック言語を進化させることで、今現在スペック言語にないものを取り込むこともできるだろう。"
  },
  {
    "start": 4732880,
    "end": 4734720,
    "text": "どうだろう、とてもエキサイティングだと思う。"
  },
  {
    "start": 4734880,
    "end": 4739938,
    "text": "あなたは単一の関数についてだけでなく、コードベース全体について話しているのだ。"
  },
  {
    "start": 4740064,
    "end": 4743910,
    "text": "コードベース全体はもっと大変だと思うが、それはぜひ手に入れたいものだ。"
  },
  {
    "start": 4743950,
    "end": 4753614,
    "text": "最近、ハードウェアまで正式に検証できるような仕事がたくさんあるので、可能なはずだと思う。"
  },
  {
    "start": 4753662,
    "end": 4762490,
    "text": "Cコードを正式に検証し、GCCコンパイラーを通して正式に検証し、ベリログを通してハードウェアまで検証する。"
  },
  {
    "start": 4763030,
    "end": 4766672,
    "text": "とてつもなく大きなシステムだが、実際に機能している。"
  },
  {
    "start": 4766696,
    "end": 4776496,
    "text": "大きなコードベースは、多層システムのようなもので、分解してそれぞれの部分を正式に検証することができれば、可能だと思います。"
  },
  {
    "start": 4776568,
    "end": 4778432,
    "text": "スペックの問題は本当に問題だと思う。"
  },
  {
    "start": 4778496,
    "end": 4780616,
    "text": "副作用にはどのように対処していますか？"
  },
  {
    "start": 4780808,
    "end": 4788528,
    "text": "あるいは、ストライプAPIを呼び出すような外部依存関係をどのように扱うのか。"
  },
  {
    "start": 4788584,
    "end": 4790216,
    "text": "すべてにこれをすることはできない。"
  },
  {
    "start": 4790408,
    "end": 4792420,
    "text": "使用するものすべてにこれをやってくれる？"
  },
  {
    "start": 4793240,
    "end": 4800688,
    "text": "言語モデルがある場合、もしかしたら人々は言語モデルをプリミティブとして使うかもしれない。"
  },
  {
    "start": 4800704,
    "end": 4802584,
    "text": "どうやってそれを含めるんだ？"
  },
  {
    "start": 4802672,
    "end": 4807408,
    "text": "言語モデルについてはどうなのか？"
  },
  {
    "start": 4807544,
    "end": 4814608,
    "text": "例えば、言語モデルの整合性を証明することは可能だと思う。"
  },
  {
    "start": 4814784,
    "end": 4819020,
    "text": "あるいは、それが実際に正しい答えを与えていることを証明することもできる。"
  },
  {
    "start": 4820050,
    "end": 4821138,
    "text": "それが夢だ。"
  },
  {
    "start": 4821274,
    "end": 4821890,
    "text": "ええ、そうです。"
  },
  {
    "start": 4821930,
    "end": 4823670,
    "text": "つまり、それが可能かどうかということだ。"
  },
  {
    "start": 4824410,
    "end": 4825994,
    "text": "それが君のI have a dreamのスピーチだ。"
  },
  {
    "start": 4826042,
    "end": 4834930,
    "text": "もしそれが可能なら、あなたのコードにバグがないことを確認し、AIが人類の文明を破壊しないようにするのに役立つことは間違いない。"
  },
  {
    "start": 4835010,
    "end": 4839510,
    "text": "バグの発見だけでなく、AIの安全性の全領域をカバーする。"
  },
  {
    "start": 4840290,
    "end": 4842682,
    "text": "あなたは、モデルがバグ発見に苦労していると言った。"
  },
  {
    "start": 4842746,
    "end": 4843818,
    "text": "希望とは？"
  },
  {
    "start": 4843994,
    "end": 4854502,
    "text": "私の希望は、当初は、マイケル、マイケルにもチャイムを聞かせることができるが、このように、まず愚かなバグに役立つはずだ。"
  },
  {
    "start": 4854606,
    "end": 4858654,
    "text": "そうすれば、愚かなバグを1つ1つのエラーから素早くキャッチできるはずだ。"
  },
  {
    "start": 4858822,
    "end": 4861582,
    "text": "コメントで何かを書いて、その逆をやることもある。"
  },
  {
    "start": 4861766,
    "end": 4862846,
    "text": "よくあることだよ。"
  },
  {
    "start": 4862918,
    "end": 4867638,
    "text": "私はコメントで \"less than \"と書いたり、\"greater than \"と書いたりしている。"
  },
  {
    "start": 4867814,
    "end": 4870390,
    "text": "モデルは大雑把な感じだ。"
  },
  {
    "start": 4870470,
    "end": 4872050,
    "text": "本当にそれでいいのか？"
  },
  {
    "start": 4872850,
    "end": 4875430,
    "text": "いずれは100のバグもキャッチできるようになるはずだ。"
  },
  {
    "start": 4876010,
    "end": 4876410,
    "text": "そうだね。"
  },
  {
    "start": 4876450,
    "end": 4893522,
    "text": "もしAIがあなたのためにシステムをどんどん構築してくれるのであれば、あなたは単に生成するだけでなく、検証する必要がある。"
  },
  {
    "start": 4893706,
    "end": 4902068,
    "text": "それがなければ、以前にも話したように、このようなモデルを使ったプログラミングの問題のいくつかは解決不可能になってしまう。"
  },
  {
    "start": 4902244,
    "end": 4904244,
    "text": "それは人間だけのものではない。"
  },
  {
    "start": 4904372,
    "end": 4907108,
    "text": "あなたがバグを書き、私がバグを書く。"
  },
  {
    "start": 4907124,
    "end": 4912428,
    "text": "AIのコードを検証し、それをチェックできることも本当に重要だ。"
  },
  {
    "start": 4912524,
    "end": 4912732,
    "text": "そうだね。"
  },
  {
    "start": 4912756,
    "end": 4914124,
    "text": "では、実際にどうするのか？"
  },
  {
    "start": 4914172,
    "end": 4917644,
    "text": "私たちは、実際にどのようにバグモデルをトレーニングするのかについて、夕食時に多くの議論を交わしてきた。"
  },
  {
    "start": 4917692,
    "end": 4925214,
    "text": "実際にバグを発見するよりも、バグを導入する方が簡単な可能性があるというのが、非常に一般的な考えだ。"
  },
  {
    "start": 4925262,
    "end": 4937238,
    "text": "つまり、既存のコードにバグを導入するモデルを訓練し、次に逆バグモデルを訓練して、この合成データを使ってバグを見つけることができる。"
  },
  {
    "start": 4937334,
    "end": 4942290,
    "text": "これはひとつの例だけど、そうだね。"
  },
  {
    "start": 4943430,
    "end": 4950666,
    "text": "また、モデルレベルでなくても、最大のモデルを選び、多くの情報にアクセスできるようにすることもできる。"
  },
  {
    "start": 4950738,
    "end": 4952210,
    "text": "それはコードだけではない。"
  },
  {
    "start": 4952370,
    "end": 4955498,
    "text": "ファイルを見つめて、どこにバグがあるのか、と考えるのは難しい問題だ。"
  },
  {
    "start": 4955634,
    "end": 4957442,
    "text": "それは人間にとって難しいことだ。"
  },
  {
    "start": 4957466,
    "end": 4966082,
    "text": "多くの場合、コードを実行しなければならないし、トレースのようなものを見たり、デバッガーを使ってステップを踏んだりすることができる。"
  },
  {
    "start": 4966186,
    "end": 4968642,
    "text": "また、ここに2つの異なる製品のフォームファクターがあることも考えられる。"
  },
  {
    "start": 4968666,
    "end": 4973802,
    "text": "バックグラウンドで動作し、バグを見つけ出そうとしている、非常に高速で、本当に専門的なモデルを持っている可能性がある。"
  },
  {
    "start": 4973826,
    "end": 4982146,
    "text": "先ほどのアルヴィッドの例のような、極悪非道な入力ボックスのバグのようなものだ。"
  },
  {
    "start": 4982218,
    "end": 4985258,
    "text": "ただ仮説の自由を確認するのではなく、これは問題なんだ、と。"
  },
  {
    "start": 4985394,
    "end": 4986490,
    "text": "どうしても解決したいんだ。"
  },
  {
    "start": 4986570,
    "end": 4992626,
    "text": ""
  },
  {
    "start": 4992778,
    "end": 4995386,
    "text": "このことにお金を統合することを考えたことがある？"
  },
  {
    "start": 4995418,
    "end": 5001234,
    "text": "もしあなたがバグを見つけてくれたり、私が本当に感謝するようなコードを生成してくれたりしたら、私はおそらく大金を払うだろう。"
  },
  {
    "start": 5001282,
    "end": 5021920,
    "text": "数日前、YouTubeのAPIとインタラクトしてキャプションを更新したり、異なる言語にローカライズするために、カーソルや生成された完璧な3つの関数を使い始めたときがあった。"
  },
  {
    "start": 5022220,
    "end": 5025012,
    "text": "APIのドキュメントはあまり良くない。"
  },
  {
    "start": 5025116,
    "end": 5029460,
    "text": "しばらくググってみたけど、正確には見つからなかった。"
  },
  {
    "start": 5029500,
    "end": 5031052,
    "text": "情報が錯綜している。"
  },
  {
    "start": 5031196,
    "end": 5033032,
    "text": "カーソルは完璧に生成された。"
  },
  {
    "start": 5033156,
    "end": 5035536,
    "text": "私はただ、コードを読みましたと言い返しただけです。"
  },
  {
    "start": 5035568,
    "end": 5036464,
    "text": "私は、これは正しい、と思った。"
  },
  {
    "start": 5036512,
    "end": 5037128,
    "text": "私はそれをテストした。"
  },
  {
    "start": 5037144,
    "end": 5037928,
    "text": "その通りだ。"
  },
  {
    "start": 5038064,
    "end": 5044120,
    "text": "5.01ドルです、みたいなボタンにチップを入れたいんだ。"
  },
  {
    "start": 5044160,
    "end": 5048048,
    "text": "会社をサポートし、インターフェイスをサポートするのは本当にいいことだ。"
  },
  {
    "start": 5048144,
    "end": 5052300,
    "text": "もうひとつは、「よくやった」というような強いシグナルを送ることだろう。"
  },
  {
    "start": 5053920,
    "end": 5056776,
    "text": "コードを受け入れるよりもずっと強いシグナルがある。"
  },
  {
    "start": 5056808,
    "end": 5056976,
    "text": "そうだね。"
  },
  {
    "start": 5057008,
    "end": 5059958,
    "text": "あなたはただ、実際に強いグッジョブのように送った。"
  },
  {
    "start": 5060144,
    "end": 5060562,
    "text": "そうだ。"
  },
  {
    "start": 5060626,
    "end": 5062378,
    "text": "明らかにバグを見つけるためだ。"
  },
  {
    "start": 5062474,
    "end": 5071706,
    "text": "バグの報奨金のように、バグに莫大な金を払う人はたくさんいるだろ？"
  },
  {
    "start": 5071778,
    "end": 5073690,
    "text": "それは君たちの考えなのか？"
  },
  {
    "start": 5073770,
    "end": 5076834,
    "text": "ええ、社内では賛否両論です。"
  },
  {
    "start": 5076962,
    "end": 5081842,
    "text": "それは、あなたがどれだけ人間性を信じているかによると思う。"
  },
  {
    "start": 5081946,
    "end": 5086524,
    "text": "もしそうだったら、すごくクールだと思うんだ。"
  },
  {
    "start": 5086682,
    "end": 5089080,
    "text": "バグを見つけようとしても何もしない。"
  },
  {
    "start": 5089120,
    "end": 5091448,
    "text": "バグが見つからなければ0ドル。"
  },
  {
    "start": 5091544,
    "end": 5097800,
    "text": "もしバグが見つかってacceptをクリックすると、括弧の中に$1と表示される。"
  },
  {
    "start": 5097960,
    "end": 5100020,
    "text": "だから、バグを受け入れるために1ドル使う。"
  },
  {
    "start": 5100360,
    "end": 5101760,
    "text": "となると、もちろん心配がある。"
  },
  {
    "start": 5101800,
    "end": 5103664,
    "text": "よし、多くの計算を費やした。"
  },
  {
    "start": 5103752,
    "end": 5105700,
    "text": "たぶん、みんなコピーペーストするだけだろう。"
  },
  {
    "start": 5106520,
    "end": 5107780,
    "text": "それが心配なんだ。"
  },
  {
    "start": 5108400,
    "end": 5116266,
    "text": "そして、製品にお金を導入することで、なんだか、楽しくなくなるのではないかという心配もある。"
  },
  {
    "start": 5116338,
    "end": 5121058,
    "text": "お金のことを考えなければならないのに、コードのことばかり考えたがる。"
  },
  {
    "start": 5121194,
    "end": 5123506,
    "text": "だから、分けて考える方が理にかなっているのかもしれない。"
  },
  {
    "start": 5123538,
    "end": 5129250,
    "text": "毎月いくらかの料金を支払うと、これらのものがすべて無料で手に入る。"
  },
  {
    "start": 5129330,
    "end": 5132682,
    "text": "チップの要素があるかもしれないが、それはコストとは違う。"
  },
  {
    "start": 5132706,
    "end": 5134610,
    "text": "ああ、まだドルマークがついている。"
  },
  {
    "start": 5134650,
    "end": 5135434,
    "text": "大丈夫だと思うよ。"
  },
  {
    "start": 5135482,
    "end": 5140038,
    "text": "紹介したくないという意見も分かる。"
  },
  {
    "start": 5140114,
    "end": 5143254,
    "text": "ああ、人々がそう感じる瞬間は、それを共有するときだと言おうとしたんだ。"
  },
  {
    "start": 5143302,
    "end": 5146710,
    "text": "素晴らしいお手本を手に入れたら、それを友人たちと共有する。"
  },
  {
    "start": 5146830,
    "end": 5160574,
    "text": "LSPでエラーチェックを行い、さらにコードを実行することで、システムの出力をより理解できるようになる。"
  },
  {
    "start": 5160662,
    "end": 5168954,
    "text": "もし、バグを修正したことを実際に確認できるようになれば、賞金システムも名誉システムに頼る必要がなくなるかもしれない。"
  },
  {
    "start": 5169102,
    "end": 5172058,
    "text": "端末とコードの間にはどれくらいの相互作用があるのか？"
  },
  {
    "start": 5172194,
    "end": 5174498,
    "text": "どれだけの情報が得られるかとかね。"
  },
  {
    "start": 5174594,
    "end": 5184890,
    "text": "ターミナルでコードを実行する場合、コードを実行し、コードを変更する方法を提案するようなループは可能ですか？"
  },
  {
    "start": 5184970,
    "end": 5190586,
    "text": "コードとランタイムがエラーを出した場合、今のところ、両者は完全に別世界だ。"
  },
  {
    "start": 5190778,
    "end": 5195170,
    "text": "コードを書くのを助けるために、ターミナル内でコントロールKができるのは知っている。"
  },
  {
    "start": 5195250,
    "end": 5197510,
    "text": "ターミナルコンタクトを使うこともできる。"
  },
  {
    "start": 5198070,
    "end": 5200970,
    "text": "ジャックはあらゆるものの中にいる。"
  },
  {
    "start": 5201710,
    "end": 5204966,
    "text": "まだループの部分はないけどね。"
  },
  {
    "start": 5205038,
    "end": 5207182,
    "text": "私たちは、このようなことが非常に理にかなっていると期待している。"
  },
  {
    "start": 5207286,
    "end": 5212686,
    "text": "それが前景でも起こるのか、それともこれまで議論してきたような後景で起こるのかという問題がある。"
  },
  {
    "start": 5212758,
    "end": 5216430,
    "text": "確かに、背景はかなりクールで、コードをさまざまな方法で実行できる。"
  },
  {
    "start": 5216590,
    "end": 5221110,
    "text": "さらに、データベースの側面もあり、データベースを変更しないようにするにはどうすればいいのでしょうか？"
  },
  {
    "start": 5221150,
    "end": 5222090,
    "text": "オーケー。"
  },
  {
    "start": 5223150,
    "end": 5225806,
    "text": "つまり、そこには確かにクールなソリューションがある。"
  },
  {
    "start": 5225958,
    "end": 5229690,
    "text": "新しいAPIが開発されているんだ。"
  },
  {
    "start": 5230470,
    "end": 5235286,
    "text": "AWSにはないが、確かにある。"
  },
  {
    "start": 5235318,
    "end": 5236470,
    "text": "プラネットスケールだと思う。"
  },
  {
    "start": 5236510,
    "end": 5239870,
    "text": "プラネッツケールが最初に障害を編集したかどうかは知らない。"
  },
  {
    "start": 5240030,
    "end": 5249910,
    "text": "データベースにブランチを追加する。これは、機能開発に取り組んでいて、prodデータベースとテストしたいが、実際にはprodデータベースとテストしたくない場合のようなものだ。"
  },
  {
    "start": 5249950,
    "end": 5254610,
    "text": "データベースにブランチを追加することができ、その方法は右前のログにブランチを追加することだ。"
  },
  {
    "start": 5255040,
    "end": 5258536,
    "text": "それを正しく行うには、技術的に複雑なことがたくさんあるのは明らかだ。"
  },
  {
    "start": 5258648,
    "end": 5261820,
    "text": "データベース会社には新しいことが必要なのだろう。"
  },
  {
    "start": 5265160,
    "end": 5266740,
    "text": "今は良いデータベースを持っている。"
  },
  {
    "start": 5267640,
    "end": 5277380,
    "text": "私たちが使っているデータベースのひとつであるターボ・バッファは、右の広告ログへの分岐を追加する予定だと思う。"
  },
  {
    "start": 5278840,
    "end": 5290494,
    "text": "多分、AIエージェントはブランチングを使うだろうし、ブランチに対してテストするだろうし、ブランチングをサポートすることがデータベースの要件になるだろう。"
  },
  {
    "start": 5290542,
    "end": 5292930,
    "text": "ファイルシステムを分岐させることができたら、本当に面白いだろうね。"
  },
  {
    "start": 5293950,
    "end": 5295810,
    "text": "何事にも枝分かれが必要だと感じている。"
  },
  {
    "start": 5296110,
    "end": 5296850,
    "text": "そうだね。"
  },
  {
    "start": 5297990,
    "end": 5299890,
    "text": "マルチバースの問題でしょう？"
  },
  {
    "start": 5302190,
    "end": 5304478,
    "text": "すべてに手を広げれば、かなりの量になる。"
  },
  {
    "start": 5304654,
    "end": 5311910,
    "text": "多くのスペースやCPUを使わないようにするための、非常に賢いアルゴリズムがあるのは明らかだ。"
  },
  {
    "start": 5312210,
    "end": 5312650,
    "text": "オーケー。"
  },
  {
    "start": 5312690,
    "end": 5314722,
    "text": "インフラについて尋ねるには良い場所だ。"
  },
  {
    "start": 5314826,
    "end": 5316650,
    "text": "君たちはほとんどAWSを使っている。"
  },
  {
    "start": 5316810,
    "end": 5318242,
    "text": "何か興味深いディテールはある？"
  },
  {
    "start": 5318266,
    "end": 5319538,
    "text": "興味深い課題は何か？"
  },
  {
    "start": 5319634,
    "end": 5321178,
    "text": "なぜAWSを選んだのですか？"
  },
  {
    "start": 5321354,
    "end": 5323802,
    "text": "なぜ、なぜAWSがまだ勝っているのか？"
  },
  {
    "start": 5323986,
    "end": 5328106,
    "text": "ハッシュタグAWSは本当に本当に素晴らしい。"
  },
  {
    "start": 5328218,
    "end": 5328946,
    "text": "本当においしいよ。"
  },
  {
    "start": 5328978,
    "end": 5336668,
    "text": "AWSの製品を使うときはいつもそうだが、それがうまくいくことは分かっている。"
  },
  {
    "start": 5336764,
    "end": 5341560,
    "text": "セットアップの手順を踏むのが地獄のようだ。"
  },
  {
    "start": 5342020,
    "end": 5343876,
    "text": "どうしてこんなにひどいインターフェースなんだ？"
  },
  {
    "start": 5344068,
    "end": 5346172,
    "text": "とても美味しいからだ。"
  },
  {
    "start": 5346196,
    "end": 5346684,
    "text": "その必要はない。"
  },
  {
    "start": 5346692,
    "end": 5348040,
    "text": "それが勝利の本質だ。"
  },
  {
    "start": 5348860,
    "end": 5350476,
    "text": "まさに、それが自然なんだと思う。"
  },
  {
    "start": 5350508,
    "end": 5351108,
    "text": "彼らは勝っている。"
  },
  {
    "start": 5351204,
    "end": 5352244,
    "text": "ああ、そうだ。"
  },
  {
    "start": 5352372,
    "end": 5353756,
    "text": "いつでも信頼できるaws。"
  },
  {
    "start": 5353788,
    "end": 5355012,
    "text": "いつもうまくいくようにね。"
  },
  {
    "start": 5355156,
    "end": 5358600,
    "text": "問題があるとすれば、それはおそらくあなたの問題だろう。"
  },
  {
    "start": 5359780,
    "end": 5360624,
    "text": "そうだね。"
  },
  {
    "start": 5360812,
    "end": 5361264,
    "text": "オーケー。"
  },
  {
    "start": 5361312,
    "end": 5363896,
    "text": "君たちにとって興味深い挑戦はあるかい？"
  },
  {
    "start": 5363928,
    "end": 5369080,
    "text": "かなり新しいスタートアップが、これほど多くの人々にスケーリングを提供する。"
  },
  {
    "start": 5369240,
    "end": 5374232,
    "text": "そうだね、興味深い旅だったと思う。"
  },
  {
    "start": 5374376,
    "end": 5377712,
    "text": "毎秒リクエストにゼロを追加する。"
  },
  {
    "start": 5377896,
    "end": 5384192,
    "text": "キャッシュやデータベースのために使っている一般的なコンポーネントでは、規模が大きくなるにつれて、これらの問題が発生します。"
  },
  {
    "start": 5384216,
    "end": 5387940,
    "text": "今は、テーブルでオーバーフローが発生するような規模になっている。"
  },
  {
    "start": 5388550,
    "end": 5404326,
    "text": "例えば、コード・ベースのセマンティック・インデックスを計算する検索システムや、コード・ベースに関する質問に答えるシステムなどです。"
  },
  {
    "start": 5404478,
    "end": 5413410,
    "text": "私の友人には超高級エンジニアが何人かいますが、彼らの口癖のひとつは、システムを拡張したときにどこで壊れるかを予測するのはとても難しいということです。"
  },
  {
    "start": 5413750,
    "end": 5421150,
    "text": "事前に予測することはできるが、この露出を加えると必ず何か奇妙なことが起こる。"
  },
  {
    "start": 5421190,
    "end": 5429330,
    "text": "でも、その特定のシステムについては、そうだと思う。"
  },
  {
    "start": 5432110,
    "end": 5451596,
    "text": "具体的には、アップロードして、あなたのコードをすべてチャンクして、埋め込み用にコードを送信して、コードを埋め込みます。"
  },
  {
    "start": 5451748,
    "end": 5458980,
    "text": "というのも、私たちはクライアントのバグを非常に警戒しているからだ。"
  },
  {
    "start": 5459100,
    "end": 5466840,
    "text": "私たちは詳細の多くをサーバーに保存しており、すべてが暗号化されているようなものです。"
  },
  {
    "start": 5468450,
    "end": 5477430,
    "text": "技術的な課題のひとつは、ローカルのインデックス、つまりローカルのコードベースの状態が、サーバー上の状態と同じであることを常に確認することだ。"
  },
  {
    "start": 5478370,
    "end": 5485658,
    "text": "技術的にそうすることにしたのは、ファイルごとにこのハッシュを保持する方法だ。"
  },
  {
    "start": 5485834,
    "end": 5491098,
    "text": "そして、各フォルダーごとに、そのすべての子フォルダーのハッシュを保持することができる。"
  },
  {
    "start": 5491154,
    "end": 5493684,
    "text": "であれば、それを再帰的に一番上まで行うことができる。"
  },
  {
    "start": 5493842,
    "end": 5497020,
    "text": "なぜ複雑なことをするのか？"
  },
  {
    "start": 5497640,
    "end": 5500736,
    "text": "ひとつは、ファイルごとにハッシュを保持することだ。"
  },
  {
    "start": 5500848,
    "end": 5507376,
    "text": "そうすれば、1分ごとにサーバーにあるハッシュをダウンロードして、サーバーに存在しないファイルを突き止めることができる。"
  },
  {
    "start": 5507408,
    "end": 5516100,
    "text": "新しいファイルを作成したのかもしれないし、ファイルを削除したのかもしれないし、新しいブランチをチェックアウトして、クライアントとサーバー間の状態を調整しようとしたのかもしれない。"
  },
  {
    "start": 5517000,
    "end": 5523644,
    "text": "これは、クライアント側の両方で、非常に大きなネットワーク・オーバーヘッドをもたらす。"
  },
  {
    "start": 5523692,
    "end": 5528720,
    "text": "つまり、カーソルを使っているのなら、誰もその無線LANを常時ハマーしてほしいとは思っていないのだ。"
  },
  {
    "start": 5529220,
    "end": 5533572,
    "text": "また、データベースに膨大なオーバーヘッドをもたらすことになる。"
  },
  {
    "start": 5533716,
    "end": 5545620,
    "text": "数十テラバイトのデータベースを、毎秒20テラバイトとかのデータベースに近づくように読み込んでいる。"
  },
  {
    "start": 5545660,
    "end": 5548056,
    "text": "それはちょっと、ちょっとクレイジーだ。"
  },
  {
    "start": 5548088,
    "end": 5549620,
    "text": "それは絶対にやめた方がいい。"
  },
  {
    "start": 5550360,
    "end": 5555616,
    "text": "プロジェクトの根幹であるハッシュを照合するのだ。"
  },
  {
    "start": 5555728,
    "end": 5559488,
    "text": "そして、何か不一致があれば、どこに不一致があるのかを探す。"
  },
  {
    "start": 5559584,
    "end": 5561936,
    "text": "子どもたちを見て、ハッシュが一致するかどうかを確認するんだ。"
  },
  {
    "start": 5561968,
    "end": 5564536,
    "text": "ハッシュが一致しない場合は、その子供たちを見てみる。"
  },
  {
    "start": 5564608,
    "end": 5567224,
    "text": "私たちがそうするのは、物事が一致しない場合に限られる。"
  },
  {
    "start": 5567272,
    "end": 5569872,
    "text": "ほとんどの人にとって、ほとんどの場合、ハッシュは一致する。"
  },
  {
    "start": 5569976,
    "end": 5573198,
    "text": "階層的な和解のようなものだ。"
  },
  {
    "start": 5573304,
    "end": 5574698,
    "text": "ええ、そんな感じです。"
  },
  {
    "start": 5574794,
    "end": 5575090,
    "text": "そうだね。"
  },
  {
    "start": 5575130,
    "end": 5576274,
    "text": "これはメルクルツリーと呼ばれている。"
  },
  {
    "start": 5576362,
    "end": 5577306,
    "text": "そう、メルケルだ。"
  },
  {
    "start": 5577378,
    "end": 5577938,
    "text": "そうだね。"
  },
  {
    "start": 5578074,
    "end": 5581802,
    "text": "つまり、このような問題を考え抜かなければならないということは、とてもクールなことなんだ。"
  },
  {
    "start": 5581866,
    "end": 5587090,
    "text": "つまり、難しくなったのは、それを使う人の数が増えたからだ。"
  },
  {
    "start": 5587130,
    "end": 5604938,
    "text": "また、コード・ベースが本当に膨大な顧客の中には、コード・ベースを元々並べ替えていたようなところもあります。"
  },
  {
    "start": 5604994,
    "end": 5606938,
    "text": "その規模を拡大したい。"
  },
  {
    "start": 5606994,
    "end": 5619682,
    "text": "プログラマーは、単純なものを作るのは簡単だが、それを多くの人々、例えば多くの企業に拡大するのは明らかに難しい問題だ。"
  },
  {
    "start": 5619706,
    "end": 5628332,
    "text": "私たちの現在の解決策は、明らかに私たちが取り組んでいる新しいアイデアを考え出すことでもある。"
  },
  {
    "start": 5628436,
    "end": 5628796,
    "text": "そうだね。"
  },
  {
    "start": 5628868,
    "end": 5633600,
    "text": "この索引システムには、追加的なものなど、巧妙なものがたくさんある。"
  },
  {
    "start": 5634380,
    "end": 5639452,
    "text": "例えば、コストの面でボトルネックになるのは、ベクター・データベースやデータベースにモノを保存しないことだ。"
  },
  {
    "start": 5639476,
    "end": 5640844,
    "text": "実際にコードを埋め込んでいる。"
  },
  {
    "start": 5640972,
    "end": 5654612,
    "text": "というのも、エンベッディングがボトルネックになるからです。"
  },
  {
    "start": 5654636,
    "end": 5669780,
    "text": "ブランチを扱う複雑さや、与えられたチャンクのハッシュから計算される実際のベクターにキャッシュを持つだけの他のデータベースを心配する必要はない。"
  },
  {
    "start": 5671160,
    "end": 5676560,
    "text": "つまり、ある会社で何人目かの人がコードベースを埋め込むとき、それは本当に、本当に速いということだ。"
  },
  {
    "start": 5676720,
    "end": 5680128,
    "text": "実際に私たちのサーバーにコードを保存することなく、これらすべてを行うことができる。"
  },
  {
    "start": 5680184,
    "end": 5681462,
    "text": "コードデータは保存されない。"
  },
  {
    "start": 5681616,
    "end": 5685266,
    "text": "ベクトルをベクトル・データベースとベクトル・キャッシュに保存するだけだ。"
  },
  {
    "start": 5685418,
    "end": 5691570,
    "text": "現時点で、コードベースの索引付けから得られる最大の利益は何ですか？"
  },
  {
    "start": 5691690,
    "end": 5695986,
    "text": "興味本位でお聞きしたいのですが、ユーザーにはどのようなメリットがあるのでしょうか？"
  },
  {
    "start": 5696018,
    "end": 5705858,
    "text": "しかし、短期的には、ただコードベースに質問するだけで、何が役に立つのだろうか？"
  },
  {
    "start": 5705994,
    "end": 5723370,
    "text": "一番わかりやすいのは、大規模なコードベースのどこで何が起きているのかを調べたいときで、「○○をやっている場所を探したいんだけど、普通のテキスト検索では何を探せばいいのかわからない」というような、あいまいな記憶しかないような場合だと思う。"
  },
  {
    "start": 5723450,
    "end": 5732314,
    "text": "コードベースのチャットを使ってチャットを尋ねると、非常に多くの場合、あなたが考えていた正しい場所が見つかります。"
  },
  {
    "start": 5732482,
    "end": 5742036,
    "text": "あなたがおっしゃったように、将来的には、私たちが検索の質を向上させるために多くの努力をしているところでは、これはますます強力になっていくと思います。"
  },
  {
    "start": 5742228,
    "end": 5745720,
    "text": "その天井は、人々が評価するよりも本当に、ずっと高いと思う。"
  },
  {
    "start": 5746060,
    "end": 5753764,
    "text": "ここで1つ質問しておきたいのだが、なぜ地元でできるようなことをあまりしてこなかったのか、考えたことがあるだろうか。"
  },
  {
    "start": 5753852,
    "end": 5758516,
    "text": "今話したことはすべて、クラウド化するのは例外的に難しいようだ。"
  },
  {
    "start": 5758548,
    "end": 5765246,
    "text": "キャッシュや大規模なコードベースについて、これらすべてを考えなければならない。"
  },
  {
    "start": 5765278,
    "end": 5767558,
    "text": "多くのプログラマーが同じコードベースを使用している。"
  },
  {
    "start": 5767574,
    "end": 5769254,
    "text": "そのパズルを見つけなければならない。"
  },
  {
    "start": 5769422,
    "end": 5776102,
    "text": "その多くは、ほとんどのソフトウェアがこのような重い計算をローカルで行っているだけだ。"
  },
  {
    "start": 5776246,
    "end": 5778750,
    "text": "彼らはローカルでエンベッディングを行うことを考えている。"
  },
  {
    "start": 5778870,
    "end": 5782670,
    "text": "地元でやるのはクールだと思う。"
  },
  {
    "start": 5782710,
    "end": 5784766,
    "text": "本当に難しいことだと思う。"
  },
  {
    "start": 5784878,
    "end": 5799870,
    "text": "ひとつ覚えておいてほしいのは、私たちのユーザーの中には最新のMacBook Proを使っている人もいますが、私たちのユーザーのほとんど、80％以上はWindowsマシンを使っていて、その多くはあまりパワフルではないということです。"
  },
  {
    "start": 5800970,
    "end": 5808570,
    "text": "ローカルモデルは本当に最新のコンピューターでしか機能しないし、それを組み込むには大きなオーバーヘッドもかかる。"
  },
  {
    "start": 5808650,
    "end": 5814466,
    "text": "そうしたくても、今のところ集中できていない。"
  },
  {
    "start": 5814538,
    "end": 5818910,
    "text": "そういう人もいると思うし、それは素晴らしいことだと思う。"
  },
  {
    "start": 5819810,
    "end": 5827706,
    "text": "特に、モデルがどんどん大きくなり、より大きなモデルを使ってよりファンシーなことをしたいと思うようになると、地元でそれをするのはさらに難しくなる。"
  },
  {
    "start": 5827818,
    "end": 5831418,
    "text": "そうだね、コンピューターが弱くても問題ない。"
  },
  {
    "start": 5831514,
    "end": 5837474,
    "text": "ただ、例えばあなたがどこかの大企業なら、大企業のコードベースを持っている。"
  },
  {
    "start": 5837562,
    "end": 5839170,
    "text": "処理するのが本当に難しいんだ。"
  },
  {
    "start": 5839250,
    "end": 5842042,
    "text": "大企業のコードベースは、最も頑丈なMacBook Proでも動作する。"
  },
  {
    "start": 5842146,
    "end": 5853800,
    "text": "学生とかならまだしも、大企業で最高のプログラマーになったとしても、ひどい経験をすることになると思う。"
  },
  {
    "start": 5854260,
    "end": 5860764,
    "text": "地元ですべてやれば、何とかやっていけるだろうが、やはり、もう楽しくはないだろう。"
  },
  {
    "start": 5860852,
    "end": 5862348,
    "text": "ああ、おおよその隣人とかね。"
  },
  {
    "start": 5862364,
    "end": 5865916,
    "text": "この巨大なコードベースは、メモリとCPUを食いつぶすだけだ。"
  },
  {
    "start": 5866068,
    "end": 5870340,
    "text": "ただそれだけだ。"
  },
  {
    "start": 5870500,
    "end": 5872708,
    "text": "モデリング面についても話しましょう。"
  },
  {
    "start": 5872764,
    "end": 5892172,
    "text": "アルビッドが言ったように、ローカルモデルには大きな逆風が吹いており、あるものはMOに向かいつつある。"
  },
  {
    "start": 5892316,
    "end": 5901200,
    "text": "欠点は、これらのモデルは全体的に大きくなり、1つのノード上でなく、複数のノードにフィットさせる必要があることだ。"
  },
  {
    "start": 5901990,
    "end": 5906250,
    "text": "本当に良いMacBookでさえ、内部に収まるはずがない。"
  },
  {
    "start": 5906630,
    "end": 5921374,
    "text": "特にコーディングの場合は、モデルがこれらのことを実行するのに十分であるという基準をクリアすればそれで満足という問題ではないと思う。"
  },
  {
    "start": 5921542,
    "end": 5931024,
    "text": "人々は常に最高のもの、最も知的なもの、最も有能なものを求めようとする。"
  },
  {
    "start": 5931192,
    "end": 5933680,
    "text": "最も高性能なモデルが欲しいのでは？"
  },
  {
    "start": 5933760,
    "end": 5935920,
    "text": "ソネットが欲しいんだろ？"
  },
  {
    "start": 5936040,
    "end": 5937300,
    "text": "もoで。"
  },
  {
    "start": 5937920,
    "end": 5939580,
    "text": "君の売り込み方はいいね。"
  },
  {
    "start": 5940440,
    "end": 5943080,
    "text": "劣ったモデルでも満足できますか？"
  },
  {
    "start": 5943160,
    "end": 5944432,
    "text": "聞いてくれ。"
  },
  {
    "start": 5944496,
    "end": 5945456,
    "text": "そう、私もその一人だ。"
  },
  {
    "start": 5945488,
    "end": 5957220,
    "text": "ローカルで何かをやりたがる人たちもいるし、特に、明らかにオープンソースに抵抗する人たちもいる。"
  },
  {
    "start": 5957600,
    "end": 5959952,
    "text": "成長しているパワーセンターは以下の通りだ。"
  },
  {
    "start": 5960016,
    "end": 5965128,
    "text": "実は、私が特に気に入っているローカルモデルの代替案がある。"
  },
  {
    "start": 5965304,
    "end": 5968376,
    "text": "まだ研究段階だと思う。"
  },
  {
    "start": 5968448,
    "end": 5974460,
    "text": "言語モデルの推論に同型暗号を使うことは想像できるだろう。"
  },
  {
    "start": 5974840,
    "end": 5982920,
    "text": "ローカルマシンで入力を暗号化し、それをサーバーに送信する。"
  },
  {
    "start": 5982960,
    "end": 5992154,
    "text": "彼らは暗号化されたデータに対して、あなたがローカルで実行できないモデルを実行することができる。"
  },
  {
    "start": 5992322,
    "end": 5995714,
    "text": "それは今でも非常に重要な研究だと思う。"
  },
  {
    "start": 5995802,
    "end": 6002522,
    "text": "今はオーバーヘッドがとても大きいからだ。"
  },
  {
    "start": 6002666,
    "end": 6017652,
    "text": "というのも、このようなモデルがどんどん良くなるにつれて、経済的にますます便利になっていくことが懸念されるからだ。"
  },
  {
    "start": 6017756,
    "end": 6025720,
    "text": "そのため、世界の情報とデータは、ますます1つか2つの中央集権的な主体を通じて流れるようになるだろう。"
  },
  {
    "start": 6026180,
    "end": 6043912,
    "text": "しかし、世界中の情報がプレーンテキストで1つのノードを流れることになれば、非常に悪い意味でのサーベイヤーラインができることになる。"
  },
  {
    "start": 6043976,
    "end": 6049904,
    "text": "当初はそれなりの理由があったのだろう。"
  },
  {
    "start": 6049992,
    "end": 6066790,
    "text": "人々は、AIモデルを悪用する悪質な行為者から守ろうとするでしょう。そして、監視コードを追加することになるでしょう。"
  },
  {
    "start": 6066870,
    "end": 6074270,
    "text": "だから、言語モデリングやプライバシー保護、機械学習のためのホモモーフィック暗号化を解決できることを大いに期待している。"
  },
  {
    "start": 6074310,
    "end": 6078646,
    "text": "それは、最近のすべてのソフトウェアが抱えている課題だと言える。"
  },
  {
    "start": 6078678,
    "end": 6086470,
    "text": "クラウドから提供される機能は非常に多く、私たちはますますクラウドに依存するようになり、私たちの生活を素晴らしいものにしている。"
  },
  {
    "start": 6086550,
    "end": 6091382,
    "text": "そのため、基本的な攻撃から守るために、本当に優れたセキュリティに頼ることになる。"
  },
  {
    "start": 6091526,
    "end": 6101974,
    "text": "また、そのデータを管理しているのはごく一部の企業であり、彼らは明らかに影響力を持っており、あらゆる方法で侵入される可能性がある。"
  },
  {
    "start": 6102022,
    "end": 6103450,
    "text": "それが私たちの住む世界だ。"
  },
  {
    "start": 6104230,
    "end": 6118870,
    "text": "つまり、私がとても心配しているのは、人類が責任あるスケーリングポリシーを持ち、エントロピックの安全性が低いアスルにいるような世界です。"
  },
  {
    "start": 6118910,
    "end": 6138494,
    "text": "ASL3、ASL4、どんなモデルであれ、非常にパワフルなものだが、セキュリティ上の合理的な理由から、すべてのプロンプトを監視したいと思うだろう。"
  },
  {
    "start": 6138542,
    "end": 6144724,
    "text": "でも、マット、世界中の情報がそんなに厳しく監視されていたら、本当に恐ろしいことだよ。"
  },
  {
    "start": 6144772,
    "end": 6146800,
    "text": "中央集権的すぎる。"
  },
  {
    "start": 6147180,
    "end": 6163420,
    "text": "一方ではモデルたちに不正をさせたくないと思い、他方では、世界中の情報が3つのモデルプロバイダーを経由することを信用できるかどうかわからない。"
  },
  {
    "start": 6163500,
    "end": 6164160,
    "text": "そうだね。"
  },
  {
    "start": 6164580,
    "end": 6167380,
    "text": "クラウドプロバイダーとの違いは何だと思いますか？"
  },
  {
    "start": 6167540,
    "end": 6176610,
    "text": "というのも、これらのデータの多くは、そもそもクラウドプロバイダーに行くことはなかったと思うからだ。"
  },
  {
    "start": 6177510,
    "end": 6190290,
    "text": "EIAモデルにより多くのデータを提供したい、そもそもオンラインにするはずのない個人データをこれらの企業やモデルに提供したい、というようなことだ。"
  },
  {
    "start": 6190870,
    "end": 6214084,
    "text": "現在クラウドでは、独自の暗号化キーを使用することができ、AWSはあまり何もできませんが、ここでは、コンテキストの上にあるすべてのものの正確な平文を見ることができる中央集権的なアクターがいるだけです。"
  },
  {
    "start": 6214252,
    "end": 6217972,
    "text": "実際、Pythonでコードを書いているとき、それが摩擦になっている。"
  },
  {
    "start": 6218036,
    "end": 6225100,
    "text": "輸入されたものはたくさんあるし、コンテクストの中にどんなものを盛り込みたいかは、おそらく直感でわかると思う。"
  },
  {
    "start": 6227240,
    "end": 6230260,
    "text": "自動で文脈を把握するのは難しい？"
  },
  {
    "start": 6231000,
    "end": 6232140,
    "text": "それは厄介だ。"
  },
  {
    "start": 6232720,
    "end": 6238544,
    "text": "将来的には、文脈を自動的に計算することで、もっといいものができると思う。"
  },
  {
    "start": 6238712,
    "end": 6243060,
    "text": "ひとつ注意しなければならないのは、自動コンテキストの導入にはトレードオフがあるということだ。"
  },
  {
    "start": 6243880,
    "end": 6255852,
    "text": "これらのモデルに対するコンテキストが多ければ多いほど、まず、処理速度が遅くなり、リクエストのコストが高くなる。"
  },
  {
    "start": 6256036,
    "end": 6259996,
    "text": "また、これらのモデルの多くは、プロンプトに多くの情報があると混乱してしまう。"
  },
  {
    "start": 6260148,
    "end": 6266240,
    "text": "正確さと、含まれる文脈の関連性のハードルはかなり高いはずだ。"
  },
  {
    "start": 6267260,
    "end": 6272910,
    "text": "これはすでに、製品内のいくつかの場所で自動コンテクストを行なっている。"
  },
  {
    "start": 6273020,
    "end": 6275122,
    "text": "それは間違いなく、もっともっとうまくなりたいことだ。"
  },
  {
    "start": 6275306,
    "end": 6288226,
    "text": "そして、より優れた検索システムの学習、例えば、より優れた埋め込みモデル、より優れた再ランカーなど、そこで試すべきクールなアイデアがたくさんあると思う。"
  },
  {
    "start": 6288378,
    "end": 6302190,
    "text": "アカデミックでクールなアイデアもあると思う。私たちが社内で試しているようなものだけでなく、この分野では、言語モデルを、新しい情報のコーパスを理解するような、モデルそのものを実際に理解できるようなところまで持っていくことができるのか、ということに大きく取り組んでいる。"
  },
  {
    "start": 6302550,
    "end": 6307374,
    "text": "このバージョンで最もよく話題になるのは、Windowsのコンテキストを無限にできるかということだ。"
  },
  {
    "start": 6307502,
    "end": 6311558,
    "text": "では、ウィンドウズのコンテクストを無限にすれば、モデルが実際に無限のコンテクストに注意を払うようになるのだろうか？"
  },
  {
    "start": 6311694,
    "end": 6318742,
    "text": "そして、無限コンテクストに注目させ、実際にそれを実行することをある程度可能にした後、その無限コンテクストに対してキャッシングを行えるか？"
  },
  {
    "start": 6318806,
    "end": 6328388,
    "text": "常に再計算する必要はないが、この情報やモデルの重みを実際に学習する微調整にもう少し類似した、クールなアイデアが他にも試みられている。"
  },
  {
    "start": 6328574,
    "end": 6337752,
    "text": "というのも、体重レベルでは、インコンテクスト学習レベルとは質的に異なる理解が得られるからだ。"
  },
  {
    "start": 6337776,
    "end": 6342832,
    "text": "最終的にどうなるのか、審査員はまだちょっとわからないと思う。"
  },
  {
    "start": 6342976,
    "end": 6350864,
    "text": "暫定的に、私たちは会社として、より良い検索システムと、あなたがしていることに最も関連するコードベースの部分を選ぶことにとても興奮しています。"
  },
  {
    "start": 6351032,
    "end": 6352380,
    "text": "もっとうまくやれるはずだ。"
  },
  {
    "start": 6352680,
    "end": 6360304,
    "text": "この知識を直接ウェイトに学習させるための興味深いコンセプトの証明のひとつが、対コードである。"
  },
  {
    "start": 6360392,
    "end": 6363360,
    "text": "我々は対コードフォークと対コードにいる。"
  },
  {
    "start": 6363440,
    "end": 6364688,
    "text": "コードはすべて公開されている。"
  },
  {
    "start": 6364864,
    "end": 6368020,
    "text": "事前トレーニングでこれらのモデルはすべてのコードを見ている。"
  },
  {
    "start": 6368520,
    "end": 6375824,
    "text": "彼らはおそらく、それに関する質問と回答も見てきただろうし、その後、コード全般に関する質問に答えられるように微調整され、RLAのシェフになっている。"
  },
  {
    "start": 6375992,
    "end": 6384648,
    "text": "対コードについて質問すると、幻覚を見ることもあるが、実際に質問にうまく答えてくれることもある。"
  },
  {
    "start": 6384824,
    "end": 6389568,
    "text": "これは、たまたまうまくいっただけだと思う。"
  },
  {
    "start": 6389584,
    "end": 6397660,
    "text": "このコードベースを理解するために構築されたモデルを、実際に特別にトレーニングしたり、ポストトレーニングしたりできるとしたらどうだろう？"
  },
  {
    "start": 6398640,
    "end": 6401424,
    "text": "これは未解決の研究課題であり、私たちも非常に興味を持っている。"
  },
  {
    "start": 6401512,
    "end": 6406744,
    "text": "という不確定要素もある。"
  },
  {
    "start": 6406872,
    "end": 6411856,
    "text": "つまり、検索とその内部を行い、それからあなたの質問に答え、コードを作成するということですか？"
  },
  {
    "start": 6411888,
    "end": 6434088,
    "text": "それとも、検索とフロンティア・モデルを切り離して、数ヶ月のうちにオープンソースの優れたモデルよりもはるかに優れた、本当に有能なモデルを手に入れ、その後に、本当に優れたオープンソース・モデルを別に訓練して、レトリーバーとして、これらの大規模なモデルにコンテキストを送り込むようにするのか。"
  },
  {
    "start": 6434224,
    "end": 6438340,
    "text": "コードベースを理解するためにモデルをトレーニングすることについて、もう少し詳しく教えてください。"
  },
  {
    "start": 6439070,
    "end": 6440206,
    "text": "どういう意味ですか？"
  },
  {
    "start": 6440318,
    "end": 6442766,
    "text": "これは合成データの方向性なのか？"
  },
  {
    "start": 6442958,
    "end": 6446822,
    "text": "そう、つまり、いろいろな方法が考えられるんだ。"
  },
  {
    "start": 6446846,
    "end": 6449650,
    "text": "確かにアイデアには事欠かない。"
  },
  {
    "start": 6450030,
    "end": 6454530,
    "text": "ただ、実際に行ってみて、全部試してみて、どれが一番効果的かを経験的に判断することが問題なんだ。"
  },
  {
    "start": 6456430,
    "end": 6463330,
    "text": "非常に素朴なことのひとつは、対コードやフロンティアモデルで行われていることを再現しようとすることだ。"
  },
  {
    "start": 6463680,
    "end": 6472928,
    "text": "一般的なコード・データを含みつつ、あなたが気にかけている特定のレポジトリのデータも大量に投入するような、ある種の継続的な事前トレーニングを続けよう。"
  },
  {
    "start": 6473064,
    "end": 6481104,
    "text": "つまり、インストラクションのファインチューニングから始めれば、コードに関する通常のインストラクション・ファインチューニングのデータセットがある。"
  },
  {
    "start": 6481192,
    "end": 6486260,
    "text": "そして、そのリポジトリにあるコードについて多くの質問を投げかける。"
  },
  {
    "start": 6487480,
    "end": 6494140,
    "text": "グランドトゥルースを得るのは難しいかもしれないが、合成データを使うこともできる。"
  },
  {
    "start": 6494720,
    "end": 6502568,
    "text": "つまり、モデルにコードのさまざまな部分について質問させるのだ。"
  },
  {
    "start": 6502744,
    "end": 6512336,
    "text": "コードの断片を取り出し、モデルにプロンプトを出したり、モデルがそのコードの断片に対する質問を提案したりする。"
  },
  {
    "start": 6512488,
    "end": 6518700,
    "text": "となると、理論的には、そのコードベースに関する質問に答えるモデルの能力を解き放つことができるかもしれない。"
  },
  {
    "start": 6519260,
    "end": 6522228,
    "text": "OpenAIゼロワンについてお聞きします。"
  },
  {
    "start": 6522364,
    "end": 6527188,
    "text": "このようなテストタイム・コンピューティング・システムは、プログラミングにおいてどのような役割を果たすと思いますか？"
  },
  {
    "start": 6527284,
    "end": 6530716,
    "text": "テストタイム・コンピュートは本当に、本当に面白いと思う。"
  },
  {
    "start": 6530908,
    "end": 6547170,
    "text": "これは、データ量とモデルのサイズを拡大するにつれて、損失と下流のベンチマーク、そしてコーディングやその他のタスクに使用する際の一般的なパフォーマンスの両方において、より良いパフォーマンスを得ることができる。"
  },
  {
    "start": 6548830,
    "end": 6555830,
    "text": "データの壁にぶつかり始めている。つまり、この体制を拡大し続けるのは難しいということだ。"
  },
  {
    "start": 6555990,
    "end": 6573400,
    "text": "そのため、テスト時間の計算を10回スケールアップすることは、使用する推論時間のフロップ数を増やしながら、推論時間を使用するフロップ数を増やすことで、これらのモデルの性能に対応する改善を得るという興味深い方法である。"
  },
  {
    "start": 6573440,
    "end": 6578856,
    "text": "従来は、文字通り、より大きなモデルをトレーニングする必要があり、常にそれだけ多くのフロップを使用していた。"
  },
  {
    "start": 6578888,
    "end": 6586904,
    "text": "今なら、同じサイズのモデルを使い、もっと長い時間走らせれば、もっと大きなモデルのクオリティで答えを出せるかもしれない。"
  },
  {
    "start": 6586992,
    "end": 6602720,
    "text": "これに関して私が気に入っているのは、100兆個のトークンで訓練された100兆個のパラメーター・モデル・インテリジェンスを必要とするような問題があることです。"
  },
  {
    "start": 6602840,
    "end": 6613784,
    "text": "これだけの労力と計算量を費やして、これだけのコストのかかるモデルをトレーニングし、それを頻繁に実行するのは、まったく無駄だと感じる。"
  },
  {
    "start": 6613832,
    "end": 6623440,
    "text": "その代わりに、99.9％のクエリーを実行できるモデルを訓練することができれば、推論時間を長くすることができる。"
  },
  {
    "start": 6623560,
    "end": 6631128,
    "text": "本当に、本当に最大限のインテリジェンスを求めている数少ない人たちのために、どの問題が必要なのか、どうやって見極めるのか？"
  },
  {
    "start": 6631184,
    "end": 6636008,
    "text": "GPTを使用するタイミングを動的に把握することは、どの程度のインテリジェンスで可能なのか？"
  },
  {
    "start": 6636064,
    "end": 6641740,
    "text": "小型モデルを使うときと、大型モデルが必要なときのように。"
  },
  {
    "start": 6643080,
    "end": 6646352,
    "text": "つまり、それは未解決の研究課題なんだ。"
  },
  {
    "start": 6646416,
    "end": 6647208,
    "text": "確かに。"
  },
  {
    "start": 6647384,
    "end": 6650818,
    "text": "このモデル・ルーティングの問題は、実はまだ誰も解明できていないと思う。"
  },
  {
    "start": 6650984,
    "end": 6664598,
    "text": "しかし、4.0ソネット20の間のレベルでは、少し難しい。"
  },
  {
    "start": 6664774,
    "end": 6676880,
    "text": "また、4レベルモデルでは難しすぎるかどうか、0.1レベルモデルが必要かどうかを判断するには、どの程度の知性が必要かという問題もある。"
  },
  {
    "start": 6676990,
    "end": 6686940,
    "text": "よくわからないのですが、事前トレーニングがあり、事後トレーニングがあり、そしてテスト時間の計算があります。"
  },
  {
    "start": 6687060,
    "end": 6688644,
    "text": "別々にしていいんですか？"
  },
  {
    "start": 6688732,
    "end": 6690196,
    "text": "最大の利益はどこにあるのか？"
  },
  {
    "start": 6690388,
    "end": 6698052,
    "text": "テスト時間の計算のように、テスト時間の計算を機能させるために必要な全体的なトレーニング戦略があるからね。"
  },
  {
    "start": 6698156,
    "end": 6707716,
    "text": "この件に関して本当に奇妙なことは、大きな研究所以外では誰も、そしておそらくオープンなAIでさえも、それがどのように機能するのかを誰も知らないということだ。"
  },
  {
    "start": 6707748,
    "end": 6713488,
    "text": "彼らがやっているかもしれないことのヒントを示す、実に興味深い興味深い論文がいくつかある。"
  },
  {
    "start": 6713664,
    "end": 6719848,
    "text": "ということは、おそらくプロセス報酬モデルを使ったツリーサーチで何かをやっているのだろう。"
  },
  {
    "start": 6720024,
    "end": 6728184,
    "text": "そうだね、問題は、それがどのようなものなのか正確にはわからないということだと思う。"
  },
  {
    "start": 6728272,
    "end": 6737630,
    "text": "私ならポストトレーニングに入れるだろうが、テスト時の計算をモデルに機能させるために費やす計算量は、いずれプリトレーニングを凌駕することになるのかもしれない。"
  },
  {
    "start": 6738690,
    "end": 6743858,
    "text": "OANがRLのような連鎖思考を使っているかどうかもわからない。"
  },
  {
    "start": 6743914,
    "end": 6745770,
    "text": "どれをどう使っているのかはわからない。"
  },
  {
    "start": 6745930,
    "end": 6747058,
    "text": "私たちは何も知らない。"
  },
  {
    "start": 6747194,
    "end": 6748590,
    "text": "推測するのは楽しい。"
  },
  {
    "start": 6750410,
    "end": 6754470,
    "text": "もし競合モデルを作るとしたら、どうする？"
  },
  {
    "start": 6755010,
    "end": 6766188,
    "text": "報酬モデルと結果報酬モデル、プロセス報酬モデルの違いについて説明します。"
  },
  {
    "start": 6766324,
    "end": 6773796,
    "text": "成果報酬モデルとは、人々が訓練を受けている伝統的な報酬モデルの一種で、言語モデリングである。"
  },
  {
    "start": 6773908,
    "end": 6775380,
    "text": "それは最終的なものを見ているだけだ。"
  },
  {
    "start": 6775420,
    "end": 6777780,
    "text": "もし、あなたが数学の問題を解いているのなら、最後にそれを見てみよう。"
  },
  {
    "start": 6777820,
    "end": 6782068,
    "text": "あなたはすべてをやり遂げた。"
  },
  {
    "start": 6782164,
    "end": 6789268,
    "text": "私たちは、この結果に対する報酬は何だろうかと考えることが多い。"
  },
  {
    "start": 6789444,
    "end": 6791628,
    "text": "OpenAIはこれに関する予備的な論文を発表していた。"
  },
  {
    "start": 6791684,
    "end": 6802240,
    "text": "昨年の夏だったと思うが、彼らは人間のラベラーを使って、数十万件というかなり大規模な思考連鎖の採点データセットを手に入れた。"
  },
  {
    "start": 6803740,
    "end": 6816620,
    "text": "結局のところ、人々がプロセス報酬モデルを使用する方法において、たくさんのサンプルの中からどのように選択するかに影響を与える手段として使用する以外には、私は何も興味深いものを見ていないように感じる。"
  },
  {
    "start": 6816740,
    "end": 6831406,
    "text": "これらの論文で人々が行っているのは、言語モデルから多くの出力をサンプリングし、プロセス報酬モデルを使って、他のヒューリスティックな方法と一緒にそれらの世代を評価し、それを使って最適な答えを選ぶということだ。"
  },
  {
    "start": 6831598,
    "end": 6838766,
    "text": "人々がうまくいくかもしれないと考え、人々がうまくいきたいと思っている本当に興味深いことは、このようなプロセス報酬モデルを使ったツリーサーチだ。"
  },
  {
    "start": 6838798,
    "end": 6853160,
    "text": "思考の連鎖の一つひとつのステップを本当に評価できるのであれば、思考の連鎖を枝分かれさせ、複数の経路を探索することができる。"
  },
  {
    "start": 6853980,
    "end": 6854532,
    "text": "そうだね。"
  },
  {
    "start": 6854636,
    "end": 6860252,
    "text": "ブランチの質が、最後の最後で結果の質と強い相関関係を持つ場合。"
  },
  {
    "start": 6860356,
    "end": 6863204,
    "text": "あなたは、どの枝を取るべきかを知る良いモデルを持っている。"
  },
  {
    "start": 6863332,
    "end": 6865924,
    "text": "短期だけでなく長期的にも。"
  },
  {
    "start": 6865972,
    "end": 6866348,
    "text": "そうだね。"
  },
  {
    "start": 6866444,
    "end": 6873516,
    "text": "私が思うに、興味深い仕事は、プロセスを適切に訓練する方法を見つけ出すこと、あるいはオープンソース化された興味深い仕事だ。"
  },
  {
    "start": 6873548,
    "end": 6880360,
    "text": "私が考えているのは、プロセス報酬モデルをより自動化された方法でトレーニングする方法だ。"
  },
  {
    "start": 6881220,
    "end": 6883452,
    "text": "私はここで間違っているかもしれないし、いくつかの論文に触れていないかもしれない。"
  },
  {
    "start": 6883476,
    "end": 6892200,
    "text": "私は、ツリー検索とコードを行うために創造的にプロセス報酬モデルを使用するために本当にうまく機能すると思われるスーパーを見たことがない。"
  },
  {
    "start": 6892540,
    "end": 6895748,
    "text": "これはAIの安全性であり、少し哲学的な質問かもしれない。"
  },
  {
    "start": 6895804,
    "end": 6902740,
    "text": "OpenAIは、思考の連鎖をユーザーから隠していると言っているが、それは難しい決断だったと言っている。"
  },
  {
    "start": 6903040,
    "end": 6908820,
    "text": "彼らは、思考の連鎖を示すのではなく、モデルに思考の連鎖を要約するよう求めているのだ。"
  },
  {
    "start": 6909160,
    "end": 6917416,
    "text": "彼らはまた、モデルがユーザーを操作しようとしていないことを確認するために、思考の連鎖を監視するつもりだと裏で言っている。"
  },
  {
    "start": 6917608,
    "end": 6920992,
    "text": "とにかく、思考の連鎖を隠すことについてどう思う？"
  },
  {
    "start": 6921176,
    "end": 6929140,
    "text": "OpenAIにとっての配慮のひとつは、これは完全に推測だが、人々が自分たちのモデルからこれらの能力を抽出するのを難しくしたいということかもしれない。"
  },
  {
    "start": 6929560,
    "end": 6939768,
    "text": "最終的な結果を得るためにモデルが取ったステップを見るなど、かなり重要なデータだからだ。"
  },
  {
    "start": 6939864,
    "end": 6941392,
    "text": "それでトレーニングができるだろう。"
  },
  {
    "start": 6941496,
    "end": 6947032,
    "text": "また、大手の言語モデル・プロバイダーの中には、このような鏡のような状況もあった。"
  },
  {
    "start": 6947056,
    "end": 6962418,
    "text": "また、これは推測ですが、これらのAPIのいくつかは、生成するトークンのログ確率や、プロンプトトークンのログ確率に簡単にアクセスできるようになっていました。"
  },
  {
    "start": 6962594,
    "end": 6963754,
    "text": "これもまったくの憶測だ。"
  },
  {
    "start": 6963842,
    "end": 6989240,
    "text": "もし、この隠れた連鎖のようなアクセスログ確率があれば、APIからこれらの能力を抽出し、これらの最大のモデルからアスタリスクとしてコントロールするモデルへと、さらに多くの情報を得ることができます。"
  },
  {
    "start": 6989320,
    "end": 6995704,
    "text": "このモデルを手に入れたとき、ぜひ試してみたいと思ったからだ。"
  },
  {
    "start": 6995832,
    "end": 7016024,
    "text": "多くのプログラマーが試してみたいと思うだろうが、Oのカーソルはデフォルトのカーソルではない。"
  },
  {
    "start": 7016152,
    "end": 7029480,
    "text": "だから、このモデルをどう使うかについてはまだ判断がつかないと思うし、「ああ、これが今のユースケースなんだ」とはっきりわかるようなものをリリースした例をまだ見ていない。"
  },
  {
    "start": 7029640,
    "end": 7042424,
    "text": "このような背景を持つものを走らせたり、ループの中にモデルを置いたり、エージェント的なモデルを置いたりするのが簡単になるかもしれない。"
  },
  {
    "start": 7042512,
    "end": 7049528,
    "text": "はっきり言って、私たちにはアイデアがある。"
  },
  {
    "start": 7049584,
    "end": 7054780,
    "text": "しかし、このような大きな制約がある。"
  },
  {
    "start": 7055520,
    "end": 7066870,
    "text": "ストリーミングはできないので、アウトプットを監督したいような場合に使うのは本当に、本当に苦痛で、代わりにウォールテキストが表示されるのを待つだけになってしまう。"
  },
  {
    "start": 7067250,
    "end": 7078706,
    "text": "また、テストタイムの計算や検索の初期段階のような感じもする。"
  },
  {
    "start": 7078738,
    "end": 7092710,
    "text": "私は、人々が事前トレーニングデータの量を増やし、モデルのサイズを大きくし、事前トレーニングを行い、そこでトリックを見つけるのと並行して、検索をより良く、より良く機能させるという別のスレッドを持つようになるのではないかと思う。"
  },
  {
    "start": 7093650,
    "end": 7098790,
    "text": "ストロベリー・トゥモロー・アイズについてお聞きします。"
  },
  {
    "start": 7099770,
    "end": 7107830,
    "text": "GitHub Copilotが何らかの形でゼロワンと統合されるかもしれないようだ。"
  },
  {
    "start": 7108170,
    "end": 7111630,
    "text": "これはカーソルが終わったということなのか？"
  },
  {
    "start": 7113010,
    "end": 7116954,
    "text": "というコメントを見たような気がする。"
  },
  {
    "start": 7117082,
    "end": 7118470,
    "text": "カーソルを止める時が来た。"
  },
  {
    "start": 7119370,
    "end": 7121274,
    "text": "カーソルをシャットダウンする時か？"
  },
  {
    "start": 7121402,
    "end": 7131202,
    "text": "このスペースは、2010年代の過去のソフトウェア・スペースとは少し違っていて、ここの天井は本当に、本当に、信じられないほど高いと思う。"
  },
  {
    "start": 7131346,
    "end": 7136950,
    "text": "だから、3～4年後の最高の製品は、今の最高の製品よりもずっと便利になっていると思う。"
  },
  {
    "start": 7137290,
    "end": 7144922,
    "text": "堀がどうのこうの、ブランドがどうのこうの......。"
  },
  {
    "start": 7144986,
    "end": 7150642,
    "text": "結局のところ、製品の革新を止めなければ、負けるだけだと思う。"
  },
  {
    "start": 7150786,
    "end": 7163190,
    "text": "それは新興企業にとっても、この市場に参入しようとする人々にとっても素晴らしいことだ。なぜなら、より良いものを作るだけで、すでに多くのユーザーを抱えている企業に勝てるチャンスがあるということだからだ。"
  },
  {
    "start": 7164710,
    "end": 7177166,
    "text": "今後数年間は、最高の製品を作ること、最高のシステムを構築すること、そしてそれはモデリング・エンジンの面でも、編集体験の面でも同じだと思う。"
  },
  {
    "start": 7177358,
    "end": 7186206,
    "text": "カーソルの付加価値のほとんどは、ゼロワンのように新モデルを素早く統合することだけではないと思う。"
  },
  {
    "start": 7186238,
    "end": 7200620,
    "text": "それは、製品のあらゆる面であなたのために働いていることに気づかないようなカスタムモデルや、一つひとつの機能に対する本当に考え抜かれたUXに至るまで、すべての深みから来るものだ。"
  },
  {
    "start": 7201640,
    "end": 7205624,
    "text": "よし、その深い答えから、テクニカルな話に戻ろう。"
  },
  {
    "start": 7205712,
    "end": 7208264,
    "text": "合成データの分類法があるとおっしゃいましたね。"
  },
  {
    "start": 7208392,
    "end": 7209376,
    "text": "ああ、そうだ。"
  },
  {
    "start": 7209568,
    "end": 7210656,
    "text": "説明していただけますか？"
  },
  {
    "start": 7210728,
    "end": 7214740,
    "text": "合成データには大きく分けて3種類あると思う。"
  },
  {
    "start": 7215210,
    "end": 7216474,
    "text": "まず1つ目。"
  },
  {
    "start": 7216562,
    "end": 7217530,
    "text": "合成データとは何か？"
  },
  {
    "start": 7217570,
    "end": 7218010,
    "text": "最初に？"
  },
  {
    "start": 7218130,
    "end": 7227042,
    "text": "通常のデータには、合成データではない、自然に作られたデータがある。"
  },
  {
    "start": 7227146,
    "end": 7231590,
    "text": "人為的なプロセスによって、このようなデータ（合成データ）が得られる。"
  },
  {
    "start": 7232290,
    "end": 7234530,
    "text": "最初のものは蒸留だろう。"
  },
  {
    "start": 7234690,
    "end": 7245232,
    "text": "言語モデルがトークンやトークンの確率分布を出力する。"
  },
  {
    "start": 7245416,
    "end": 7263500,
    "text": "このアプローチは、トークンを生成した元のモデルよりも、より高性能なネットのようなモデルを得ることはできないが、非常に高価で高レイテンシーのモデルから引き出したい能力がある場合、それをより小さなタスクに特化したモデルに絞り込むことができる。"
  },
  {
    "start": 7264800,
    "end": 7271574,
    "text": "2つ目のタイプは、問題の一方向がその逆よりも簡単だと思うときだ。"
  },
  {
    "start": 7271742,
    "end": 7284942,
    "text": "その好例が、先に述べたようなバグの検出である。合理的に見えるバグを導入するのは、実際にバグを検出するよりもずっと簡単だ。"
  },
  {
    "start": 7284966,
    "end": 7287250,
    "text": "これは人間も同じだろう。"
  },
  {
    "start": 7288390,
    "end": 7293974,
    "text": "だから、できることは、それほど多くのデータで訓練されていない、それほど賢くないモデルを手に入れることだ。"
  },
  {
    "start": 7294062,
    "end": 7298140,
    "text": "コードにたくさんのバグを導入し、それをトレーニングに利用するんだ。"
  },
  {
    "start": 7298260,
    "end": 7301916,
    "text": "合成データを使って、バグを検出するのに非常に優れたモデルを訓練する。"
  },
  {
    "start": 7302108,
    "end": 7317360,
    "text": "最後のカテゴリーは、大手の研究所が合成データに対して行っている主なものだと思うが、言語モデルを使ってテキストを作成し、それを簡単に検証できるようにすることだ。"
  },
  {
    "start": 7318660,
    "end": 7332758,
    "text": "極端な例として、シェイクスピア・レベルの言語かどうかを検出できる検証システムがあるとして、大勢の猿にタイプライターを打たせれば、最終的にはシェイクスピア・レベルの言語モデルを訓練するのに十分な訓練データを得ることができる。"
  },
  {
    "start": 7332934,
    "end": 7342370,
    "text": "これは数学のケースとよく似ていて、形式言語では検証は実に簡単なのだ。"
  },
  {
    "start": 7343070,
    "end": 7354324,
    "text": "そうすれば、問題ないモデルを持って、大量のロールアウトを生成し、その中から実際に真実の定理を証明したものを選び、さらにそれを訓練することができる。"
  },
  {
    "start": 7354492,
    "end": 7365324,
    "text": "リートコードでコードにできることは似たようなもので、例えば、あるテストセットがあれば、そのテストに合格した場合、その問題は解決したことになる。"
  },
  {
    "start": 7365492,
    "end": 7370880,
    "text": "テストに合格したことを確認してから、モデルをトレーニングし、テストに合格したアウトプットをトレーニングするのと同じことができる。"
  },
  {
    "start": 7371540,
    "end": 7377656,
    "text": "すべてのドメイン、あるいは一般的なドメインでこれを機能させるのは、少し難しいことだと思う。"
  },
  {
    "start": 7377848,
    "end": 7388920,
    "text": "完璧なベリファイアを持つことは、モデルに与えるオープンエンドの雑多なタスクや、もっと長いホライズンタスク、エンコードでさえも、本当に、本当に難しいと感じる。"
  },
  {
    "start": 7389040,
    "end": 7396368,
    "text": "それは君がアルビッドほど楽観的ではないからだよ。でも、そうだね、3つ目のカテゴリーには検証者が必要だ。"
  },
  {
    "start": 7396544,
    "end": 7397112,
    "text": "そうだね。"
  },
  {
    "start": 7397216,
    "end": 7397856,
    "text": "検証する。"
  },
  {
    "start": 7397928,
    "end": 7400860,
    "text": "それが正しいという事実がわかっているときが一番いいような気がする。"
  },
  {
    "start": 7401180,
    "end": 7410348,
    "text": "それなら、言語モデルを使って検証するのではなく、テストや形式的なシステムを使ったり、実際に動かしたりして検証することになる。"
  },
  {
    "start": 7410524,
    "end": 7414164,
    "text": "手作業で品質管理を行う、人間的な検証を行う。"
  },
  {
    "start": 7414292,
    "end": 7419360,
    "text": "でも、その言語モデルのバージョンでは、その言語モデルを実行し、実際に出力を理解するんだ。"
  },
  {
    "start": 7419740,
    "end": 7421692,
    "text": "いや、その中間だね。"
  },
  {
    "start": 7421836,
    "end": 7428018,
    "text": "そうだね、大きな利益をもたらす可能性が最も高いカテゴリーだと思う。"
  },
  {
    "start": 7428204,
    "end": 7432610,
    "text": "フィードバック側のRLHF対rlaifのRLはどうか。"
  },
  {
    "start": 7433630,
    "end": 7435014,
    "text": "その役割は？"
  },
  {
    "start": 7435102,
    "end": 7438930,
    "text": "モデルでより良いパフォーマンスを得るために？"
  },
  {
    "start": 7440030,
    "end": 7440454,
    "text": "そうだね。"
  },
  {
    "start": 7440502,
    "end": 7451410,
    "text": "RLHFとは、使用する報酬モデルが、人間から収集したいくつかのラベルから訓練され、フィードバックを与えることである。"
  },
  {
    "start": 7452750,
    "end": 7460520,
    "text": "このようなタスクに対して、あなたが気にかけている人間のフィードバックを大量に得る能力があれば、これは有効だと思う。"
  },
  {
    "start": 7461220,
    "end": 7469440,
    "text": "レイフは興味深いね。"
  },
  {
    "start": 7469860,
    "end": 7478836,
    "text": "検証の方が生成より少し簡単なのは、制約次第だ。"
  },
  {
    "start": 7478868,
    "end": 7482486,
    "text": "この言語モデルを使って言語モデルの出力を見て、言語モデルを証明しているのですか？"
  },
  {
    "start": 7482588,
    "end": 7484426,
    "text": "いや、実際にはうまくいくかもしれない。"
  },
  {
    "start": 7484578,
    "end": 7494226,
    "text": "もし言語モデルが、解を生成するよりも検証する方がずっと簡単な場合、このような再帰ループが発生する可能性がある。"
  },
  {
    "start": 7494258,
    "end": 7496070,
    "text": "その通りになるとは思わない。"
  },
  {
    "start": 7497010,
    "end": 7507554,
    "text": "もうひとつは、RLAとRLHFを少しミックスすることだ。"
  },
  {
    "start": 7507602,
    "end": 7515086,
    "text": "これはカーソルタブデの場合であり、2つの可能性のある世代から、より良いものを選ぶことである。"
  },
  {
    "start": 7515198,
    "end": 7518734,
    "text": "それなら、人間のちょっとした後押しが必要なだけだ。"
  },
  {
    "start": 7518822,
    "end": 7529142,
    "text": "このモデルは、あなたが望むものを正確に備えている。"
  },
  {
    "start": 7529166,
    "end": 7534530,
    "text": "通常のRLAのシェフが、報酬モデルや大量の例をトレーニングするのとは違うようだ。"
  },
  {
    "start": 7535800,
    "end": 7541580,
    "text": "世代と検証、世代とランキングを比較したときの直感は？"
  },
  {
    "start": 7542520,
    "end": 7545100,
    "text": "ランキングはジェネレーションより簡単なのか？"
  },
  {
    "start": 7545760,
    "end": 7548900,
    "text": "私の直感は、そうだ、そうすべきだと言うだろう。"
  },
  {
    "start": 7549200,
    "end": 7563616,
    "text": "これは、もしあなたがpがnpに等しくないと信じるなら、実際に証明するよりも、証明があればそれを検証する方がずっとずっと簡単な、この巨大な問題のクラスに戻るようなものだ。"
  },
  {
    "start": 7563808,
    "end": 7568620,
    "text": "同じことをすれば、pがmpに等しくないことや、pが10のpに等しいことが証明されるのだろうか。"
  },
  {
    "start": 7570080,
    "end": 7571368,
    "text": "それは本当にクールだ。"
  },
  {
    "start": 7571504,
    "end": 7576168,
    "text": "AIがメタルだと感じるものなら何でもいい。"
  },
  {
    "start": 7576224,
    "end": 7577456,
    "text": "誰が手柄を立てるのか。"
  },
  {
    "start": 7577648,
    "end": 7579700,
    "text": "もうひとつ、未解決の哲学的疑問がある。"
  },
  {
    "start": 7584040,
    "end": 7592042,
    "text": "AIがメタルフィールドを獲得する確率はどのくらいなのか、意外と気になるんだ。"
  },
  {
    "start": 7592146,
    "end": 7592890,
    "text": "スペシャリティだ。"
  },
  {
    "start": 7593010,
    "end": 7595274,
    "text": "ええと、アモンの賭けが何なのか分からない。"
  },
  {
    "start": 7595402,
    "end": 7596034,
    "text": "ああ、申し訳ない。"
  },
  {
    "start": 7596082,
    "end": 7597666,
    "text": "ノーベル賞が先か、フィールドメタルが先か。"
  },
  {
    "start": 7597698,
    "end": 7601162,
    "text": "フィールド・メタルはメタル・フィールド・メタル・レベルだと思う。"
  },
  {
    "start": 7601226,
    "end": 7602378,
    "text": "メタルが先だと感じている。"
  },
  {
    "start": 7602474,
    "end": 7607306,
    "text": "まあ、もちろんそう言うだろうけど、孤立したシステムのようなものでもあるんだ。"
  },
  {
    "start": 7607338,
    "end": 7608202,
    "text": "いや、もちろんだ。"
  },
  {
    "start": 7608266,
    "end": 7608722,
    "text": "そうだね。"
  },
  {
    "start": 7608826,
    "end": 7610330,
    "text": "必要ないのかどうかも分からない。"
  },
  {
    "start": 7610370,
    "end": 7611682,
    "text": "私はそこに多くのものを感じている。"
  },
  {
    "start": 7611706,
    "end": 7623838,
    "text": "IMOへの道筋はもう少しはっきりしていたように感じた。すでにIMOの問題をいくつか解決することができたし、当時の文献によれば、人々がどのような戦術を取ることができるのか、低空飛行の果実がたくさんあったからだ。"
  },
  {
    "start": 7623934,
    "end": 7627574,
    "text": "私は今、鹿が上達する空間について、かなり疎くなっていると思う。"
  },
  {
    "start": 7627702,
    "end": 7629670,
    "text": "2つだ。"
  },
  {
    "start": 7629710,
    "end": 7634970,
    "text": "本当に、本当に難しい未解決の問題の解決にどれだけ近づいているかという直感は少ない。"
  },
  {
    "start": 7635430,
    "end": 7641326,
    "text": "物理や100％とは違う。"
  },
  {
    "start": 7641518,
    "end": 7643290,
    "text": "その可能性の方が高いと思う。"
  },
  {
    "start": 7643590,
    "end": 7646130,
    "text": "そうなる可能性の方が高いだろうね。"
  },
  {
    "start": 7646590,
    "end": 7647302,
    "text": "そうだね。"
  },
  {
    "start": 7647446,
    "end": 7658238,
    "text": "そうだね、BSD（バーズライター）とか、悲惨な予想、リーマン仮説とか、難しい数学の問題は、実は本当に難しいんだ。"
  },
  {
    "start": 7658374,
    "end": 7662886,
    "text": "解決への道筋がどうなっているのかさえ、はっきりしない。"
  },
  {
    "start": 7663038,
    "end": 7665330,
    "text": "私たちは道がどのようなものなのかさえ知らない。"
  },
  {
    "start": 7666110,
    "end": 7675778,
    "text": "これは孤立したシステムのようなもので、実際に、良い報酬システムがあって、そのためのトレーニングがしやすいように感じるんだ。"
  },
  {
    "start": 7675954,
    "end": 7678990,
    "text": "AGIより先にフィールドのメタルが手に入るかもしれない。"
  },
  {
    "start": 7679690,
    "end": 7684330,
    "text": "つまり、私はとても幸せなんだ。"
  },
  {
    "start": 7684450,
    "end": 7690618,
    "text": "2020年H2030年、メタルだと思うかどうかはわからない。"
  },
  {
    "start": 7690754,
    "end": 7691418,
    "text": "金属を感じる。"
  },
  {
    "start": 7691474,
    "end": 7692190,
    "text": "分かった。"
  },
  {
    "start": 7693730,
    "end": 7696870,
    "text": "事態の進展の速さを考えると、今からずっと先のことのように感じられる。"
  },
  {
    "start": 7697510,
    "end": 7700810,
    "text": "物事の進展の速さといえば、スケーリング法について話そう。"
  },
  {
    "start": 7701310,
    "end": 7709998,
    "text": "知らない人のために、スケーリング法という考え方について話しておくといいかもしれない。"
  },
  {
    "start": 7710054,
    "end": 7710846,
    "text": "それは何なのか？"
  },
  {
    "start": 7710958,
    "end": 7713990,
    "text": "現状と今後の方向性は？"
  },
  {
    "start": 7714150,
    "end": 7723012,
    "text": "OpenAIによるオリジナルのスケーリング法則の論文は、学習率のスケジュールに問題があったため、少し間違っていたと思う。"
  },
  {
    "start": 7723206,
    "end": 7726060,
    "text": "すると、チンチラはより正しいバージョンを示した。"
  },
  {
    "start": 7726600,
    "end": 7739060,
    "text": "それ以来、人々は再び最適な計算をすることから逸脱するようになった。なぜなら、推論予算が与えられれば、人々はよりうまく機能するように最適化するようになったからだ。"
  },
  {
    "start": 7739720,
    "end": 7749700,
    "text": "これらのカーブには、私たちが当初使っていたようなパラメータとデータの数を計算するだけのものよりも、もっと多くの次元があると思う。"
  },
  {
    "start": 7750420,
    "end": 7752580,
    "text": "推論コンピュートと同様、明らかなものだ。"
  },
  {
    "start": 7752620,
    "end": 7754716,
    "text": "文脈の長さも明白なものだと思う。"
  },
  {
    "start": 7754748,
    "end": 7761100,
    "text": "もし気になるなら、推論計算とコンテキスト・ウィンドウの2つを気にするとしよう。"
  },
  {
    "start": 7761260,
    "end": 7768972,
    "text": "もしかしたら、あなたがトレーニングしたいのはSSMの一種かもしれない。"
  },
  {
    "start": 7769076,
    "end": 7776920,
    "text": "たとえそれがトレーニング中に10倍のスケーリング特性を持ったとしても、同じレベルの能力を得るためにトレーニングに10倍の計算量を費やしたことになる。"
  },
  {
    "start": 7777770,
    "end": 7783138,
    "text": "長いコンテクストウィンドウの推論バジェットを最も重視するのだから。"
  },
  {
    "start": 7783314,
    "end": 7787402,
    "text": "このすべての次元を使って、みんながどんなプレーをするのか興味深い。"
  },
  {
    "start": 7787586,
    "end": 7789378,
    "text": "ええ、あなたは多次元について語っている。"
  },
  {
    "start": 7789434,
    "end": 7799990,
    "text": "明らかに、当初の構想は、パラメータで測定されるモデルのサイズと、トークンの数で測定されるデータのサイズという変数を見て、その2つの比率を見ていただけだ。"
  },
  {
    "start": 7800890,
    "end": 7808310,
    "text": "数字がある、あるいは少なくとも最低限がある、という考え方は説得力がある。"
  },
  {
    "start": 7810290,
    "end": 7814390,
    "text": "大は小を兼ねるという考え方はまだあるのか？"
  },
  {
    "start": 7815570,
    "end": 7822458,
    "text": "つまり、生のパフォーマンスや生のインテリジェンスという点では、確かに大きい方がいいと思う。"
  },
  {
    "start": 7822514,
    "end": 7823474,
    "text": "生の知性。"
  },
  {
    "start": 7823562,
    "end": 7825714,
    "text": "私は、人々が取るかもしれない道だと思う。"
  },
  {
    "start": 7825802,
    "end": 7828050,
    "text": "特に蒸留には強気だ。"
  },
  {
    "start": 7828210,
    "end": 7831088,
    "text": "いくつまでノブを回せる？"
  },
  {
    "start": 7831184,
    "end": 7838020,
    "text": "トレーニングにトントントンとお金をかけるなら、最も高性能な安いモデルを手に入れよう。"
  },
  {
    "start": 7838480,
    "end": 7840328,
    "text": "本当に、できる限りの気遣いを。"
  },
  {
    "start": 7840344,
    "end": 7853976,
    "text": "というのも、推論時間の計算をできるだけ気にするという素朴なバージョンは、人々がすでにラマモデルで行ってきたことであり、あるいは、チンチラに最適なトークン数よりもはるかに多いトークンで、7Bモデルのクソをオーバートレーニングするだけだからだ。"
  },
  {
    "start": 7854128,
    "end": 7868308,
    "text": "本当にそれを気にするのであれば、ガンマがやったように、トークンのトレーニングだけでなく、ガンマ27 Bの分布とのKLダイバージェンスを最小化するトレーニングをすることだ。"
  },
  {
    "start": 7868404,
    "end": 7880108,
    "text": "ナレッジ・ディスティレーションでは、より小さなモデルを作成するために、文字通り270億のパラメータ・モデルをすべてのトークンでトレーニングすることになる。"
  },
  {
    "start": 7880244,
    "end": 7882484,
    "text": "蒸留はより速いモデルを提供するだけだ。"
  },
  {
    "start": 7882532,
    "end": 7883688,
    "text": "小さいということは速いということだ。"
  },
  {
    "start": 7883804,
    "end": 7884032,
    "text": "そうだね。"
  },
  {
    "start": 7884056,
    "end": 7899376,
    "text": "理論的には、ディスティレーションとは、トレーニングしているデータからより多くのシグナルを取り出すことであり、トレーニングできるデータが限られているというデータの壁を完全に乗り越えるのではなく、部分的に乗り越えるためのもうひとつの方法だと思います。"
  },
  {
    "start": 7899408,
    "end": 7903736,
    "text": "この本当に大きなモデルをすべてのトークンで訓練し、それをこの小さなモデルに抽出しよう。"
  },
  {
    "start": 7903768,
    "end": 7911494,
    "text": "もしかしたら、この小さなモデルでも、トークン1つあたりのシグナルを、トレーニングした場合よりも多く得られるかもしれない。"
  },
  {
    "start": 7911582,
    "end": 7915810,
    "text": "10兆ドルあげたら、どう使う？"
  },
  {
    "start": 7916350,
    "end": 7918374,
    "text": "つまり、島を買ったりすることはできない。"
  },
  {
    "start": 7918542,
    "end": 7929358,
    "text": "HFとRLHFに支払うお金に対して、大きなモデルを改善するという点で、どのように配分しますか？"
  },
  {
    "start": 7929454,
    "end": 7931078,
    "text": "ああ、そうだ。"
  },
  {
    "start": 7931134,
    "end": 7939902,
    "text": "このような大型モデルのトレーニングについては、私が知らないだけで、大型ラボだけが知っている秘密や詳細がたくさんあると思う。"
  },
  {
    "start": 7939926,
    "end": 7945550,
    "text": "問題なのは、私がこのようなことを試みても、そのお金の多くを無駄にしてしまうということだ。"
  },
  {
    "start": 7946290,
    "end": 7957658,
    "text": "多くの不信感を保留して、ノウハウを持っていると仮定するか、あるいは、今持っている限られた情報の中で活動しなければならないと言うのであれば。"
  },
  {
    "start": 7957754,
    "end": 7958226,
    "text": "いや、違う。"
  },
  {
    "start": 7958258,
    "end": 7970110,
    "text": "実際、私は、あなたが急襲し、すべての情報、すべての小さなヒューリスティック、すべての小さなパラメーターを手に入れると言いたい。"
  },
  {
    "start": 7970480,
    "end": 7979624,
    "text": "あなたが「生の知性」と呼ぶものを最大化するという観点から、今後5年間の資金をどのように投資するかを考えれば、答えは実にシンプルではないだろうか。"
  },
  {
    "start": 7979792,
    "end": 7982260,
    "text": "できるだけ多くの計算量を得ようとするだけだ。"
  },
  {
    "start": 7982680,
    "end": 7990264,
    "text": "結局、必要なのはGPUだけで、あとは研究者ができることをすべて見つけることができる。"
  },
  {
    "start": 7990392,
    "end": 7994620,
    "text": "大きなモデルを再トレーニングするか、小さなモデルを再トレーニングするかを調整できる。"
  },
  {
    "start": 7995090,
    "end": 8000946,
    "text": "まあ、これは、本当に計算機とお金によって制限されているのか、それとも他のものによって制限されているのか、というような問題になるね。"
  },
  {
    "start": 8001098,
    "end": 8007746,
    "text": "僕はアルビッドの、僕たちはある意味理想的な限定された存在なんだという信念に詳しいんだ。"
  },
  {
    "start": 8007778,
    "end": 8012490,
    "text": "多くの計算能力があれば、多くの実験を行うことができる。"
  },
  {
    "start": 8012650,
    "end": 8018458,
    "text": "巨大なモデルを訓練するために計算機を使うのとは対照的に、多くの実験を行うことになる。"
  },
  {
    "start": 8018594,
    "end": 8019362,
    "text": "私ならそうする。"
  },
  {
    "start": 8019506,
    "end": 8024600,
    "text": "私たちが持っているアイデアには限りがあると思う。"
  },
  {
    "start": 8024680,
    "end": 8025072,
    "text": "私はそう思う。"
  },
  {
    "start": 8025136,
    "end": 8038300,
    "text": "これだけの計算能力を持ち、世界中のあらゆるデータを収集できたとしても、最終的にはアイデアではなく、本当に優れたエンジニアリングによって制限されてしまうんだ。"
  },
  {
    "start": 8039640,
    "end": 8043408,
    "text": "世界中の資本があっても、本当に組み立てることができるのか？"
  },
  {
    "start": 8043584,
    "end": 8047780,
    "text": "ここで本当に違いを生み出す人は、世界でもそれほど多くはない。"
  },
  {
    "start": 8048480,
    "end": 8055310,
    "text": "研究には、純粋に、本当に、本当に大変なエンジニアリングの仕事がたくさんある。"
  },
  {
    "start": 8055810,
    "end": 8071882,
    "text": "非常に手垢のついた例として、オリジナルのトランスフォーマーの論文を見てみると、文献に埋もれている本当に興味深いコンセプトの数々を結合する作業と、すべてのコードやクーダカーネル、その他もろもろを記述する作業とでは、どれほどの違いがあることか。"
  },
  {
    "start": 8071906,
    "end": 8081080,
    "text": "元々GPUで動いていたのか、それともTpusで動いていたのかはわからないが、GPUの性能を飽和させるようなものだった。"
  },
  {
    "start": 8081160,
    "end": 8096540,
    "text": "GnOmeはおそらく世界最高のエンジニアの一人だろう。あるいは、さらに一歩踏み込んで、次世代のモデル、こうしたものを持ち、モデルのペリリズムを機能させ、何千、あるいは何万ものV100でスケーリングする、GBD 3はそうだったのかもしれない。"
  },
  {
    "start": 8097040,
    "end": 8101900,
    "text": "うまく機能させるためには、これらすべてに技術的な努力が必要なんだ。"
  },
  {
    "start": 8103000,
    "end": 8127100,
    "text": "もし、そのコストをゼロにはできないかもしれないが、10倍簡単にして、本当に素晴らしいアイデアを持つ人が、GPUの使用率が50％40％になるような、彼らが夢見た新しいアーキテクチャのバージョンにすぐに到達できるようにすれば、研究のスピードは飛躍的に上がると思う。"
  },
  {
    "start": 8127920,
    "end": 8133100,
    "text": "改善への明確な道筋が見えているのであれば、常に低空飛行の果実を最初に取るべきだと思う。"
  },
  {
    "start": 8133540,
    "end": 8153220,
    "text": "おそらくOpenAIや他のラボは、低空飛行の果実を摘み取るような正しいことをしたと思う。低空飛行の果実とは、GPT4.25スケールまでスケールアップできるようなもので、スケールアップを続けることで、物事はどんどん良くなっていく。"
  },
  {
    "start": 8153260,
    "end": 8173350,
    "text": "そして、本当に新しいアイデアが必要になったときに、10兆ドル使うのであれば、いくらかは使いたいだろうし、実際にアイデアを見直すことになるだろう。"
  },
  {
    "start": 8173390,
    "end": 8175406,
    "text": "おそらく、その時点であなたの考えは限られている。"
  },
  {
    "start": 8175518,
    "end": 8182410,
    "text": "AGIに到達するためには、おそらく新しいアイデアが必要だと私たち全員が考えていると思う。"
  },
  {
    "start": 8182750,
    "end": 8195340,
    "text": "また、私たちの誰もが、そのようなアイデアをより小さなスケールでテストし、それがうまくいくことをかなり確信できる方法が存在すると信じているだろう。"
  },
  {
    "start": 8195680,
    "end": 8214790,
    "text": "おそらくある程度の期間、パフォーマンスを向上させることができる核となるものがあるにもかかわらず、現在の立場の研究所が、非常に限られた研究やエンジニアリングの才能を、他のあらゆるアイデアの探求に捧げることは非常に困難なことなのだ。"
  },
  {
    "start": 8216010,
    "end": 8221830,
    "text": "ああ、でも、大きな研究室では、優勝するようなこともあるんだ。"
  },
  {
    "start": 8222330,
    "end": 8226858,
    "text": "さて、それでは大きな質問だ。"
  },
  {
    "start": 8226914,
    "end": 8231978,
    "text": "未来に目を向けると、あなたは今、プログラミングの世界の中心にいる。"
  },
  {
    "start": 8232074,
    "end": 8240400,
    "text": "数ヵ月後、1年後、2年後、5年後、10年後......。"
  },
  {
    "start": 8240780,
    "end": 8247480,
    "text": "私たちは、プログラマーが長い間運転席に座っている未来にとても興奮していると思う。"
  },
  {
    "start": 8248420,
    "end": 8261040,
    "text": "プログラマーにとってのスピードとエージェンシー、そしてコントロール、修正したいところを何でも修正できる能力、作っているものを本当に速く反復できる能力を重視するものだ。"
  },
  {
    "start": 8261670,
    "end": 8278158,
    "text": "これは、一部の人々がこの分野に飛びつくのとは少し違うと思う。"
  },
  {
    "start": 8278254,
    "end": 8282646,
    "text": "まるでエンジニアリング部門やエンジニアとslack上で話しているかのように、ソフトウェアを構築させることができるのか？"
  },
  {
    "start": 8282718,
    "end": 8285382,
    "text": "このような孤立したテキストボックスだけでいいのでしょうか？"
  },
  {
    "start": 8285566,
    "end": 8294103,
    "text": "私たちがそのことに興奮しない理由のひとつは、これまで話してきた遅延の問題だ。"
  },
  {
    "start": 8294191,
    "end": 8298847,
    "text": "私たちがそれに興奮しない理由は、多くのコントロールを放棄することになるからだ。"
  },
  {
    "start": 8299023,
    "end": 8302175,
    "text": "テキストボックスで話す場合、本当に具体的に話すのはずっと難しい。"
  },
  {
    "start": 8302327,
    "end": 8313039,
    "text": "エンジニアリング部門とコミュニケーションするように、モノとコミュニケーションするだけでは、本当に重要な決断を植物学的なものに委ねることになる。"
  },
  {
    "start": 8313450,
    "end": 8317910,
    "text": "これは、エンジニアリングとは何かという根本的なところを突いている。"
  },
  {
    "start": 8318530,
    "end": 8327674,
    "text": "エンジニアリングから少し離れている人の中には、仕様書が完全に書き上げられ、エンジニアが来て実装するだけだと考えている人もいるかもしれない。"
  },
  {
    "start": 8327842,
    "end": 8332070,
    "text": "それは、コードで物事を実現させ、物事を存在させるということだ。"
  },
  {
    "start": 8332970,
    "end": 8348098,
    "text": "私たちが楽しんでいる最高のエンジニアリングの多くには、何を作るのか、そしてスピードとコスト、その他システムに関わるすべてのこととの間の本当に難しいトレードオフについて、何トンもの小さなミクロの決断が含まれていると思う。"
  },
  {
    "start": 8348274,
    "end": 8358402,
    "text": "人間が実際にソフトウェアを設計し、作りたいものを指定する限り、私たちは望む。"
  },
  {
    "start": 8358426,
    "end": 8366250,
    "text": "AIだけで運営される会社ではなく、運転席に座っている人間がこれらの決定を下したいというのが本音だろう。"
  },
  {
    "start": 8366330,
    "end": 8370396,
    "text": "だから、それがどのようなものかはまだわからない。"
  },
  {
    "start": 8370588,
    "end": 8388948,
    "text": "コードベースの抽象度をコントロールし、擬似コードという形でコードベースを見ることで、コードベースの特定の部分を指し示すことができる。"
  },
  {
    "start": 8389084,
    "end": 8396420,
    "text": "その擬似コードを編集して、正式なプログラミングのレベルで変更を加えることもできる。"
  },
  {
    "start": 8396540,
    "end": 8404084,
    "text": "などを持っていれば、プログラミングのソフトウェア・コンポーネントのロジックの一部をジェスチャーで見ることができる。"
  },
  {
    "start": 8404172,
    "end": 8407004,
    "text": "プログラミングの流入テキスト編集コンポーネントはそのまま。"
  },
  {
    "start": 8407132,
    "end": 8408604,
    "text": "あなたがコントロールしている。"
  },
  {
    "start": 8408652,
    "end": 8410052,
    "text": "コードの中に入っていくこともできる。"
  },
  {
    "start": 8410076,
    "end": 8414508,
    "text": "より高い抽象度を実現しながら、生産性を大きく向上させることができる。"
  },
  {
    "start": 8414604,
    "end": 8418212,
    "text": "抽象化されたスタックを上下に行き来できればいい。"
  },
  {
    "start": 8418316,
    "end": 8420236,
    "text": "ああ、そこには解明しなければならない詳細がたくさんある。"
  },
  {
    "start": 8420268,
    "end": 8421724,
    "text": "それはあいまいな考えだ。"
  },
  {
    "start": 8421812,
    "end": 8427780,
    "text": "実際にうまくいくかどうかは時間が解決してくれるだろうが、人間が運転席に座ってコントロールし、スピードを出すという原則は本当に重要だと思う。"
  },
  {
    "start": 8428560,
    "end": 8436640,
    "text": "先ほどアルヴィッドが言ったように、プログラミングのスタイルによっては、本当によく指定されたバグがあれば、チャットボットのようなスタイルで手渡すことができると考えています。"
  },
  {
    "start": 8436760,
    "end": 8439240,
    "text": "それは、ほとんどのプログラミングではない。"
  },
  {
    "start": 8439280,
    "end": 8443100,
    "text": "しかし、それはまた、私たちが考える多くの人々の価値観にそぐわない番組でもある。"
  },
  {
    "start": 8443600,
    "end": 8446008,
    "text": "プログラミングの基本的なスキルについてはどうだろう？"
  },
  {
    "start": 8446064,
    "end": 8459556,
    "text": "今、多くの人たち、若い人たちが、プログラミングが好きで好きでたまらないけれど、このキャリアを歩んだら将来は大丈夫なのだろうかと不安に思っている。"
  },
  {
    "start": 8459748,
    "end": 8463788,
    "text": "プログラミングの技術そのものが根本的に変わると思いますか？"
  },
  {
    "start": 8463964,
    "end": 8467804,
    "text": "私は、今がソフトウェアを作るのに本当に、本当にエキサイティングな時期だと思っている。"
  },
  {
    "start": 8467972,
    "end": 8474920,
    "text": "2013年、2012年、それが何であれ、僕らはプログラミングがどんなものだったか覚えている。"
  },
  {
    "start": 8475780,
    "end": 8487216,
    "text": "ただ、もっとくだらないことや定型文がたくさんあったし、本当に厄介なことを調べたりもした。"
  },
  {
    "start": 8487248,
    "end": 8492272,
    "text": "確かにゼロではないけど、今のプログラミングはあの頃よりずっと楽しいよ。"
  },
  {
    "start": 8492456,
    "end": 8499768,
    "text": "喜びや集中力など、人々をプログラミングに惹きつけるすべてのものに、私たちは真正面から向き合っているような気がする。"
  },
  {
    "start": 8499864,
    "end": 8508480,
    "text": "例えば、本当に速くものを作ることができるという要素、スピード、そして個々のコントロール。"
  },
  {
    "start": 8509100,
    "end": 8513200,
    "text": "だから、ソフトウェアを作る人たちにとっては、本当に本当に楽しい時代になると思う。"
  },
  {
    "start": 8513620,
    "end": 8515852,
    "text": "技術もおそらく変わってくると思う。"
  },
  {
    "start": 8516036,
    "end": 8530362,
    "text": "人々のセンスや独創的なアイデアは拡大され、定型的な文章編集や、今日本当に重要だと思う注意深さといったものは、もしかしたら少し減ってしまうかもしれない。"
  },
  {
    "start": 8530546,
    "end": 8533058,
    "text": "プログラマーなら、もっと楽しいと思うよ。"
  },
  {
    "start": 8533234,
    "end": 8534350,
    "text": "みんなはどう思う？"
  },
  {
    "start": 8535010,
    "end": 8535870,
    "text": "私もそう思う。"
  },
  {
    "start": 8536250,
    "end": 8538270,
    "text": "変われることにとても興奮している。"
  },
  {
    "start": 8540530,
    "end": 8546562,
    "text": "最近起きたことのひとつは、コードベースに比較的大きなマイグレーションを行いたかったことだ。"
  },
  {
    "start": 8546626,
    "end": 8553988,
    "text": "私たちはNode JSの非同期ローカル・ストレージを使っていましたが、これはあまりパフォーマンスが良くないことが知られており、私たちのコンテキスト・オブジェクトに移行したいと考えていました。"
  },
  {
    "start": 8554154,
    "end": 8563624,
    "text": "これは大きな移行であり、コードベース全体とツバメに影響する。私は、今日のAIツールを使っても、この作業に5日は費やしただろう。"
  },
  {
    "start": 8563672,
    "end": 8577632,
    "text": "私がいくつかの例を示すだけで、AIがそれをすべての場所に適用し、「ああ、これは新しい例だ。"
  },
  {
    "start": 8577656,
    "end": 8579256,
    "text": "そこで何をすべきかを具体的に示す。"
  },
  {
    "start": 8579368,
    "end": 8580218,
    "text": "では、私は。"
  },
  {
    "start": 8580304,
    "end": 8585170,
    "text": "それは10分もあればできるし、もっともっと速く反復できる。"
  },
  {
    "start": 8586190,
    "end": 8592366,
    "text": "そうすれば、前もってあれこれ考えたり、黒板の前に立って具体的にどうやるかを考えたりする必要がなくなる。"
  },
  {
    "start": 8592398,
    "end": 8593654,
    "text": "コストが高いからだ。"
  },
  {
    "start": 8593742,
    "end": 8598350,
    "text": "まず何かを試してみて、ああ、これは私が望んでいるものとは違うんだ、と気づくことができる。"
  },
  {
    "start": 8598390,
    "end": 8601130,
    "text": "そうすれば、またすぐに変更できる。"
  },
  {
    "start": 8601630,
    "end": 8606498,
    "text": "ああ、将来プログラマーになるのはとても楽しいことだと思うよ。"
  },
  {
    "start": 8606614,
    "end": 8609954,
    "text": "ええ、その点はとても気に入っています。"
  },
  {
    "start": 8609962,
    "end": 8613602,
    "text": "多くの場合、プログラミングには2つの方法があるように感じる。"
  },
  {
    "start": 8613626,
    "end": 8623670,
    "text": "ひとつは、可能な限り最善の方法について、前もって注意深く懸命に考え、そして限られたエンジニアの時間を使って実際にそれを実行することだ。"
  },
  {
    "start": 8624250,
    "end": 8632658,
    "text": "私は、ただコードに触れて、それがどのようにレイアウトされるかを見て、それを本当に素早く反復する方がずっと好きだ。"
  },
  {
    "start": 8632674,
    "end": 8633870,
    "text": "その方が楽しい。"
  },
  {
    "start": 8635760,
    "end": 8639168,
    "text": "ああ、今話したように、定型文を作るのは素晴らしいことだ。"
  },
  {
    "start": 8639264,
    "end": 8644936,
    "text": "難しいデザイン、ニュアンス、難しいデザインの決定、移行に集中するんだ。"
  },
  {
    "start": 8645048,
    "end": 8647888,
    "text": "これは、これはクールなものだと感じている。"
  },
  {
    "start": 8647944,
    "end": 8657420,
    "text": "例えば、あるプログラミング言語から別のプログラミング言語への翻訳や、マイグレートという一般的な意味での翻訳が可能な大規模な言語モデルのようなものだ。"
  },
  {
    "start": 8658480,
    "end": 8660180,
    "text": "それは今この瞬間にある。"
  },
  {
    "start": 8660570,
    "end": 8667058,
    "text": "つまり、これらのモデルがどんどん良くなるにつれて、創造的な決断をすることが少なくなっていくのではないかという懸念があるんだ。"
  },
  {
    "start": 8667114,
    "end": 8676790,
    "text": "自然言語が主要なプログラミング言語であるような、自然言語のデザイン空間で動作するような場所に移行するのでしょうか？"
  },
  {
    "start": 8677210,
    "end": 8682870,
    "text": "もし今、誰かがプログラミングに興味を持っているとしたら、何を学ぶべきだと思いますか？"
  },
  {
    "start": 8684290,
    "end": 8695700,
    "text": "君たちがJavaで始めたように、僕はPHPのobjective cやobjective cを忘れてしまった。"
  },
  {
    "start": 8696160,
    "end": 8708160,
    "text": "つまり、最終的にはJavaScriptが勝利し、タイプスクリプトは勝利せず、バニラJavaScriptのようになり、世界を席巻し、PHPも少しは勝つだろう。"
  },
  {
    "start": 8708280,
    "end": 8721946,
    "text": "つまり、ドン・クヌースは、人口の何パーセントかはオタクで、プログラミングに必要な特殊な心理がある、という考えを持っている。"
  },
  {
    "start": 8722098,
    "end": 8730950,
    "text": "素晴らしいプログラミングができる、できるはずの人間がどんどん広がっていくような気がする。"
  },
  {
    "start": 8732530,
    "end": 8746542,
    "text": "プログラミングをする理由は人それぞれだと思うけど、本当の意味での最高のプログラマーは、プログラミングを本当に愛している人だと思う。"
  },
  {
    "start": 8746566,
    "end": 8762358,
    "text": "例えば、私たちのチームには、文字通り仕事から戻るとカーソルを起動し、夜通しサイドプロジェクトのコーディングを始め、午前3時まで起きている人たちがいる。"
  },
  {
    "start": 8762414,
    "end": 8763290,
    "text": "そうしている。"
  },
  {
    "start": 8764550,
    "end": 8769650,
    "text": "彼らが悲しんでいるとき、彼らはこう言った。"
  },
  {
    "start": 8771630,
    "end": 8782694,
    "text": "プログラミングへの執着と愛が、最高のプログラマーを生み出すのだと思う。"
  },
  {
    "start": 8782822,
    "end": 8789126,
    "text": "こういったタイプの人たちは、物事がどのように動いているのか、本当に細かいところまで見てくれると思う。"
  },
  {
    "start": 8789318,
    "end": 8793610,
    "text": "私が質問しているのは、まさにそのプログラムだと思う。"
  },
  {
    "start": 8794710,
    "end": 8800166,
    "text": "あなたが、スーパータブが、スーパー素晴らしい賞賛がタブが成功したとき。"
  },
  {
    "start": 8800358,
    "end": 8802134,
    "text": "タブを押し続ける。"
  },
  {
    "start": 8802302,
    "end": 8805622,
    "text": "チーム内のその人物は、誰よりもツケを罵るのが好きだ。"
  },
  {
    "start": 8805726,
    "end": 8805966,
    "text": "そうだね。"
  },
  {
    "start": 8805998,
    "end": 8810510,
    "text": "また、タブを押すだけではありません。"
  },
  {
    "start": 8810550,
    "end": 8813850,
    "text": "それは簡単な言い方で、キャッチーなキャッチフレーズのようなものだよ。"
  },
  {
    "start": 8814230,
    "end": 8821530,
    "text": "タブを押しているときに実際にやっていることは、それをやっている間、常にインテントを注入しているということだ。"
  },
  {
    "start": 8822230,
    "end": 8832118,
    "text": "あるときは却下し、またあるときは数文字追加で入力し、そうやって作られたものを形にしていく。"
  },
  {
    "start": 8832174,
    "end": 8837630,
    "text": "プログラミングは、自分が何を作りたいのか、ということに大きく変わると思う。"
  },
  {
    "start": 8837710,
    "end": 8838806,
    "text": "より高い帯域幅のようなものだ。"
  },
  {
    "start": 8838838,
    "end": 8840902,
    "text": "コンピューターとの通信量が増えるだけだ。"
  },
  {
    "start": 8840926,
    "end": 8847534,
    "text": "より高い帯域幅は、ただタイピングするのとは対照的に、意図を伝えるよりもはるかに低い帯域幅である。"
  },
  {
    "start": 8847662,
    "end": 8853370,
    "text": "つまり、これは『エンジニアリングの天才』と題されたあなたのマニフェストに通じるものだ。"
  },
  {
    "start": 8853790,
    "end": 8858454,
    "text": "私たちは、非凡で生産的な人間AIシステムを構築する応用研究ラボです。"
  },
  {
    "start": 8858502,
    "end": 8870454,
    "text": "つまり、このハイブリッド要素について言えば、手始めに、私たちは未来のエンジニア、つまり1人のエンジニアよりも桁違いに有能な人間のAIプログラマーを作ろうとしているのです。"
  },
  {
    "start": 8870622,
    "end": 8876672,
    "text": "このハイブリッド・エンジニアは、自分のコードベースを楽にコントロールでき、低エントロピーのキー操作も不要になる。"
  },
  {
    "start": 8876856,
    "end": 8879760,
    "text": "彼らは自分の判断のスピードで反復する。"
  },
  {
    "start": 8879880,
    "end": 8881880,
    "text": "最も複雑なシステムであってもだ。"
  },
  {
    "start": 8882040,
    "end": 8889424,
    "text": "AIと人間の創意工夫を組み合わせることで、彼らは最高の純粋なAIシステムを凌駕し、エンジニアを出し抜くだろう。"
  },
  {
    "start": 8889592,
    "end": 8892000,
    "text": "私たちは研究者とエンジニアのグループです。"
  },
  {
    "start": 8892080,
    "end": 8896088,
    "text": "私たちは、何が有用で何が可能なのか、その最先端で発明するためのソフトウェアとモデルを構築しています。"
  },
  {
    "start": 8896184,
    "end": 8904766,
    "text": "私たちの仕事は、すでに何十万人ものプログラマーの生活を向上させており、その過程で、少なくともプログラミングをもっと楽しくすることができるだろう。"
  },
  {
    "start": 8904878,
    "end": 8906558,
    "text": "今日はありがとう。"
  },
  {
    "start": 8906654,
    "end": 8907134,
    "text": "ありがとう。"
  },
  {
    "start": 8907182,
    "end": 8907950,
    "text": "お招きいただきありがとうございます。"
  },
  {
    "start": 8907990,
    "end": 8908690,
    "text": "ありがとう。"
  },
  {
    "start": 8909790,
    "end": 8914366,
    "text": "マイケル・スウェイル、アルヴィッド、アマンとの会話を聞いてくれてありがとう。"
  },
  {
    "start": 8914518,
    "end": 8917902,
    "text": "このポッドキャストをサポートするには、説明文にあるスポンサーをチェックしてください。"
  },
  {
    "start": 8918086,
    "end": 8925730,
    "text": "さて、Redditで見かけた、ランダムで面白く、そしておそらく深遠なプログラミング・コードを紹介しよう。"
  },
  {
    "start": 8926480,
    "end": 8931220,
    "text": "一時的な解決策ほど永続的なものはない。"
  },
  {
    "start": 8932160,
    "end": 8935264,
    "text": "ご清聴ありがとうございました。"
  }
]