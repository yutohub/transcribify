[
  {
    "start": 250,
    "end": 16926,
    "text": "さて、このビデオでは、ラグ・システムや検索、拡張世代システムの構築に関連して、人々が問題を抱えているのを目にする最大の問題のひとつを取り上げようと思う。"
  },
  {
    "start": 17108,
    "end": 21790,
    "text": "セマンティック検索を使いたいのは、セマンティック検索を使うことに意味がある場合だけだ。"
  },
  {
    "start": 21940,
    "end": 31574,
    "text": "検索をするのであれば、通常のデータベースにあるような、整数を調べたり文字列を調べたりするようなものだ。"
  },
  {
    "start": 31692,
    "end": 34982,
    "text": "実際、セマンティック検索をするためにそれらを使いたくはないだろう。"
  },
  {
    "start": 35036,
    "end": 41722,
    "text": "セマンティック検索とは、テキストから意味を抽出することだ。"
  },
  {
    "start": 41856,
    "end": 46934,
    "text": "これが、自己検索という概念につながる。"
  },
  {
    "start": 47062,
    "end": 59482,
    "text": "この図を見ると、検索と入力の間に一種のステップがあることがわかる。"
  },
  {
    "start": 59626,
    "end": 73794,
    "text": "そして、大規模な言語モデルを使用して、そのクエリを再フォーマットし、そのクエリのセマンティックな要素を取得するだけでなく、実際にメタデータを検索できるように変換します。"
  },
  {
    "start": 73912,
    "end": 85382,
    "text": "これは基本的な事実で、映画を探すときに基本的に年号を指定したい場合、ベクターストアやセマンティック検索を使って年号を探したくはない。"
  },
  {
    "start": 85436,
    "end": 93146,
    "text": "基本的には、ルックアップで年号を調べ、入力した年号に基づいて結果をフィルタリングする。"
  },
  {
    "start": 93248,
    "end": 106106,
    "text": "同じように、Spotifyで検索をしたり、音楽で検索をしたりする場合、相手がアーティストの名前を教えてくれたとしても、セマンティクス検索を使ってアーティストの名前を調べようとはしない。"
  },
  {
    "start": 106218,
    "end": 115358,
    "text": "そのアーティストを探すクエリーを行い、セマンティックサーチが得意とする部分をセマンティックサーチで行う。"
  },
  {
    "start": 115444,
    "end": 117694,
    "text": "さっそくラングチェインで見てみよう。"
  },
  {
    "start": 117742,
    "end": 121234,
    "text": "ここではセルフ・クエリー・レトリーバーを使っている。"
  },
  {
    "start": 121432,
    "end": 125454,
    "text": "OpenAIのエンベッディングとOpenAIのモデルを使っています。"
  },
  {
    "start": 125582,
    "end": 131254,
    "text": "以前、多くのビデオでやったように、これを他のモデルと交換することもできる。"
  },
  {
    "start": 131372,
    "end": 139058,
    "text": "いずれ、llama twoとBgEエンベッディングを使って、アプリを構築するエンド・ツー・エンドの例を作ろうと思う。"
  },
  {
    "start": 139154,
    "end": 145034,
    "text": "私は、これらの部分が重要な部分ではなく、コードがあまり大きな場所を取らないように、これらを選んだだけだ。"
  },
  {
    "start": 145152,
    "end": 149098,
    "text": "ここではベクターストアとしてクロマを使っている。"
  },
  {
    "start": 149184,
    "end": 154494,
    "text": "さっきも言ったように、OpenAIのエンベッディングを使って、データを渡すんだ。"
  },
  {
    "start": 154612,
    "end": 159486,
    "text": "ここでデータの準備に力を入れることになる。"
  },
  {
    "start": 159668,
    "end": 167586,
    "text": "この場合、ワインを検索することになるが、ワインには様々なものが含まれている。"
  },
  {
    "start": 167688,
    "end": 172562,
    "text": "ここに入っているワインの説明があるのがわかるだろう。"
  },
  {
    "start": 172696,
    "end": 178598,
    "text": "ワインの名前も、年号も、格付けもわかった。"
  },
  {
    "start": 178684,
    "end": 182806,
    "text": "ブドウの種類はわかっている。"
  },
  {
    "start": 182908,
    "end": 186002,
    "text": "ワインの色もわかった。"
  },
  {
    "start": 186066,
    "end": 189014,
    "text": "最後に、ワインの原産国だ。"
  },
  {
    "start": 189132,
    "end": 192874,
    "text": "これらはすべて、我々が入れているメタデータだ。"
  },
  {
    "start": 192992,
    "end": 197466,
    "text": "いろいろなワインのワイングラスがあるのがわかるだろう。"
  },
  {
    "start": 197568,
    "end": 200186,
    "text": "さて、どの部分にセマンティック検索を使うだろうか？"
  },
  {
    "start": 200288,
    "end": 203230,
    "text": "私たちは、ここにあるこの記述にそれを使うだろう。"
  },
  {
    "start": 203300,
    "end": 207998,
    "text": "説明文は実際に検索に使われるものだ。"
  },
  {
    "start": 208084,
    "end": 220254,
    "text": "フルーティーなノートのようなものについて話せば、アプリコットやピーチがフルーツであり、ブラックフルーツやストーンフルーツであることがわかる。"
  },
  {
    "start": 220302,
    "end": 223934,
    "text": "これらはフルーツや柑橘系のフレーバーに関連するものだ。"
  },
  {
    "start": 224062,
    "end": 229086,
    "text": "もし1年という期間であれば、その間にセマンティック検索をさせたくない。"
  },
  {
    "start": 229128,
    "end": 242442,
    "text": "特定の年号を使い、その年号でフィルタをかけたい。ここにデータがあるのだから、特定のユースケースに最適なメタデータを見つけ出すのにかなりの時間を費やすことになるだろう。"
  },
  {
    "start": 242576,
    "end": 252362,
    "text": "多くの人がcsvファイルを持っていて、そのデータの多くが良いメタデータになり、その一部がセマンティック検索に使われることを私は見てきました。"
  },
  {
    "start": 252416,
    "end": 262762,
    "text": "これは完璧な例で、基本的には、CSVファイルを調べて、それを取り出して、さまざまな例のためにこのようなものに変換する小さな関数を書くことができます。"
  },
  {
    "start": 262906,
    "end": 267522,
    "text": "さて、これらを手に入れたら、基本的には埋め込んでベクターストアに入れる必要がある。"
  },
  {
    "start": 267576,
    "end": 269394,
    "text": "これが最後のスライドだ。"
  },
  {
    "start": 269432,
    "end": 277758,
    "text": "これは、ドキュメントからクロマDBを作るだけで、埋め込みに使うドキュメントを渡すだけだ。"
  },
  {
    "start": 277854,
    "end": 283030,
    "text": "これらの部分を埋め込み、メタデータを分離する。"
  },
  {
    "start": 283180,
    "end": 284294,
    "text": "よし、じゃあ次だ。"
  },
  {
    "start": 284332,
    "end": 288166,
    "text": "ここで必要なのは、セルフ・クエリー・レトリーバーを作ることだ。"
  },
  {
    "start": 288268,
    "end": 291270,
    "text": "これはラングチェーンに組み込まれているものだ。"
  },
  {
    "start": 291430,
    "end": 296182,
    "text": "しかし、肝心なのはメタデータ情報を伝えることだ。"
  },
  {
    "start": 296326,
    "end": 302394,
    "text": "これらのひとつひとつが、この中にあるメタデータのタイプのひとつに関連していることがわかるだろう。"
  },
  {
    "start": 302432,
    "end": 306250,
    "text": "ワインの原料となるブドウがある。"
  },
  {
    "start": 306410,
    "end": 308010,
    "text": "ワインの名前はわかった。"
  },
  {
    "start": 308090,
    "end": 312190,
    "text": "ここに文字列や文字列のリストがあるのがわかるだろう。"
  },
  {
    "start": 312340,
    "end": 312926,
    "text": "我々は手に入れた。"
  },
  {
    "start": 312948,
    "end": 314954,
    "text": "年は整数になる。"
  },
  {
    "start": 315082,
    "end": 317074,
    "text": "ここには国がある。"
  },
  {
    "start": 317112,
    "end": 318878,
    "text": "ワインの色がわかった。"
  },
  {
    "start": 318974,
    "end": 319982,
    "text": "格付けは決まった。"
  },
  {
    "start": 320046,
    "end": 322254,
    "text": "さて、この場合の評価は整数である。"
  },
  {
    "start": 322302,
    "end": 331814,
    "text": "仮に5点満点で3.7点だった場合、このような場合は浮動小数点に変更することになる。"
  },
  {
    "start": 331932,
    "end": 337334,
    "text": "だから、私たちが使っているモデルは、ロバート・パーカーの評価を実際に知っている。"
  },
  {
    "start": 337372,
    "end": 339506,
    "text": "これは有名なワイン評論家だ。"
  },
  {
    "start": 339538,
    "end": 344378,
    "text": "私たちが得た格付けは、そのような格付けに基づいている。"
  },
  {
    "start": 344464,
    "end": 348538,
    "text": "それらが完全に正確かどうかはわからないが、この国のある種の雰囲気を感じさせてくれる。"
  },
  {
    "start": 348624,
    "end": 350262,
    "text": "明らかに、それは紐になるだろう。"
  },
  {
    "start": 350406,
    "end": 357470,
    "text": "次に、意味的な部分だが、これはワインについての簡単な説明になる。"
  },
  {
    "start": 357620,
    "end": 362400,
    "text": "それを手に入れたら、基本的に大規模な言語モデルをセットアップする。"
  },
  {
    "start": 362770,
    "end": 368498,
    "text": "今回はOpenAIのモデルを使っているが、llama 2を使うこともできる。"
  },
  {
    "start": 368584,
    "end": 372322,
    "text": "ここでは、あなたが望む様々なものを使うことができる。"
  },
  {
    "start": 372456,
    "end": 372754,
    "text": "そうだね。"
  },
  {
    "start": 372792,
    "end": 374782,
    "text": "そして基本的にレトリーバーをセットアップする。"
  },
  {
    "start": 374926,
    "end": 377666,
    "text": "LLM、ベクターストアに渡すつもりだ。"
  },
  {
    "start": 377768,
    "end": 382610,
    "text": "これらはすべて、ラングチェインによる通常の検索拡張生成と非常によく似ている。"
  },
  {
    "start": 382770,
    "end": 386918,
    "text": "次に渡したいのは、実際にクエリを実行するのは何なのか、ということだ。"
  },
  {
    "start": 387004,
    "end": 390634,
    "text": "メタデータ・フィールドの情報もここにある。"
  },
  {
    "start": 390752,
    "end": 395866,
    "text": "これらは、通常のラグ・システムとは異なる2つの点だ。"
  },
  {
    "start": 396048,
    "end": 399778,
    "text": "これで、クエリーを実行できることがわかるだろう。"
  },
  {
    "start": 399974,
    "end": 409550,
    "text": "この場合、赤ワインにはどんなものがあるか？"
  },
  {
    "start": 410130,
    "end": 412090,
    "text": "がクエリーを書く。"
  },
  {
    "start": 412170,
    "end": 415854,
    "text": "さて、この場合、クエリにはセマンティックな要素は何もないよね？"
  },
  {
    "start": 415892,
    "end": 423742,
    "text": "ただ純粋にフィルターをかけるだけだが、フィルターは比較になり、質の比較になる。"
  },
  {
    "start": 423806,
    "end": 428406,
    "text": "属性はcolor、値はredとなる。"
  },
  {
    "start": 428508,
    "end": 440722,
    "text": "確かに、返されたものを見てみると、イタリア産の赤ワインという素晴らしい結果が返ってきている。"
  },
  {
    "start": 440786,
    "end": 444794,
    "text": "赤、赤、赤、赤。"
  },
  {
    "start": 444832,
    "end": 447210,
    "text": "そこには様々な種類のものがある。"
  },
  {
    "start": 447360,
    "end": 453950,
    "text": "ある種のセマンティック検索をする場合、フルーティーなノードのワインが欲しい。"
  },
  {
    "start": 454370,
    "end": 457262,
    "text": "これで基本的に検索ができる。"
  },
  {
    "start": 457316,
    "end": 466230,
    "text": "なるほど、このワインは爽やかで白いトロピカルフルーツと柑橘類の風味がある。"
  },
  {
    "start": 466330,
    "end": 469314,
    "text": "メタデータもすべて戻ってくるのがわかるだろう。"
  },
  {
    "start": 469512,
    "end": 475634,
    "text": "ダークフルーツのフレーバーもある。"
  },
  {
    "start": 475832,
    "end": 478354,
    "text": "様々な検索が可能です。"
  },
  {
    "start": 478402,
    "end": 486134,
    "text": "フルーティーなノードのある、97点以上のワインが欲しい。"
  },
  {
    "start": 486332,
    "end": 496774,
    "text": "ここには比較対象があり、97点以上の評価を得ている。"
  },
  {
    "start": 496822,
    "end": 500954,
    "text": "アプリコットとピーチの赤い果実、土のニュアンス。"
  },
  {
    "start": 501072,
    "end": 503366,
    "text": "イタリアのワインが飲みたいと言ったら？"
  },
  {
    "start": 503478,
    "end": 506222,
    "text": "この件に関する問い合わせではない。"
  },
  {
    "start": 506276,
    "end": 510526,
    "text": "最後のクエリーはフルーティーだったね。"
  },
  {
    "start": 510628,
    "end": 516622,
    "text": "このクエリにはセマンティッククエリはないが、イタリアというイコールカントリーがあることがわかる。"
  },
  {
    "start": 516686,
    "end": 518850,
    "text": "イタリアの赤ワインを取り戻す。"
  },
  {
    "start": 519000,
    "end": 521442,
    "text": "もし、いくつかのことを複合的にやりたい場合はどうすればいいのだろう？"
  },
  {
    "start": 521496,
    "end": 531238,
    "text": "2015年から2020年の間に、土っぽいワインが欲しいんだ。"
  },
  {
    "start": 531244,
    "end": 538490,
    "text": "確かに、検索するセマンティック・エレメントがearthyであることがわかった。"
  },
  {
    "start": 538560,
    "end": 551594,
    "text": "そして、ここでは2015年以上と2020年未満を比較している。"
  },
  {
    "start": 551712,
    "end": 555520,
    "text": "そうすれば、基本的に我々が望むデータを持ち帰ることができる。"
  },
  {
    "start": 555890,
    "end": 571506,
    "text": "これは、メタデータをフィルタリングするだけでなく、ベクターストアのセマンティックルックアップデータを使って、そこにある記述からさまざまな検索ができることを示している。"
  },
  {
    "start": 571608,
    "end": 574754,
    "text": "もうひとつ、私たちにできることは、こうしたことを実際に制限することだ。"
  },
  {
    "start": 574792,
    "end": 581954,
    "text": "もし制限するのであれば、10,000のワインがあるとして、おそらく5000のワインを返したくはないだろう。"
  },
  {
    "start": 582082,
    "end": 584454,
    "text": "ここで制限を設けることができる"
  },
  {
    "start": 584492,
    "end": 591242,
    "text": "そして、その限界は基本的にこの場合、モデルによって解決される。"
  },
  {
    "start": 591296,
    "end": 597370,
    "text": "ご覧のように、97点以上の評価が2つある。"
  },
  {
    "start": 597520,
    "end": 600538,
    "text": "ここにはセマンティック・クエリーはない。"
  },
  {
    "start": 600704,
    "end": 605790,
    "text": "私たちは97より大きい評価を得ており、リミットイコール2を持っている。"
  },
  {
    "start": 605940,
    "end": 609502,
    "text": "おそらく、最初の2つだけだと思う。"
  },
  {
    "start": 609636,
    "end": 620094,
    "text": "大規模な言語モデルを使ってクエリを書き換えているため、オーストラリア産とニュージーランド産の2つのワインは何ですか？"
  },
  {
    "start": 620222,
    "end": 635862,
    "text": "大文字と小文字を意図的に区別していないことにお気づきでしょう。たとえスペルミスなどがあったとしても、優れた言語モデルであれば、言語モデルがその違いを見つけ出し、修正することができます。"
  },
  {
    "start": 635916,
    "end": 640458,
    "text": "この場合、私たちが要求した2本のワインが戻ってきた。"
  },
  {
    "start": 640544,
    "end": 647190,
    "text": "クオリティ・イコール・オーストラリア、イコール・ニュージーランドということがわかる。"
  },
  {
    "start": 647350,
    "end": 649354,
    "text": "リミットは2つ。"
  },
  {
    "start": 649552,
    "end": 656714,
    "text": "そしてついに、ニュージーランドから92点の評価を得たクラウディ・ベイ・ワインが戻ってきた。"
  },
  {
    "start": 656842,
    "end": 661182,
    "text": "オーストラリアからもペンフォールド・グランジが戻ってくる。"
  },
  {
    "start": 661316,
    "end": 675570,
    "text": "純粋なセマンティック検索だけでなく、メタデータの概念を使って物事をフィルタリングする、より高度な検索拡張世代システムを構築する方法を味わっていただければ幸いである。"
  },
  {
    "start": 675720,
    "end": 678286,
    "text": "このコンセプトは、他の言語モデルでも機能する。"
  },
  {
    "start": 678318,
    "end": 682646,
    "text": "OpenAIである必要はなく、ここでは便宜上そうしているだけだ。"
  },
  {
    "start": 682748,
    "end": 685318,
    "text": "さっきも言ったように、ラマ2匹でもできる。"
  },
  {
    "start": 685404,
    "end": 690918,
    "text": "このようなクエリを処理できる言語モデルを用意する必要がある。"
  },
  {
    "start": 691084,
    "end": 692214,
    "text": "これを試してみてほしい。"
  },
  {
    "start": 692252,
    "end": 705258,
    "text": "これは、セマンティック検索だけで物事を調べるような最低限の標準的な方法だけでなく、検索機能拡張型ジェネレーションで実際に多くのことができるようになる方法だと私は思う。"
  },
  {
    "start": 705434,
    "end": 709470,
    "text": "とにかく、いつも通り、質問があれば下のコメントに書いてください。"
  },
  {
    "start": 709620,
    "end": 716250,
    "text": "このビデオが役に立ち、このようなビデオをもっと見たいと思ったら、私のチャンネルをチェックして、「いいね！」や「購読」などをクリックしてください。"
  },
  {
    "start": 716330,
    "end": 717758,
    "text": "次のビデオで話そう。"
  },
  {
    "start": 717844,
    "end": 718880,
    "text": "とりあえず、さようなら。"
  },
  {
    "start": 719330,
    "end": 719610,
    "text": "さようなら。"
  }
]