[
  {
    "start": 8650,
    "end": 12698,
    "text": "みなさんこんにちは、そしてSlack pythonボットチュートリアルへようこそ。"
  },
  {
    "start": 12794,
    "end": 20846,
    "text": "今日のビデオでは、実際にマークダウン・テキストと、よりきれいにフォーマットされたメッセージをslackチャンネルに送信します。"
  },
  {
    "start": 20948,
    "end": 23502,
    "text": "さて、具体的な例だが、申し訳ない。"
  },
  {
    "start": 23556,
    "end": 29814,
    "text": "このビデオでやろうとしているのは、ユーザーが完了する必要のあるタスクが書かれたウェルカムメッセージを実際に送ることだ。"
  },
  {
    "start": 29932,
    "end": 39830,
    "text": "この場合、ユーザーにメッセージへの反応を求めますので、これはユーザーを歓迎し、slackについての情報やユーザーにできることを提供するものだと考えてください。"
  },
  {
    "start": 39900,
    "end": 42038,
    "text": "このメッセージに反応してください。"
  },
  {
    "start": 42124,
    "end": 50794,
    "text": "そして、彼らがそのメッセージに対して実際にリアクションをしたら、すぐにメッセージを変更し、彼らが完了する必要があるタスクの横にチェックマークを表示する。"
  },
  {
    "start": 50912,
    "end": 59486,
    "text": "もちろん、これを拡張してもっと多くのタスクをこなせるようにすることもできるが、ここではメッセージの修正方法、リアクションの処理方法、マークダウン・テキストの送信方法を紹介する。"
  },
  {
    "start": 59668,
    "end": 62078,
    "text": "さあ、始めよう。"
  },
  {
    "start": 62244,
    "end": 67138,
    "text": "まず最初にすることは、この処理を実際に行うクラスを設定することだ。"
  },
  {
    "start": 67224,
    "end": 71858,
    "text": "この背景にあるのは、複数のユーザーがチャンネルに入ってくる可能性があるということですね。"
  },
  {
    "start": 71944,
    "end": 76626,
    "text": "このウェルカムメッセージが、それぞれのユーザーに対して機能していることを確認する必要がある。"
  },
  {
    "start": 76648,
    "end": 78814,
    "text": "では、そのウェルカムメッセージをDMとして送ります。"
  },
  {
    "start": 78862,
    "end": 79986,
    "text": "ダイレクトメッセージ。"
  },
  {
    "start": 80088,
    "end": 81174,
    "text": "その方法をお見せしましょう。"
  },
  {
    "start": 81212,
    "end": 86550,
    "text": "繰り返しになるが、まず最初にクラスを作り、これをウェルカムメッセージと呼ぶことにする。"
  },
  {
    "start": 86700,
    "end": 88214,
    "text": "実に簡単なことだ。"
  },
  {
    "start": 88252,
    "end": 89590,
    "text": "そこにブラケットはいらない。"
  },
  {
    "start": 89660,
    "end": 92258,
    "text": "さて、最初にやることは、Nitメソッドで定義することだ。"
  },
  {
    "start": 92354,
    "end": 96854,
    "text": "ここで必要なのは、チャンネルとユーザーだ。"
  },
  {
    "start": 96982,
    "end": 104138,
    "text": "この理由は、ウェルカムメッセージがどのチャンネルに送られたのか、またどのユーザーに送られたのかを追跡する必要があるからです。"
  },
  {
    "start": 104224,
    "end": 107870,
    "text": "さて、この中で私がやろうとしているのは、セルフ・チャンネル・イコール・チャンネルだ。"
  },
  {
    "start": 108020,
    "end": 110202,
    "text": "ここでは、セルフユーザー＝ユーザーとする。"
  },
  {
    "start": 110266,
    "end": 112718,
    "text": "他にもいくつか定義しておこう。"
  },
  {
    "start": 112804,
    "end": 118110,
    "text": "今回は、ボットの横に絵文字をアイコンとして追加する方法を紹介しよう。"
  },
  {
    "start": 118190,
    "end": 123682,
    "text": "アイコンの絵文字は、この場合はロボット・アンダースコアの顔と同じになる。"
  },
  {
    "start": 123816,
    "end": 125086,
    "text": "さて、ご存じない方も多いだろう。"
  },
  {
    "start": 125198,
    "end": 130962,
    "text": "2つのコロンで単語を囲むのは、よくわからないが、それが絵文字であることを表している。"
  },
  {
    "start": 131026,
    "end": 137474,
    "text": "このコロンの中にスマイリーフェイスやチークフェイス、あるいは他の絵文字を入れることができる。"
  },
  {
    "start": 137522,
    "end": 140050,
    "text": "そうするとslackの中で絵文字として表示される。"
  },
  {
    "start": 140130,
    "end": 143050,
    "text": "slackで試せば、どんな絵文字があるかわかるだろう。"
  },
  {
    "start": 143200,
    "end": 146710,
    "text": "次に、タイムスタンプを空白に等しくする。"
  },
  {
    "start": 146790,
    "end": 149226,
    "text": "オリジナル・メッセージを送信する際に更新します。"
  },
  {
    "start": 149328,
    "end": 162942,
    "text": "その理由は、このクラスに格納されているメッセージを更新する可能性があるため、そのメッセージが送信された時刻を知りたいからです。"
  },
  {
    "start": 163076,
    "end": 169806,
    "text": "次に、self dot completed equalsと言って、falseにする。"
  },
  {
    "start": 169838,
    "end": 173278,
    "text": "これは、ユーザーがタスクを完了したかどうかを追跡するためのものである。"
  },
  {
    "start": 173374,
    "end": 178590,
    "text": "チェックマークが表示されるのか、それともタスクの横に空のボックスが表示されるのかがわかる。"
  },
  {
    "start": 178750,
    "end": 185398,
    "text": "この上に、メッセージの一部となるマークダウン・テキストを2つの変数に定義します。"
  },
  {
    "start": 185564,
    "end": 193226,
    "text": "アンダースコアのテキストをイコールで始めると言うことにする。"
  },
  {
    "start": 193408,
    "end": 196662,
    "text": "ここではタイプをセクションと定義する。"
  },
  {
    "start": 196806,
    "end": 198202,
    "text": "それが何を意味するかは、すぐにわかるだろう。"
  },
  {
    "start": 198256,
    "end": 205258,
    "text": "送信するメッセージのセクションやパートごとに、さまざまなタイプを用意することができます。"
  },
  {
    "start": 205274,
    "end": 207402,
    "text": "タイプ・イコール・セクションと言っておこう。"
  },
  {
    "start": 207546,
    "end": 209054,
    "text": "次はテキストだ。"
  },
  {
    "start": 209172,
    "end": 216974,
    "text": "とすると、ここもまた別の中括弧のセットと同じになり、デフォルトでこのテキストのタイプを定義することになる。"
  },
  {
    "start": 217022,
    "end": 219938,
    "text": "確かUTF8とか、ただのテキストですよね？"
  },
  {
    "start": 220024,
    "end": 222206,
    "text": "今回は実際にマークダウンを作ってみよう。"
  },
  {
    "start": 222318,
    "end": 225390,
    "text": "このマークダウンを作るためにmrkdwnを実行する。"
  },
  {
    "start": 225550,
    "end": 230866,
    "text": "Markdownに馴染みがなければ、GitHubでMDファイルを作るときに使うようなものです。"
  },
  {
    "start": 230898,
    "end": 236086,
    "text": "GitHubのウェルカムファイルと同じように、「これは何ですか？"
  },
  {
    "start": 236108,
    "end": 240258,
    "text": "ポンド記号とか、その他いろいろなものをMarkdownファイルに追加する。"
  },
  {
    "start": 240274,
    "end": 241654,
    "text": "フォーマットされたテキストのようなものだ。"
  },
  {
    "start": 241772,
    "end": 243740,
    "text": "次にすることはテキストだ。"
  },
  {
    "start": 244510,
    "end": 250038,
    "text": "さて、奇妙に思われるかもしれないが、このテキストを複数行に配置できるように、ここでいくつかの括弧を開いておこう。"
  },
  {
    "start": 250214,
    "end": 251082,
    "text": "ここが重要だ。"
  },
  {
    "start": 251136,
    "end": 254298,
    "text": "この2つをコンマで区切らないように注意してください。"
  },
  {
    "start": 254474,
    "end": 257150,
    "text": "ただ、そうしないことが重要なのだが、理由はおわかりだろう。"
  },
  {
    "start": 257220,
    "end": 262398,
    "text": "まずは、この素晴らしいチャンネルにようこそと言いたい。"
  },
  {
    "start": 262564,
    "end": 265042,
    "text": "バックスラッシュをnにする。"
  },
  {
    "start": 265096,
    "end": 265954,
    "text": "バックスラッシュ n."
  },
  {
    "start": 265992,
    "end": 267874,
    "text": "新しい行を2回。"
  },
  {
    "start": 267992,
    "end": 272654,
    "text": "と太字で言うので、太字とマークダウンのアスタリスク2つだ。"
  },
  {
    "start": 272782,
    "end": 279146,
    "text": "タスクを完了することから始めましょう。"
  },
  {
    "start": 279278,
    "end": 281590,
    "text": "よし、これがスタートテキストだ。"
  },
  {
    "start": 281740,
    "end": 283634,
    "text": "次に仕切りを作る。"
  },
  {
    "start": 283762,
    "end": 287510,
    "text": "仕切りは、この中にある中括弧になる。"
  },
  {
    "start": 287580,
    "end": 290354,
    "text": "タイプ、そしてコロンディバイダーと言うだけだ。"
  },
  {
    "start": 290402,
    "end": 292866,
    "text": "これもその一例である。"
  },
  {
    "start": 292988,
    "end": 299962,
    "text": "さて、これらのことは、このメッセージを実際に作るときに分解される。"
  },
  {
    "start": 300016,
    "end": 301260,
    "text": "すべてが一つになるんだ。"
  },
  {
    "start": 301630,
    "end": 306160,
    "text": "次に、defineしてアンダースコアのメッセージを取得する。"
  },
  {
    "start": 306690,
    "end": 313726,
    "text": "これは単に、この開始テキスト、この区切り、そして他の何かを使用するメッセージを私たちに返すだけです。"
  },
  {
    "start": 313828,
    "end": 317506,
    "text": "今のところはここの中、返すだけ返す。"
  },
  {
    "start": 317528,
    "end": 319042,
    "text": "それは後で変更しよう。"
  },
  {
    "start": 319176,
    "end": 326210,
    "text": "これはアンダースコア・メソッドで、プライベート・メソッドであることを意味し、クラスの外から呼び出してはいけない。"
  },
  {
    "start": 326280,
    "end": 327498,
    "text": "これがPythonの慣例だ。"
  },
  {
    "start": 327534,
    "end": 329202,
    "text": "その前にアンダースコアを付けるだけだ。"
  },
  {
    "start": 329266,
    "end": 335554,
    "text": "アンダースコアの取得を定義し、今回はアンダースコアのリアクションのアンダースコア・タスクを取得する。"
  },
  {
    "start": 335682,
    "end": 342234,
    "text": "名前から想像がつかないかもしれないが、これはメッセージの一部を私たちに伝えるものだ。"
  },
  {
    "start": 342272,
    "end": 342618,
    "text": "そうだね。"
  },
  {
    "start": 342704,
    "end": 347206,
    "text": "この中で、チェックマークをイコールにするんだ。"
  },
  {
    "start": 347318,
    "end": 348854,
    "text": "これは絵文字になる。"
  },
  {
    "start": 348902,
    "end": 351758,
    "text": "デフォルトの絵文字はnot waになる。"
  },
  {
    "start": 351844,
    "end": 357854,
    "text": "白いアンダースコアの大きな、すみません、白いアンダースコアのチェック・アンダースコア・マークになります。"
  },
  {
    "start": 358052,
    "end": 359262,
    "text": "そうしよう"
  },
  {
    "start": 359316,
    "end": 363406,
    "text": "でなければ、\"ドット完了\"。"
  },
  {
    "start": 363518,
    "end": 365966,
    "text": "チェックマーク・イコールということにしよう。"
  },
  {
    "start": 366078,
    "end": 368462,
    "text": "次にコロンで囲む。"
  },
  {
    "start": 368606,
    "end": 377122,
    "text": "この場合、白いアンダースコア、大きなアンダースコアのボックスと言うことになる。"
  },
  {
    "start": 377256,
    "end": 379350,
    "text": "これは小さな箱のようなものだ。"
  },
  {
    "start": 379420,
    "end": 382070,
    "text": "すると、チェックマークがそのボックスに置き換わる。"
  },
  {
    "start": 382140,
    "end": 383638,
    "text": "このタスクが完了したら"
  },
  {
    "start": 383804,
    "end": 387010,
    "text": "次にすることは、textはf文字列に等しいということだ。"
  },
  {
    "start": 387090,
    "end": 389398,
    "text": "fの文字列の中にチェックマークを入れる。"
  },
  {
    "start": 389494,
    "end": 390854,
    "text": "それが接頭語になる。"
  },
  {
    "start": 390902,
    "end": 398394,
    "text": "太字で、このメッセージに感嘆符で反応する。"
  },
  {
    "start": 398512,
    "end": 401546,
    "text": "最後に、ちょっと奇妙に思えるかもしれないが、お返ししよう。"
  },
  {
    "start": 401578,
    "end": 402894,
    "text": "リストになるだろう。"
  },
  {
    "start": 403092,
    "end": 405578,
    "text": "このリストの中には、単純に1つの要素を入れる。"
  },
  {
    "start": 405674,
    "end": 414420,
    "text": "これは、タイプ、コロン、セクション、カンマ、テキストとなる。"
  },
  {
    "start": 414790,
    "end": 420910,
    "text": "この場合、太字にアスタリスクを使用していることから、今回もマークダウンであることが推測できる。"
  },
  {
    "start": 421070,
    "end": 422398,
    "text": "マークダウンと言う。"
  },
  {
    "start": 422494,
    "end": 424500,
    "text": "そして最後にコンマ、テキスト。"
  },
  {
    "start": 426230,
    "end": 429446,
    "text": "構文が少しわかりにくいのはわかるが、とにかくそれに従ってほしい。"
  },
  {
    "start": 429468,
    "end": 430834,
    "text": "これが基本的な構造だ。"
  },
  {
    "start": 430962,
    "end": 432998,
    "text": "下にリンクを貼っておく。"
  },
  {
    "start": 433164,
    "end": 438070,
    "text": "誰か思い出させてくれ。おそらく、これがどう見えるべきかを実際に見つける方法を忘れてしまうだろうから。"
  },
  {
    "start": 438220,
    "end": 443078,
    "text": "よし、これで最終的なメッセージの作成に取りかかろう。"
  },
  {
    "start": 443164,
    "end": 445318,
    "text": "それからチャンネルに送って、どう動くか見てみよう。"
  },
  {
    "start": 445404,
    "end": 448050,
    "text": "まず最初にタイムスタンプを渡す。"
  },
  {
    "start": 448130,
    "end": 449606,
    "text": "タイムスタンプはただのtsでしょ？"
  },
  {
    "start": 449628,
    "end": 451850,
    "text": "ここではself dot timestampとする。"
  },
  {
    "start": 452010,
    "end": 453726,
    "text": "次にチャンネルを渡す。"
  },
  {
    "start": 453828,
    "end": 456638,
    "text": "これは、このメッセージを送信するチャンネルである。"
  },
  {
    "start": 456724,
    "end": 459600,
    "text": "この場合、セルフ・チャンネルと呼ぶことにする。"
  },
  {
    "start": 460130,
    "end": 462218,
    "text": "ユーザー名はパスする。"
  },
  {
    "start": 462314,
    "end": 467490,
    "text": "このユーザー名は好きなように設定できるので、実際のアプリ名と同じである必要はない。"
  },
  {
    "start": 467560,
    "end": 468882,
    "text": "私たちはこれを好きなように作ることができる。"
  },
  {
    "start": 468936,
    "end": 475358,
    "text": "ロボットの絵文字が入るから、ウェルカム・ロボットとだけ言っておくよ。"
  },
  {
    "start": 475454,
    "end": 478818,
    "text": "次に、アイコンのアンダースコアの絵文字を言う。"
  },
  {
    "start": 478914,
    "end": 482514,
    "text": "これはセルフアイコンの絵文字と同じになる。"
  },
  {
    "start": 482642,
    "end": 486486,
    "text": "最後に、送信したいブロックを定義する。"
  },
  {
    "start": 486668,
    "end": 497334,
    "text": "さて、これがどのように機能するかは後で説明するが、この中にあるものはすべて、実際にはチャットの投稿メッセージやチャットのアンダースコアに対するキーワード引数である。"
  },
  {
    "start": 497382,
    "end": 497882,
    "text": "メッセージを投稿する"
  },
  {
    "start": 497936,
    "end": 500186,
    "text": "チャンネルもあれば、テキストもある。"
  },
  {
    "start": 500368,
    "end": 502778,
    "text": "ここを見てもらえればわかると思うが、チャンネルがある。"
  },
  {
    "start": 502864,
    "end": 507166,
    "text": "他にもいくつか、普通の議論として使えそうなものがあるよね？"
  },
  {
    "start": 507188,
    "end": 512106,
    "text": "例えば、アイコン、アンダースコア、絵文字、それから絵文字を渡すことができる。"
  },
  {
    "start": 512218,
    "end": 513762,
    "text": "この使い方は後で説明する。"
  },
  {
    "start": 513816,
    "end": 515042,
    "text": "ただ、そのことを思い出してほしい。"
  },
  {
    "start": 515096,
    "end": 516286,
    "text": "ブロックと言おう。"
  },
  {
    "start": 516398,
    "end": 528610,
    "text": "さて、この中では、自己の開始テキスト、コンマ、自己のドット、区切り文字、コンマ、アスタリスク、自己のドット、アンダースコア、get、リアクション・タスクと書くことにする。"
  },
  {
    "start": 529030,
    "end": 532006,
    "text": "技術的には、このリストを削除すればいい。"
  },
  {
    "start": 532028,
    "end": 533922,
    "text": "実際、もう少しシンプルにするためにこうしてみよう。"
  },
  {
    "start": 533986,
    "end": 539238,
    "text": "このアスタリスクを外せば、なぜアスタリスクが必要なのかを説明する必要がなくなる。"
  },
  {
    "start": 539324,
    "end": 540486,
    "text": "オーケー、それで理解してもらえたかな？"
  },
  {
    "start": 540508,
    "end": 544962,
    "text": "すみません、ここからリストを削除し、アスタリスクを削除して、セルフ・ドット・リアクション・タスクにしました。"
  },
  {
    "start": 545026,
    "end": 548582,
    "text": "もちろん、ブロックは渡した順番に実行されると考えていい。"
  },
  {
    "start": 548636,
    "end": 553594,
    "text": "まずはスタートテキストを書き、次に仕切り、そしてリアクションのタスクを行う。"
  },
  {
    "start": 553722,
    "end": 554062,
    "text": "素晴らしい。"
  },
  {
    "start": 554116,
    "end": 557054,
    "text": "では、それを実際にチャンネルに送ってみよう。"
  },
  {
    "start": 557172,
    "end": 562222,
    "text": "ユーザーが開始というテキストを送信してきたときだけ、そのテキストを送信するようにしたい。"
  },
  {
    "start": 562356,
    "end": 566478,
    "text": "技術的には、ユーザーがサーバーに参加するときにこれを送ることもできる。"
  },
  {
    "start": 566574,
    "end": 569810,
    "text": "そのためには、別のイベントをここにリンクさせる必要がある。"
  },
  {
    "start": 569880,
    "end": 575086,
    "text": "チーム加入のためのイベントがある。"
  },
  {
    "start": 575118,
    "end": 577310,
    "text": "チーム・ハイフン・ジョインだと思う。"
  },
  {
    "start": 577390,
    "end": 578562,
    "text": "そうすれば、そのメッセージを送ることができる。"
  },
  {
    "start": 578616,
    "end": 584870,
    "text": "僕はこのワークスペースのオーナーのようなものだから、再参加できない。"
  },
  {
    "start": 584940,
    "end": 587654,
    "text": "相手がテキストを送信してきた場合、どのように送信できるかをお見せしましょう。"
  },
  {
    "start": 587692,
    "end": 588966,
    "text": "それは具体的なことだ。"
  },
  {
    "start": 589068,
    "end": 600106,
    "text": "まず最初に、これは奇妙に見えるかもしれませんが、私がしなければならないことは、ユーザーアンダースコアidがnoneと等しくなく、ボットidがユーザーidと等しくないことを確認することです。"
  },
  {
    "start": 600208,
    "end": 603974,
    "text": "これは、ユーザーIDが \"none \"でないことを確認するものである。"
  },
  {
    "start": 604022,
    "end": 606302,
    "text": "ボットはこのメッセージを送っていない。"
  },
  {
    "start": 606356,
    "end": 616542,
    "text": "メッセージの更新は後で行うが、ボットが更新しているため、技術的には更新されたメッセージにはユーザーは存在しない。"
  },
  {
    "start": 616596,
    "end": 622370,
    "text": "なぜそのように動作するのかわからない。私はボットがユーザーになると思っていたが、その状況では壊れてしまう。"
  },
  {
    "start": 622440,
    "end": 623922,
    "text": "あとはこれを加えるだけだ。"
  },
  {
    "start": 624056,
    "end": 629374,
    "text": "次に、if text lower equals equalsとします。"
  },
  {
    "start": 629422,
    "end": 632230,
    "text": "そして、この中に \"start \"を入れる。"
  },
  {
    "start": 632300,
    "end": 636934,
    "text": "何を入れてもいいが、ここではstartを開始メッセージとして入れる文字列とする。"
  },
  {
    "start": 637052,
    "end": 641110,
    "text": "ウェルカムメッセージを作成し、それを送信する。"
  },
  {
    "start": 641180,
    "end": 642886,
    "text": "今は、それだけはしたくない。"
  },
  {
    "start": 642988,
    "end": 645638,
    "text": "ここではもう少し複雑なセットアップをしたい。"
  },
  {
    "start": 645724,
    "end": 653502,
    "text": "その理由は、ウェルカムメッセージが大量にある可能性があり、ユーザーがそれらに反応したときに後で更新する必要があるため、これらのウェルカムメッセージをすべて記録しておく必要があるからです。"
  },
  {
    "start": 653556,
    "end": 654910,
    "text": "これからやることは、関数を作ることだ。"
  },
  {
    "start": 654980,
    "end": 660254,
    "text": "送信の定義、歓迎のアンダースコア、メッセージのアンダースコア、こんな感じかな。"
  },
  {
    "start": 660292,
    "end": 663466,
    "text": "これがチャンネルで、これがユーザーだ。"
  },
  {
    "start": 663578,
    "end": 668130,
    "text": "この中でやることは、ウェルカム・イコールと言って、ウェルカム・メッセージを作ることだ。"
  },
  {
    "start": 668280,
    "end": 670050,
    "text": "オーダーは？"
  },
  {
    "start": 670120,
    "end": 671214,
    "text": "チャンネルとユーザー。"
  },
  {
    "start": 671262,
    "end": 679590,
    "text": "チャンネルを渡し、次にユーザーをカンマでつなげば、実際にメッセージを送信したり、何かに追加したりすることができる。"
  },
  {
    "start": 679660,
    "end": 684550,
    "text": "メッセージはアンダースコアのウェルカムメッセージに等しい。"
  },
  {
    "start": 684700,
    "end": 686566,
    "text": "覚えておいてほしいのは、ここに書いた方法だ。"
  },
  {
    "start": 686588,
    "end": 688618,
    "text": "それが私たちのためにメッセージを生成してくれる"
  },
  {
    "start": 688784,
    "end": 695050,
    "text": "次に、レスポンスはクライアント・チャットと同じで、アンダースコアはポスト・メッセージとする。"
  },
  {
    "start": 695200,
    "end": 697100,
    "text": "私はただそれをタイプするだけかもしれない。"
  },
  {
    "start": 697470,
    "end": 699318,
    "text": "アスタリスクにしよう"
  },
  {
    "start": 699414,
    "end": 700860,
    "text": "アスタリスク、メッセージ"
  },
  {
    "start": 701230,
    "end": 705338,
    "text": "辞書のアンパック演算子である。"
  },
  {
    "start": 705434,
    "end": 709886,
    "text": "これは基本的に、これらの値をすべて取り出して、ほとんど書き換えてしまうというものだ。"
  },
  {
    "start": 709908,
    "end": 714574,
    "text": "tsは自己のドット・タイムスタンプに等しい チャンネルは自己、ドット、チャンネルに等しいと書いてある。"
  },
  {
    "start": 714612,
    "end": 719874,
    "text": "これを分解すると、TSイコール、そしてそれが何に等しいかということになる。"
  },
  {
    "start": 719912,
    "end": 722334,
    "text": "次にチャンネルが等しい......といった具合だ。"
  },
  {
    "start": 722382,
    "end": 727002,
    "text": "すべてのキーは左側のキーワード引数であり、右側はすべての値である。"
  },
  {
    "start": 727086,
    "end": 728102,
    "text": "それが理解できればいいのだが。"
  },
  {
    "start": 728156,
    "end": 729074,
    "text": "そうでなくても心配はいらない。"
  },
  {
    "start": 729122,
    "end": 731510,
    "text": "ここにすべての値を渡すだけだ。"
  },
  {
    "start": 731660,
    "end": 736898,
    "text": "次は、おっと、ようこそ、タイムスタンプイコールだ。"
  },
  {
    "start": 736994,
    "end": 742630,
    "text": "これはサーバーからのレスポンスで、メッセージに関する情報が含まれる。"
  },
  {
    "start": 742780,
    "end": 744730,
    "text": "この場合はtsにする。"
  },
  {
    "start": 745070,
    "end": 746650,
    "text": "よし、これで問題ないだろう。"
  },
  {
    "start": 746720,
    "end": 752690,
    "text": "次にすることは、メッセージ・カウントの外側に辞書をセットアップすることだ。"
  },
  {
    "start": 752710,
    "end": 754414,
    "text": "フルスクリーンで見るべきだったかもしれない。"
  },
  {
    "start": 754452,
    "end": 756366,
    "text": "少しきれいになったけど、行こうか。"
  },
  {
    "start": 756468,
    "end": 762090,
    "text": "ようこそ、アンダースコアのメッセージ、イコール、そして空の辞書。"
  },
  {
    "start": 762250,
    "end": 769058,
    "text": "この辞書に、ウェルカムメッセージを送信したチャンネルとユーザーを追加します。"
  },
  {
    "start": 769224,
    "end": 778918,
    "text": "チャンネルが入らなければ、このウェルカム・アンダースコア・メッセージを何と呼べばいいんだっけ？"
  },
  {
    "start": 779084,
    "end": 781522,
    "text": "ウェルカムメッセージを作ろう"
  },
  {
    "start": 781666,
    "end": 783320,
    "text": "そこには複数形がある。"
  },
  {
    "start": 784170,
    "end": 795110,
    "text": "もしチャンネルがウェルカムメッセージになければ、ウェルカムアンダースコアメッセージ、チャンネルは別の辞書に等しい、と言うことになる。"
  },
  {
    "start": 795270,
    "end": 804780,
    "text": "そして、アンダースコア・メッセージ・チャンネル・ユーザーを歓迎します。"
  },
  {
    "start": 805310,
    "end": 809454,
    "text": "では、これで理解してもらえるといいのですが、基本的には、さまざまなチャンネルをすべて保存することになりますよね？"
  },
  {
    "start": 809492,
    "end": 812526,
    "text": "このウェルカムメッセージを送ったであろうすべてのチャンネルに。"
  },
  {
    "start": 812628,
    "end": 819026,
    "text": "そして、それぞれのチャンネルに、このウェルカムメッセージを送る可能性のあるユーザーを保存します。"
  },
  {
    "start": 819048,
    "end": 822530,
    "text": "それぞれのチャンネルがある。"
  },
  {
    "start": 822600,
    "end": 827218,
    "text": "とすると、そのチャンネル内のすべてのユーザは、自分自身のウェルカムメッセージをここに保存することになります。"
  },
  {
    "start": 827304,
    "end": 833078,
    "text": "繰り返しになるが、メッセージに反応したときに、それを更新してメッセージを書き換えることができるようにするために必要なのだ。"
  },
  {
    "start": 833164,
    "end": 834902,
    "text": "メッセージを編集するようなものだろ？"
  },
  {
    "start": 835036,
    "end": 836854,
    "text": "よし、これで全部だ。"
  },
  {
    "start": 836892,
    "end": 838662,
    "text": "これでウェルカムメッセージを送ることができる。"
  },
  {
    "start": 838716,
    "end": 840806,
    "text": "アンダースコアのウェルカムメッセージを送るとしよう。"
  },
  {
    "start": 840988,
    "end": 843210,
    "text": "チャンネルを渡そう。"
  },
  {
    "start": 843360,
    "end": 845814,
    "text": "ユーザーを渡そう。"
  },
  {
    "start": 845942,
    "end": 847942,
    "text": "では、これをDMとして送る方法を紹介しよう。"
  },
  {
    "start": 848006,
    "end": 848554,
    "text": "今はね。"
  },
  {
    "start": 848592,
    "end": 851514,
    "text": "DM通りにはいかないが、それが次にできることだ。"
  },
  {
    "start": 851552,
    "end": 855158,
    "text": "チャンネルIDとアンダースコアIDが必要です。"
  },
  {
    "start": 855264,
    "end": 856942,
    "text": "よし、これでうまくいくといいな。"
  },
  {
    "start": 856996,
    "end": 859758,
    "text": "あまり自信はないけど、失敗したかもしれない。"
  },
  {
    "start": 859844,
    "end": 862542,
    "text": "さあ、ここを走りましょう。"
  },
  {
    "start": 862596,
    "end": 863930,
    "text": "よし、行くぞ。"
  },
  {
    "start": 864100,
    "end": 866206,
    "text": "スラックに行こう。"
  },
  {
    "start": 866398,
    "end": 868610,
    "text": "私のYouTubeボットはこちらです。"
  },
  {
    "start": 868680,
    "end": 870020,
    "text": "まずはタイプしてみよう。"
  },
  {
    "start": 870390,
    "end": 872514,
    "text": "さあ、行こう。"
  },
  {
    "start": 872552,
    "end": 874274,
    "text": "この素晴らしいチャンネルにようこそ。"
  },
  {
    "start": 874392,
    "end": 876034,
    "text": "絵文字が、なぜか使えない。"
  },
  {
    "start": 876072,
    "end": 879342,
    "text": "ちょっと調べてから、このタスクを完了させることから始めようと思う。"
  },
  {
    "start": 879406,
    "end": 881334,
    "text": "小さなボックスが表示され、これに反応しろと書いてある。"
  },
  {
    "start": 881372,
    "end": 882006,
    "text": "メッセージ"
  },
  {
    "start": 882188,
    "end": 884438,
    "text": "では、なぜその絵文字が使えないのか見てみよう。"
  },
  {
    "start": 884524,
    "end": 887138,
    "text": "たぶん、スペルミスのような気がする。"
  },
  {
    "start": 887314,
    "end": 889014,
    "text": "みんな、正直に言うよ。"
  },
  {
    "start": 889052,
    "end": 891350,
    "text": "なぜそれが機能しないのか、僕にはわからない。"
  },
  {
    "start": 891500,
    "end": 893450,
    "text": "以前はそれでうまくいっていた。"
  },
  {
    "start": 893520,
    "end": 896986,
    "text": "君たちの何人かは、それが機能すると仮定する。"
  },
  {
    "start": 897168,
    "end": 898954,
    "text": "もしそうでなければ、教えてください。"
  },
  {
    "start": 898992,
    "end": 900634,
    "text": "修理できるかどうか調べてみるよ。"
  },
  {
    "start": 900672,
    "end": 904698,
    "text": "本来であれば、このアイコンは変わり、この名前もまた変わるはずだ。"
  },
  {
    "start": 904784,
    "end": 906074,
    "text": "なぜうまくいかないのかはわからない。"
  },
  {
    "start": 906112,
    "end": 907886,
    "text": "しばらく見ていたんだけど、手に入らないんだ。"
  },
  {
    "start": 907908,
    "end": 912782,
    "text": "うまくいかないのなら、時間の無駄だから先に進むだけだ。"
  },
  {
    "start": 912836,
    "end": 918590,
    "text": "では、一般的なチャットで送信するのではなく、ダイレクトメッセージとして送信するようにしましょう。"
  },
  {
    "start": 918740,
    "end": 924126,
    "text": "そのためにまず必要なのは、ダイレクト・メッセージの送信権限を追加することだ。"
  },
  {
    "start": 924228,
    "end": 927750,
    "text": "ここで、APIパネルからOauthとパーミッションにアクセスする必要がある。"
  },
  {
    "start": 927900,
    "end": 928946,
    "text": "スコープに行くんだ。"
  },
  {
    "start": 928978,
    "end": 931174,
    "text": "これを機能させるために、いくつか追加しようとしているのがわかるだろう。"
  },
  {
    "start": 931212,
    "end": 932438,
    "text": "どうしてもうまくいかなかったんだ。"
  },
  {
    "start": 932524,
    "end": 935958,
    "text": "ここにいる間に、リアクションを追加した方がいいだろう。"
  },
  {
    "start": 936044,
    "end": 938438,
    "text": "それなら、イムを加えるべきだ。"
  },
  {
    "start": 938604,
    "end": 940386,
    "text": "イミライトだと思う。"
  },
  {
    "start": 940418,
    "end": 940566,
    "text": "そうだ。"
  },
  {
    "start": 940588,
    "end": 941882,
    "text": "ダイレクトメッセージを始める"
  },
  {
    "start": 941936,
    "end": 943498,
    "text": "その通りだ。"
  },
  {
    "start": 943584,
    "end": 945962,
    "text": "この2つのリアクションを加えれば、私が正しいことが読み取れる。"
  },
  {
    "start": 946016,
    "end": 948010,
    "text": "その場合、アプリを再インストールする必要がある。"
  },
  {
    "start": 948160,
    "end": 949578,
    "text": "そうしよう"
  },
  {
    "start": 949664,
    "end": 952182,
    "text": "私たちのアプリがこれらの権限を持つことを許可します。"
  },
  {
    "start": 952326,
    "end": 962558,
    "text": "ここでコードに戻り、デフォルト・チャンネルで送信するのではなく、ダイレクト・メッセージとして送信するように、メッセージの内部を修正することができる。"
  },
  {
    "start": 962644,
    "end": 965566,
    "text": "必要ならメイン・チャンネルに送ることもできるし、その方法はすでに紹介した。"
  },
  {
    "start": 965588,
    "end": 967934,
    "text": "ダイレクトメッセージを送るのは実に簡単だ。"
  },
  {
    "start": 968052,
    "end": 974206,
    "text": "必要なのは、チャンネルをatに変更し、atシンボルとユーザーIDを指定するだけだ。"
  },
  {
    "start": 974308,
    "end": 984310,
    "text": "ここでできることは、ウェルカムメッセージにチャンネルIDを入れる代わりに、f文字列を入れ、at記号を入れ、ユーザーIDをこの中に埋め込むことです。"
  },
  {
    "start": 984380,
    "end": 988262,
    "text": "ただ、これはすでにテスト済みなので、すぐに分かると思います。"
  },
  {
    "start": 988396,
    "end": 991462,
    "text": "どうなるかというと、このユーザーにダイレクトメッセージを送るだけだ。"
  },
  {
    "start": 991606,
    "end": 993734,
    "text": "スラック・ノーティスに戻ろう。"
  },
  {
    "start": 993782,
    "end": 995258,
    "text": "これは私が以前送っていたものだ。"
  },
  {
    "start": 995424,
    "end": 997274,
    "text": "ここでテストに戻ろう。"
  },
  {
    "start": 997472,
    "end": 999674,
    "text": "そんな感じで始めよう。"
  },
  {
    "start": 999792,
    "end": 1001340,
    "text": "ちょっと待ってみよう。"
  },
  {
    "start": 1001710,
    "end": 1005050,
    "text": "YouTubeのボットにアクセスすると、このようなメッセージが送信されていることがわかる。"
  },
  {
    "start": 1005200,
    "end": 1006778,
    "text": "今は2回送っていると思う。"
  },
  {
    "start": 1006874,
    "end": 1008462,
    "text": "キャッシュの問題があったと思う。"
  },
  {
    "start": 1008516,
    "end": 1010158,
    "text": "依頼が来たばかりだ。"
  },
  {
    "start": 1010244,
    "end": 1013710,
    "text": "もう一回やってみよう。"
  },
  {
    "start": 1013860,
    "end": 1014234,
    "text": "ブームだ。"
  },
  {
    "start": 1014282,
    "end": 1016590,
    "text": "DMを受け取って、出発だ。"
  },
  {
    "start": 1016660,
    "end": 1018222,
    "text": "このビデオはもう十分長い。"
  },
  {
    "start": 1018276,
    "end": 1022462,
    "text": "次のビデオでは、リアクションの対処法をお見せします。"
  },
  {
    "start": 1022516,
    "end": 1034420,
    "text": "ユーザーが反応するか、あるいは閉じないかによって、どのようにメッセージを更新するか。"
  }
]