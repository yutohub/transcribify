[
  {
    "start": 240,
    "end": 9038,
    "text": "こんにちは、ヴィックです。今日は機械学習とパイソンを使って住宅価格を予測する方法を学びます。"
  },
  {
    "start": 9206,
    "end": 13918,
    "text": "まずは米連邦準備制度理事会（FRB）から経済データを入手する。"
  },
  {
    "start": 14046,
    "end": 25698,
    "text": "このデータをZillowの住宅価格データと組み合わせ、ランダムフォレスト分類器を訓練する。"
  },
  {
    "start": 25846,
    "end": 30490,
    "text": "最後に、あなた自身でモデルを改良するために使える次のステップを紹介する。"
  },
  {
    "start": 30562,
    "end": 31694,
    "text": "さあ、飛び込もう。"
  },
  {
    "start": 32394,
    "end": 45374,
    "text": "このプロジェクトが終わるころには、将来にわたって住宅価格を予測できる機械学習モデルができ、そのモデルの精度を実際に測定し、改良を続けることができるだろう。"
  },
  {
    "start": 50194,
    "end": 53584,
    "text": "とはいえ、実際に飛び込んでコーディングを始めてみよう。"
  },
  {
    "start": 53754,
    "end": 58064,
    "text": "Jupyterlabを使って実際にこのプロジェクトを作成する。"
  },
  {
    "start": 58364,
    "end": 62468,
    "text": "Jupyterlabを使えば、Jupyterノートブックを開いて使うことができる。"
  },
  {
    "start": 62556,
    "end": 68944,
    "text": "Jupyterノートブック、Google Colab、あるいはノートブックを実行できる他のプラットフォームを使うことができる。"
  },
  {
    "start": 69644,
    "end": 75004,
    "text": "今日はプロジェクトでいくつかのファイルを使う。"
  },
  {
    "start": 75164,
    "end": 84224,
    "text": "このビデオの説明の中に、このプロジェクトの全コードを実際に見ることができるリンクと、これらのファイルをダウンロードするためのリンクがあります。"
  },
  {
    "start": 84554,
    "end": 89294,
    "text": "始める前に、そのリンクをたどってこれらのファイルを実際にダウンロードしてください。"
  },
  {
    "start": 90074,
    "end": 92578,
    "text": "これら最初の3つのファイルは、St."
  },
  {
    "start": 92626,
    "end": 99250,
    "text": "アメリカのルイス連邦準備制度理事会（FRB）のデータで、アメリカの経済状況に関するものだ。"
  },
  {
    "start": 99442,
    "end": 101986,
    "text": "この最初のものはインフレを説明している。"
  },
  {
    "start": 102130,
    "end": 110614,
    "text": "2つ目は賃貸物件の空き家率を説明するもので、3つ目はアメリカの住宅ローン金利を説明するものである。"
  },
  {
    "start": 111034,
    "end": 120454,
    "text": "最後の2つのデータセットはZillowによるもので、住宅の販売価格の中央値とZillowが算出した住宅価格を説明している。"
  },
  {
    "start": 121034,
    "end": 129134,
    "text": "これらのデータセットの新しいバージョンは、先ほどの説明のリンクから入手できる。"
  },
  {
    "start": 129754,
    "end": 139114,
    "text": "もし、あなたが説明を見て、最新の情報を入手し、実際の予想をしたいのであれば、実際に自分でこれらのファイルをダウンロードして、それを実行することができる。"
  },
  {
    "start": 139614,
    "end": 141674,
    "text": "よし、飛び込んで始めよう。"
  },
  {
    "start": 146534,
    "end": 149878,
    "text": "まず最初にすることは、これらのファイルを読み込むことだ。"
  },
  {
    "start": 150006,
    "end": 155394,
    "text": "この3つのファイルはすべて同じ一般的なフォーマットなので、一緒に読み込むことにする。"
  },
  {
    "start": 155734,
    "end": 163378,
    "text": "そのためにまず、PythonでCSVを扱うのに役立つPandasというライブラリをインポートする。"
  },
  {
    "start": 163566,
    "end": 167114,
    "text": "次に、これらのファイル名を含むリストを作成する。"
  },
  {
    "start": 167234,
    "end": 173814,
    "text": "私たちが欲しいファイル名はmortgage 30で、先にも述べたようにアメリカの住宅ローン金利が記載されている。"
  },
  {
    "start": 174714,
    "end": 181734,
    "text": "このデータセットには賃貸空室率とインフレ率が含まれている。"
  },
  {
    "start": 182194,
    "end": 186914,
    "text": "これら3つのファイルをリスト内包を使って読み込む。"
  },
  {
    "start": 187034,
    "end": 192902,
    "text": "pandasのread CSV関数を使用し、いくつかのパラメータを追加します。"
  },
  {
    "start": 192998,
    "end": 200334,
    "text": "pandasに、CSVファイルで見つかった日付をpandasのdatetimeフォーマットにパースするように指示します。"
  },
  {
    "start": 200494,
    "end": 210094,
    "text": "行インデックスには最初の列を使うように指示し、このリスト内包を使って3つのファイルすべてを読み込む。"
  },
  {
    "start": 210254,
    "end": 218914,
    "text": "では、これを実行して、最初に読み込んだデータフレームだけをお見せしましょう。"
  },
  {
    "start": 220174,
    "end": 222750,
    "text": "実際にこの左側のパネルを最小化してみよう。"
  },
  {
    "start": 222822,
    "end": 227594,
    "text": "CSVファイルが、あなたがコーディングしている場所と同じディレクトリにあることを確認してください。"
  },
  {
    "start": 229214,
    "end": 239526,
    "text": "これは最初のデータフレームで、住宅ローン金利です。1971年から現在に至るまで、毎週データがあることがわかります。"
  },
  {
    "start": 239710,
    "end": 245274,
    "text": "日数が約7日間隔なので、データが週単位であることがわかる。"
  },
  {
    "start": 246364,
    "end": 248544,
    "text": "つ目のデータフレームを見てみよう。"
  },
  {
    "start": 249284,
    "end": 252268,
    "text": "このデータフレームは賃貸空室率である。"
  },
  {
    "start": 252396,
    "end": 254108,
    "text": "ここにちょっとした問題があることがわかる。"
  },
  {
    "start": 254156,
    "end": 256060,
    "text": "このデータは実際には四半期ごとである。"
  },
  {
    "start": 256172,
    "end": 257636,
    "text": "毎週ではない。"
  },
  {
    "start": 257820,
    "end": 261348,
    "text": "2つの日付の間にギャップがあるのがわかるだろう。"
  },
  {
    "start": 261476,
    "end": 266292,
    "text": "この2つのデータセットをマージする方法を考えなければならない。"
  },
  {
    "start": 266468,
    "end": 270704,
    "text": "では、読み込んだ3番目のデータフレームを見てみよう。"
  },
  {
    "start": 271224,
    "end": 274640,
    "text": "これがインフレ率であり、毎月のインフレ率である。"
  },
  {
    "start": 274752,
    "end": 278144,
    "text": "私たちのデータセットはすべて、微妙に異なるタイムライン上にある。"
  },
  {
    "start": 278224,
    "end": 280632,
    "text": "どう統合するかを考えなければならない。"
  },
  {
    "start": 280768,
    "end": 292800,
    "text": "それらをマージする最初のステップは、pandasのconcatenate関数を使って、それらを1つの大きなデータフレームにまとめることだ。"
  },
  {
    "start": 292992,
    "end": 296016,
    "text": "では、それを実行してみよう。"
  },
  {
    "start": 296040,
    "end": 308690,
    "text": "FRBのデータを見てみると、ここにギャップがあったり、データに他の問題があったり、ここに欠損値があったりすることがわかる。"
  },
  {
    "start": 308802,
    "end": 315054,
    "text": "というのも、前述したように、物事はさまざまな時間軸で進んでいくので、すべてがきれいに一致するわけではないからだ。"
  },
  {
    "start": 315754,
    "end": 322574,
    "text": "これを詳しく見るために、FRBのデータの最後の50行を見てみよう。"
  },
  {
    "start": 323374,
    "end": 329502,
    "text": "いくつかの行では、住宅ローンの金利が空白になっていることがわかる。"
  },
  {
    "start": 329638,
    "end": 338794,
    "text": "というのも、この2つのデータセット、賃貸空室率とコアインフレ率は常に月初に発表されるからだ。"
  },
  {
    "start": 339214,
    "end": 348638,
    "text": "賃貸の空室率やインフレ率など、他のケースでは空欄になっているものがあります。"
  },
  {
    "start": 348726,
    "end": 353600,
    "text": "賃貸空室率は四半期ごと、インフレ率は月ごとであることを忘れてはならない。"
  },
  {
    "start": 353712,
    "end": 361520,
    "text": "一方の列や他方の列でデータが欠落している奇妙な場合があるのがわかるだろう。"
  },
  {
    "start": 361632,
    "end": 364160,
    "text": "この問題を解決する方法を考えなければならない。"
  },
  {
    "start": 364352,
    "end": 368084,
    "text": "そのためには、フォワード・フィリングと呼ばれる方法がある。"
  },
  {
    "start": 368424,
    "end": 375016,
    "text": "これらのレートは、発表された期間中一定であると仮定する。"
  },
  {
    "start": 375120,
    "end": 378368,
    "text": "例えば、賃貸空室率は四半期ごとに発表される。"
  },
  {
    "start": 378456,
    "end": 382576,
    "text": "ここでは、この5.8というレートが四半期を通じて一定であると仮定する。"
  },
  {
    "start": 382720,
    "end": 383800,
    "text": "インフレも同じだ。"
  },
  {
    "start": 383872,
    "end": 386680,
    "text": "今月いっぱいは一定と仮定する。"
  },
  {
    "start": 386872,
    "end": 397880,
    "text": "例えば、2021年12月であれば、最新の賃貸空室率を記入します。"
  },
  {
    "start": 398032,
    "end": 400040,
    "text": "そうすれば、インフレを埋めることができる。"
  },
  {
    "start": 400152,
    "end": 403284,
    "text": "この値をこれらの行に記入することになる。"
  },
  {
    "start": 404444,
    "end": 406540,
    "text": "よし、ではそうしよう。"
  },
  {
    "start": 406652,
    "end": 412620,
    "text": "まず最初にすることは、供給されたデータはFeddataのf fillに等しいということだ。"
  },
  {
    "start": 412772,
    "end": 415916,
    "text": "パンダ、これはいわゆるフォワードフィルだよ。"
  },
  {
    "start": 416100,
    "end": 423108,
    "text": "最後の50行をもう一度見てみると、すべての値が埋まっていることがわかるだろう。"
  },
  {
    "start": 423276,
    "end": 430188,
    "text": "2021年12月に戻ると、インフレ率は280％だった。"
  },
  {
    "start": 430276,
    "end": 431384,
    "text": "インフレの尺度。"
  },
  {
    "start": 432034,
    "end": 436442,
    "text": "ここに戻ると、280が今月いっぱい埋まっているのがわかる。"
  },
  {
    "start": 436618,
    "end": 438218,
    "text": "それが前方へのフィルだ。"
  },
  {
    "start": 438266,
    "end": 442410,
    "text": "欠損値を埋めるために、前方に値を引っ張ってくる。"
  },
  {
    "start": 442522,
    "end": 447954,
    "text": "フォワードフィルを行うのは、その時点ですでに知っているデータだけを使いたいからだ。"
  },
  {
    "start": 448114,
    "end": 457774,
    "text": "未来からデータを引っ張ってきて、それを使って過去を埋めるようなことはしたくないし、平均値や中央値も使いたくない。"
  },
  {
    "start": 462744,
    "end": 465964,
    "text": "さて、これですべての値を入力したことになる。"
  },
  {
    "start": 466624,
    "end": 475928,
    "text": "これからジローのデータを読み込みますが、ジローのファイル名をコピー＆ペーストします。"
  },
  {
    "start": 475976,
    "end": 477164,
    "text": "とても長いんだ。"
  },
  {
    "start": 478144,
    "end": 479964,
    "text": "これらは2つのファイルである。"
  },
  {
    "start": 480304,
    "end": 492468,
    "text": "最初のファイルには、各週のアメリカの住宅販売価格の中央値があり、2番目のデータセットには、zillowが計算した住宅価格がある。"
  },
  {
    "start": 492636,
    "end": 497996,
    "text": "ジローは、全米の平均的な家の価値はいくらだと考えているのだろうか？"
  },
  {
    "start": 498180,
    "end": 503984,
    "text": "これらはジローのファイルであり、他のファイルを読み込むのと同様の方法で読み込むことになる。"
  },
  {
    "start": 504684,
    "end": 507384,
    "text": "今回もPDのCSV読み込みを行う。"
  },
  {
    "start": 509424,
    "end": 514324,
    "text": "よし、これはファイルを読み込むもうひとつのリスト内包だ。"
  },
  {
    "start": 515544,
    "end": 516000,
    "text": "オーケー。"
  },
  {
    "start": 516032,
    "end": 518096,
    "text": "で読んだものを見てみよう。"
  },
  {
    "start": 518160,
    "end": 521320,
    "text": "データフレームにゼロを入力することができる。"
  },
  {
    "start": 521512,
    "end": 525336,
    "text": "これにより、販売価格の中央値データフレームが表示される。"
  },
  {
    "start": 525480,
    "end": 529512,
    "text": "このデータフレームはちょっと奇妙なフォーマットになっている。"
  },
  {
    "start": 529688,
    "end": 538244,
    "text": "連邦準備制度理事会（FRB）のデータでは、各行が日付で、列がその日付に関する実際の経済指標だった。"
  },
  {
    "start": 538864,
    "end": 540120,
    "text": "これは少し違う。"
  },
  {
    "start": 540192,
    "end": 543104,
    "text": "それぞれの行は、実際にはアメリカの地域である。"
  },
  {
    "start": 543224,
    "end": 547764,
    "text": "最初の列は国全体、2列目はニューヨーク、といった具合だ。"
  },
  {
    "start": 548224,
    "end": 551600,
    "text": "をクリックすると、その地域に関する情報が表示される。"
  },
  {
    "start": 551752,
    "end": 557864,
    "text": "米国だけのデータが欲しいので、最初の行だけを取りたいのです。"
  },
  {
    "start": 558024,
    "end": 562512,
    "text": "もしあなたがpandasの上級ユーザーなら、自由にカスタマイズしてください。"
  },
  {
    "start": 562568,
    "end": 564174,
    "text": "地元を選ぶことができる。"
  },
  {
    "start": 564304,
    "end": 567214,
    "text": "あなたが住んでいる場所に対応する行を見つける。"
  },
  {
    "start": 567594,
    "end": 573946,
    "text": "USをデフォルトにして、最初の5列を削除する。"
  },
  {
    "start": 574050,
    "end": 578974,
    "text": "週間販売価格のデータしかない。"
  },
  {
    "start": 579354,
    "end": 581054,
    "text": "そうしよう。"
  },
  {
    "start": 582794,
    "end": 594734,
    "text": "つまり、DfはPDデータフレームDf ILOCと等しく、行を位置で、列を位置で特定するだけである。"
  },
  {
    "start": 596314,
    "end": 597034,
    "text": "いいかい？"
  },
  {
    "start": 597154,
    "end": 602450,
    "text": "この発言は、まさに私が言ったことを実行するものだ。"
  },
  {
    "start": 602562,
    "end": 608346,
    "text": "最初の行のデータだけを選び、最初の5列をカットする。"
  },
  {
    "start": 608530,
    "end": 609074,
    "text": "いいね？"
  },
  {
    "start": 609154,
    "end": 612894,
    "text": "であれば、これは両方のデータフレームで起こることを確認するだけである。"
  },
  {
    "start": 613194,
    "end": 616334,
    "text": "このDFのゼロを見てみよう。"
  },
  {
    "start": 616934,
    "end": 624166,
    "text": "連邦準備制度理事会（FRB）のデータとの整合性を保つため、データを正しいフォーマットに再フォーマットしたことがお分かりいただけるだろう。"
  },
  {
    "start": 624310,
    "end": 631134,
    "text": "各行が週で、列が最初のデータフレームの販売価格である。"
  },
  {
    "start": 631174,
    "end": 634434,
    "text": "その週に売られた平均的な住宅の販売価格である。"
  },
  {
    "start": 634734,
    "end": 637194,
    "text": "次に、もうひとつのデータセットを見てみよう。"
  },
  {
    "start": 638014,
    "end": 641462,
    "text": "これは実際に住宅価格のデータセットである。"
  },
  {
    "start": 641558,
    "end": 650164,
    "text": "同じようなフォーマットで、全米の住宅価格が毎週発表されている。"
  },
  {
    "start": 651784,
    "end": 656768,
    "text": "よし、次はこの2つのデータセットを結合するための小さなループを書こう。"
  },
  {
    "start": 656816,
    "end": 665484,
    "text": "私たちの住宅価格データは毎月発表されるのに対し、以前のデータセットである販売価格データは毎週発表されることにお気づきだろうか。"
  },
  {
    "start": 666344,
    "end": 670330,
    "text": "両方同時に見せるから、それを見てほしい。"
  },
  {
    "start": 670512,
    "end": 676702,
    "text": "こちらは住宅価格販売価格データで、こちらは住宅価格データである。"
  },
  {
    "start": 676798,
    "end": 683674,
    "text": "住宅価格データが毎週発表されるのに対し、住宅価格データは月に一度、月末にしか発表されない。"
  },
  {
    "start": 684374,
    "end": 692434,
    "text": "必要なのは、これらのデータフレームにカラムを追加して、共通のカラムを使ってマージすることだ。"
  },
  {
    "start": 693454,
    "end": 695714,
    "text": "そのために、手っ取り早くforループを書こう。"
  },
  {
    "start": 698714,
    "end": 703694,
    "text": "つまり、インデックスがpandasからdatetimeに変換されているということだ。"
  },
  {
    "start": 705834,
    "end": 711534,
    "text": "これらのインデックス（左側に表示されている行インデックス）は現在、文字列として保存されている。"
  },
  {
    "start": 711874,
    "end": 716954,
    "text": "それらをパンダの日付時刻に変換することで、より複雑な操作ができるようになる。"
  },
  {
    "start": 717074,
    "end": 727334,
    "text": "例えば、これから書く「月」のカラムは、インデックス2ピリオドの「月」だ。"
  },
  {
    "start": 727494,
    "end": 733806,
    "text": "この機能でできることは、これらの日付から日の部分を切り離し、月の部分だけにすることだ。"
  },
  {
    "start": 733910,
    "end": 738274,
    "text": "これで、両方のデータフレームを結合できる共通のカラムができる。"
  },
  {
    "start": 739014,
    "end": 741754,
    "text": "その結果を見てみよう。"
  },
  {
    "start": 742174,
    "end": 752326,
    "text": "住宅価格データ・フレーム、販売価格データ・フレームに月のカラムが追加され、住宅価格データ・フレームにも月のカラムが追加されました。"
  },
  {
    "start": 752430,
    "end": 756474,
    "text": "この2つのデータフレームを実際に結合するために、月の列を使用する。"
  },
  {
    "start": 757094,
    "end": 767534,
    "text": "価格データはDFのゼロに等しいと書き、月にDFの1をマージする。"
  },
  {
    "start": 767654,
    "end": 770542,
    "text": "onはマージしたいカラムです。"
  },
  {
    "start": 770638,
    "end": 774672,
    "text": "pandasは両方のデータフレームを見る。"
  },
  {
    "start": 774728,
    "end": 779608,
    "text": "よし、月はこのデータ・フレームにこの値で、もう一つのデータ・フレームには同じ値だ。"
  },
  {
    "start": 779656,
    "end": 783564,
    "text": "この列をまとめよう。"
  },
  {
    "start": 784504,
    "end": 793884,
    "text": "このデータ・フレームのインデックスが最初のデータ・フレームのインデックスと同じであることを確認する。"
  },
  {
    "start": 794424,
    "end": 796884,
    "text": "では、データを見てみよう。"
  },
  {
    "start": 797264,
    "end": 801844,
    "text": "実際に1つのデータ・フレームにまとめたことがわかる。"
  },
  {
    "start": 802734,
    "end": 814558,
    "text": "価格、各住宅の平均販売価格、これはゼロxであり、次に住宅の平均価格、これはゼロyである。"
  },
  {
    "start": 814726,
    "end": 818910,
    "text": "さて、カラム名がゼロXとゼロYになるのは避けたい。"
  },
  {
    "start": 818982,
    "end": 821142,
    "text": "データのクリーニングをして、それを修正しよう。"
  },
  {
    "start": 821238,
    "end": 823110,
    "text": "月の欄もなくすことができる。"
  },
  {
    "start": 823222,
    "end": 826198,
    "text": "すべてを統合した今、それはもう必要ない。"
  },
  {
    "start": 826366,
    "end": 827754,
    "text": "すみません、月欄です。"
  },
  {
    "start": 830274,
    "end": 830826,
    "text": "オーケー。"
  },
  {
    "start": 830890,
    "end": 835134,
    "text": "次に、カラムに新しい名前を付けます。"
  },
  {
    "start": 836514,
    "end": 837994,
    "text": "ゼロXとは何か？"
  },
  {
    "start": 838034,
    "end": 838734,
    "text": "とにかく？"
  },
  {
    "start": 840674,
    "end": 847494,
    "text": "よし、これで新しいカラム名と新しいデータ・フレームができた。"
  },
  {
    "start": 852994,
    "end": 861244,
    "text": "さて、次にやるべきことは、このジローの価格データを連邦準備銀行の経済データと統合することだ。"
  },
  {
    "start": 862184,
    "end": 868764,
    "text": "そのために、まず最初にやることは、供給データの欠損値を取り除くことだ。"
  },
  {
    "start": 869944,
    "end": 875404,
    "text": "これで、3つの経済指標が揃っていない行はすべて削除される。"
  },
  {
    "start": 876104,
    "end": 881160,
    "text": "今、FRBのデータを見ることができる。"
  },
  {
    "start": 881272,
    "end": 888446,
    "text": "これらの指標の中には、1940年代からのデータがあったものもある。"
  },
  {
    "start": 888550,
    "end": 892194,
    "text": "3つの指標がすべて揃っている行しかない。"
  },
  {
    "start": 892894,
    "end": 899910,
    "text": "さて、このFRBのデータについてお気づきの点があるかもしれないが、それは最後の数行をお見せすることでより明らかになるかもしれない。"
  },
  {
    "start": 900022,
    "end": 902514,
    "text": "ここでは最後の20行だけを表示する。"
  },
  {
    "start": 903054,
    "end": 917674,
    "text": "価格データを見ると、2022年7月2日、2022年7月9日となっている。"
  },
  {
    "start": 917714,
    "end": 919546,
    "text": "701は無視する。"
  },
  {
    "start": 919650,
    "end": 920770,
    "text": "それは単なる人工物だ。"
  },
  {
    "start": 920842,
    "end": 930618,
    "text": "賃貸空室データとインフレ・データは月初に発表されるので、私たちが本当に気にしたいのは週次データだけだ。"
  },
  {
    "start": 930706,
    "end": 934854,
    "text": "毎週、月初を無視した行を調べたい。"
  },
  {
    "start": 935474,
    "end": 944560,
    "text": "ジローの価格データが発表されるちょうど2日前である。"
  },
  {
    "start": 944672,
    "end": 954280,
    "text": "というのも、連邦準備制度理事会（FRB）がすべてのデータを発表するのは確か火曜日で、ジローがすべてのデータを発表するのは確か2日後の木曜日だからだ。"
  },
  {
    "start": 954432,
    "end": 959160,
    "text": "必要なのは、FRBのデータとジローのデータを一致させることだ。"
  },
  {
    "start": 959352,
    "end": 965954,
    "text": "そのためには、連邦準備制度理事会（FRB）のデータにあるすべての値に2、3日を加えるだけだ。"
  },
  {
    "start": 966144,
    "end": 974094,
    "text": "ここでは、フィード・データ・インデックスは、フィード・データ・インデックス＋時間、デルタ日数は2に等しいとする。"
  },
  {
    "start": 974174,
    "end": 978234,
    "text": "これにより、連邦準備制度理事会（FRB）のデータはすべて2日前倒しされることになる。"
  },
  {
    "start": 979814,
    "end": 982034,
    "text": "FRBのデータを見てみよう。"
  },
  {
    "start": 985374,
    "end": 989294,
    "text": "ご覧のように、すべてが2、3日前倒しになっている。"
  },
  {
    "start": 989334,
    "end": 993708,
    "text": "我々は7月14日から7月16日まで、その他もろもろ。"
  },
  {
    "start": 993836,
    "end": 998944,
    "text": "日付が一致しているので、Zillowのデータと統合することができました。"
  },
  {
    "start": 999964,
    "end": 1002344,
    "text": "では、実際にそうしてみよう。"
  },
  {
    "start": 1003924,
    "end": 1015784,
    "text": "価格データはFeddataの価格データをマージしたもので、左のインデックスはtrue、右のインデックスはtrueに等しい。"
  },
  {
    "start": 1016324,
    "end": 1019796,
    "text": "これはpandasにこれらの2つのデータフレームを結合するように指示している。"
  },
  {
    "start": 1019900,
    "end": 1026398,
    "text": "これは、実際にマージするために、両方のデータフレームの日付であるインデックスを使えと言っているのだ。"
  },
  {
    "start": 1026486,
    "end": 1031314,
    "text": "インデックスを探し、一致する行を見つけ、その一致に基づいて行を結合する。"
  },
  {
    "start": 1031854,
    "end": 1034434,
    "text": "では、価格データを見てみよう。"
  },
  {
    "start": 1036134,
    "end": 1042074,
    "text": "さて、これで連邦準備制度理事会のデータとジローのデータの両方を1つのデータフレームに収めることができた。"
  },
  {
    "start": 1043454,
    "end": 1051474,
    "text": "月初めの日付が消えていることにお気づきでしょう。両方のデータフレームで一致する日付だけを取り出したからです。"
  },
  {
    "start": 1051844,
    "end": 1054464,
    "text": "一致しないものはすべて取り除かれた。"
  },
  {
    "start": 1055964,
    "end": 1061388,
    "text": "よし、簡単にできるように、これらの列の名前を変えてみよう。"
  },
  {
    "start": 1061476,
    "end": 1065504,
    "text": "私は住宅ローン30ユーロを常に全角で入力しているわけではない。"
  },
  {
    "start": 1066684,
    "end": 1074464,
    "text": "金利、空室率（賃貸空室率）、CPI（インフレのコア指標）。"
  },
  {
    "start": 1074804,
    "end": 1078824,
    "text": "早めにエンターキーを押さなければ、値も入力することになる。"
  },
  {
    "start": 1079904,
    "end": 1081712,
    "text": "では、価格データを見てみよう。"
  },
  {
    "start": 1081768,
    "end": 1082364,
    "text": "今すぐだ。"
  },
  {
    "start": 1083224,
    "end": 1084400,
    "text": "その方がずっといい。"
  },
  {
    "start": 1084472,
    "end": 1093524,
    "text": "5つの異なるCSVにデータを格納する代わりに、機械学習を行うために必要なものを1つにまとめたクリーンなCSVを手に入れることができる。"
  },
  {
    "start": 1095264,
    "end": 1101644,
    "text": "では、ここで少しデータを調べてみよう。"
  },
  {
    "start": 1105914,
    "end": 1109134,
    "text": "では、価格の列をプロットしてみよう。"
  },
  {
    "start": 1109634,
    "end": 1117574,
    "text": "これは、日付であるインデックスをX軸、価格をY軸としている。"
  },
  {
    "start": 1118074,
    "end": 1122454,
    "text": "これはアメリカの住宅価格の推移である。"
  },
  {
    "start": 1122794,
    "end": 1128814,
    "text": "2012年くらいから、特に最近になってかなり急上昇しているのがわかるだろう。"
  },
  {
    "start": 1129274,
    "end": 1134698,
    "text": "住宅価格の変動と混同されやすいものにインフレがある。"
  },
  {
    "start": 1134866,
    "end": 1139186,
    "text": "例えば、インフレは一般的に物価を高くするだけですよね？"
  },
  {
    "start": 1139290,
    "end": 1142614,
    "text": "なぜなら、すべてのものは時間が経てば経つほど高くなるからだ。"
  },
  {
    "start": 1142914,
    "end": 1150250,
    "text": "私たちがやりたいのは、インフレを取り除き、住宅価格の上昇だけを計算することです。"
  },
  {
    "start": 1150362,
    "end": 1153946,
    "text": "インフレと住宅価格を予測するモデルにはしたくない。"
  },
  {
    "start": 1154050,
    "end": 1156682,
    "text": "私たちは、住宅価格を予測したいだけなのだ。"
  },
  {
    "start": 1156818,
    "end": 1172254,
    "text": "これは、価格をインフレ率（CPI）で割ったもので、これに100を掛けます。"
  },
  {
    "start": 1172334,
    "end": 1177854,
    "text": "CPIは100単位なので、100が基準CPIとなる。"
  },
  {
    "start": 1178014,
    "end": 1182154,
    "text": "CPIで割るなら、100倍して修正しなければならない。"
  },
  {
    "start": 1184214,
    "end": 1192664,
    "text": "では、実際に調整後の価格をプロットして、先ほどの価格との違いを見てみよう。"
  },
  {
    "start": 1193804,
    "end": 1199348,
    "text": "価格とインフレ率を見ると、まだ急上昇していることがわかる。"
  },
  {
    "start": 1199436,
    "end": 1204524,
    "text": "インフレ率を補正しているため、変化の大きさはそれほど極端ではない。"
  },
  {
    "start": 1204564,
    "end": 1213024,
    "text": "さて、直前の2008年の住宅価格は20万ドル前後だったが、2022年には35万ドルを超えている。"
  },
  {
    "start": 1213824,
    "end": 1220004,
    "text": "ここでは約9万人から約13万人に増えただけで、それでもかなり大きな上昇だ。"
  },
  {
    "start": 1220384,
    "end": 1229684,
    "text": "インフレを除外しているため、私たちは住宅価格の変化だけを見ており、その価格にインフレは含まれていない。"
  },
  {
    "start": 1231264,
    "end": 1233576,
    "text": "価値欄も調整する。"
  },
  {
    "start": 1233680,
    "end": 1242914,
    "text": "調整値の列を作成します。これは、調整値をCPIで割って100倍したものです。"
  },
  {
    "start": 1243254,
    "end": 1246646,
    "text": "簡単に説明すると、価格データだ。"
  },
  {
    "start": 1246750,
    "end": 1258134,
    "text": "価格欄はその週に売れた家の平均価格であり、価格データはジローが計算した全米の家の平均価格である。"
  },
  {
    "start": 1258294,
    "end": 1260342,
    "text": "ちょっとだけ違う。"
  },
  {
    "start": 1260518,
    "end": 1265450,
    "text": "よし、では次に機械学習のターゲットを設定しよう。"
  },
  {
    "start": 1265582,
    "end": 1267794,
    "text": "私たちのターゲットは、私たちが予測したいものである。"
  },
  {
    "start": 1267954,
    "end": 1273250,
    "text": "ここで予測しようとしているのは、来期の住宅価格がどうなるかということだ。"
  },
  {
    "start": 1273362,
    "end": 1277734,
    "text": "3ヵ月後の住宅価格は上がるのか、それとも下がるのか？"
  },
  {
    "start": 1279034,
    "end": 1285154,
    "text": "pandasのshiftメソッドを使ってターゲットを設定する。"
  },
  {
    "start": 1285314,
    "end": 1293664,
    "text": "シフト・メソッドが行うのは、3ヶ月先の調整後の価格を取得し、それを現在の行に戻すことである。"
  },
  {
    "start": 1294684,
    "end": 1297064,
    "text": "では、価格データを見てみよう。"
  },
  {
    "start": 1298204,
    "end": 1300996,
    "text": "調整後の価格はこちらでご覧いただけます。"
  },
  {
    "start": 1301180,
    "end": 1309156,
    "text": "2008年の平均的な家の価格は89,000ドルで、次の四半期の価格は90,000ドルです。"
  },
  {
    "start": 1309260,
    "end": 1313948,
    "text": "これは3ヶ月後の家の調整価格である。"
  },
  {
    "start": 1314036,
    "end": 1320240,
    "text": "2008年5月、これは住宅の平均販売価格である。"
  },
  {
    "start": 1320432,
    "end": 1320936,
    "text": "いいね？"
  },
  {
    "start": 1321000,
    "end": 1324200,
    "text": "そうすれば、これらの値がなくなっていることに気づくだろう。"
  },
  {
    "start": 1324272,
    "end": 1331792,
    "text": "13週間先、13行先のデータがないからです。"
  },
  {
    "start": 1331888,
    "end": 1336764,
    "text": "実際に引き戻す値がないため、値が欠落しているのだ。"
  },
  {
    "start": 1337144,
    "end": 1342056,
    "text": "このような行を使って、実際に予測を立てたいと思うだろう？"
  },
  {
    "start": 1342160,
    "end": 1346494,
    "text": "10月に何が起こるかを7月に予測したい、と言うかもしれない。"
  },
  {
    "start": 1346614,
    "end": 1349874,
    "text": "この行をモデルに入力して予測を行うことができる。"
  },
  {
    "start": 1350574,
    "end": 1355782,
    "text": "次の四半期の値がないので、この行をトレーニングデータに使用することはできません。"
  },
  {
    "start": 1355958,
    "end": 1359878,
    "text": "アルゴリズムを訓練するためには、実際に何が起こったかを知る必要がある。"
  },
  {
    "start": 1360006,
    "end": 1363078,
    "text": "私たちはこれらを使って将来の予測を立てたい。"
  },
  {
    "start": 1363246,
    "end": 1366714,
    "text": "とりあえず、これらの行を削除します。"
  },
  {
    "start": 1367414,
    "end": 1375864,
    "text": "将来起こることを予測したいのであれば、これらの行を保存し、予測段階で使用したい。"
  },
  {
    "start": 1376024,
    "end": 1377640,
    "text": "これを落としてくる。"
  },
  {
    "start": 1377752,
    "end": 1380480,
    "text": "pandasには素敵なインプレース・キーワードがある。"
  },
  {
    "start": 1380672,
    "end": 1390964,
    "text": "これは、price data equals price data dropnaと書くのと同じで、代わりにin placeキーワードを使った方が少しすっきりすることがある。"
  },
  {
    "start": 1392264,
    "end": 1395064,
    "text": "では、次に価格データを見てみよう。"
  },
  {
    "start": 1395144,
    "end": 1400434,
    "text": "次の四半期の列の値が欠落している行を削除したことがわかる。"
  },
  {
    "start": 1401494,
    "end": 1405182,
    "text": "よし、ではターゲットの最終設定をしよう。"
  },
  {
    "start": 1405358,
    "end": 1415634,
    "text": "そして、changeがターゲット・カラムとなり、3ヶ月後の価格が上がっているか下がっているかを示す。"
  },
  {
    "start": 1416014,
    "end": 1425694,
    "text": "これから書くことは、来期の価格データは調整後の価格データよりも大きいということだ。"
  },
  {
    "start": 1426274,
    "end": 1431762,
    "text": "つまり、3カ月後の価格が現在の価格より高いか安いかということだ。"
  },
  {
    "start": 1431898,
    "end": 1437410,
    "text": "これはブール値true falseを返すが、そのブール値を整数に変換する。"
  },
  {
    "start": 1437562,
    "end": 1439466,
    "text": "真は真になる。"
  },
  {
    "start": 1439570,
    "end": 1441570,
    "text": "ゼロは偽になる。"
  },
  {
    "start": 1441682,
    "end": 1449694,
    "text": "このコラムの変更は、今後3ヶ月の間に価格が上昇すれば、1がつくことをお見せしよう。"
  },
  {
    "start": 1449734,
    "end": 1453354,
    "text": "今後3カ月で価格が下がれば、ゼロになる。"
  },
  {
    "start": 1454494,
    "end": 1463342,
    "text": "さて、機械学習モデルを適用する前に、変更カラムをざっと見て、値カウント・メソッドを実行してみよう。"
  },
  {
    "start": 1463518,
    "end": 1470126,
    "text": "これでわかるのは、何週目に価格が上がり、何週目に価格が下がったかというデータだ。"
  },
  {
    "start": 1470230,
    "end": 1480060,
    "text": "もしバランスが取れていなければ、機械学習モデルを作成する際にそれを考慮しなければならないからだ。"
  },
  {
    "start": 1480092,
    "end": 1481184,
    "text": "大丈夫だ。"
  },
  {
    "start": 1481924,
    "end": 1484188,
    "text": "予測変数のリストを作成します。"
  },
  {
    "start": 1484276,
    "end": 1488544,
    "text": "これらは予測に使う変数だ。"
  },
  {
    "start": 1490124,
    "end": 1495624,
    "text": "金利、空室率、調整後価格、調整後価格。"
  },
  {
    "start": 1497444,
    "end": 1502464,
    "text": "であれば、ターゲットは変更カラムになる。"
  },
  {
    "start": 1502584,
    "end": 1506924,
    "text": "この4つの列を使って、この1つの列を予測する。"
  },
  {
    "start": 1511264,
    "end": 1515328,
    "text": "さて、かなり多くのことをやったが、これからが楽しいところだ。"
  },
  {
    "start": 1515496,
    "end": 1521376,
    "text": "データのクリーニングと操作が終わったら、実際に機械学習モデルを作成することができる。"
  },
  {
    "start": 1521560,
    "end": 1527124,
    "text": "実際に機械学習を行うには、Scikit learnというライブラリを使う。"
  },
  {
    "start": 1528064,
    "end": 1531192,
    "text": "ランダムフォレスト分類器をインポートする。"
  },
  {
    "start": 1531328,
    "end": 1537992,
    "text": "私はランダムフォレストを、ほとんどどんな機械学習タスクにも対応できる基本的なモデルとして使うのが好きだ。"
  },
  {
    "start": 1538088,
    "end": 1547404,
    "text": "というのも、ランダムフォレストが内部的にどのように機能するかというと、オーバーフィッティングにかなり強く、データの非線形傾向を拾うことができるからだ。"
  },
  {
    "start": 1548104,
    "end": 1550416,
    "text": "素晴らしいデフォルトモデルだ。"
  },
  {
    "start": 1550600,
    "end": 1552152,
    "text": "それをインポートしてくる。"
  },
  {
    "start": 1552208,
    "end": 1556552,
    "text": "その後、itlearnのメトリクスから正確さのスコアをインポートする。"
  },
  {
    "start": 1556728,
    "end": 1560880,
    "text": "精度のスコアは、我々のモデルが優れているかどうかを判断するために使うものだ。"
  },
  {
    "start": 1560992,
    "end": 1566284,
    "text": "精度スコアは基本的に、我々のモデルが何パーセントの確率で正しいかを教えてくれる。"
  },
  {
    "start": 1566664,
    "end": 1576576,
    "text": "これらすべてについて予測を立てた場合、価格が上がると言ったとき、私のモデルが正しかったのは何パーセントで、どのくらいの頻度で上がったのだろうか？"
  },
  {
    "start": 1576680,
    "end": 1579564,
    "text": "私が下降したと言ったとき、どのくらいの頻度で下降したのですか？"
  },
  {
    "start": 1580944,
    "end": 1582658,
    "text": "次にnumpyをインポートする。"
  },
  {
    "start": 1582776,
    "end": 1586510,
    "text": "pandasを使用する場合、pandasはnumpyを使用します。"
  },
  {
    "start": 1586622,
    "end": 1590794,
    "text": "これはデータのテーブルを扱うためのパイソンライブラリだ。"
  },
  {
    "start": 1592174,
    "end": 1596314,
    "text": "よし、ではまず最初に予測関数を書いてみよう。"
  },
  {
    "start": 1599134,
    "end": 1607214,
    "text": "この関数は、トレーニング・セットとテスト・セットを取り込み、予測変数のセットで予測を行う。"
  },
  {
    "start": 1607294,
    "end": 1613220,
    "text": "予測に使用するカラムとターゲット、そして予測を返す。"
  },
  {
    "start": 1613412,
    "end": 1620076,
    "text": "ここでまずモデルを初期化し、いくつかのパラメーターを設定する。"
  },
  {
    "start": 1620180,
    "end": 1624184,
    "text": "1つは最小サンプル分割、もう1つはランダム状態である。"
  },
  {
    "start": 1624804,
    "end": 1634076,
    "text": "ミンサンプルスプリットは、ランダムフォレストの決定木のノードが深く分割されるのを防ぐことで、オーバーフィッティングを防ぐ。"
  },
  {
    "start": 1634220,
    "end": 1638634,
    "text": "ランダムフォレストが内部的にどのように機能しているのか知らないのであれば、あまり気にする必要はない。"
  },
  {
    "start": 1638804,
    "end": 1640862,
    "text": "設定したくなければ設定する必要はない。"
  },
  {
    "start": 1640958,
    "end": 1642310,
    "text": "ただ、セットするのが好きなんだ。"
  },
  {
    "start": 1642422,
    "end": 1644474,
    "text": "ランダムな状態を設定するのも好きだ。"
  },
  {
    "start": 1645014,
    "end": 1652222,
    "text": "つまり、モデルを実行するたびに同じ乱数列が生成され、同じ結果が得られるということだ。"
  },
  {
    "start": 1652358,
    "end": 1662590,
    "text": "ランダムフォレストは内部的にランダム化を使用しているため、何も変えずにアルゴリズムを2回実行するだけで、まったく異なる結果が得られることもある。"
  },
  {
    "start": 1662702,
    "end": 1664954,
    "text": "ランダムな状態はそれを防ぐのに役立つ。"
  },
  {
    "start": 1667004,
    "end": 1667580,
    "text": "オーケー。"
  },
  {
    "start": 1667652,
    "end": 1671932,
    "text": "次に、トレーニング・データを使って実際にモデルをフィットさせる。"
  },
  {
    "start": 1672108,
    "end": 1681588,
    "text": "予測変数とターゲットを渡して、テスト・セットを使って予測値を生成します。"
  },
  {
    "start": 1681716,
    "end": 1688904,
    "text": "トレーニング・セットでモデルをトレーニングし、テスト・セットの予測値を得て、その予測値を返す。"
  },
  {
    "start": 1693914,
    "end": 1703890,
    "text": "さて、皆さんは、データ全体にわたってモデルを検証するために、クロス・バリデーションなどのテクニックをご存知かもしれない。"
  },
  {
    "start": 1704042,
    "end": 1711938,
    "text": "このような時系列データでは、これは機能しない。なぜなら、我々がしたくないのは、未来のデータを使って過去を予測することだからだ。"
  },
  {
    "start": 1712066,
    "end": 1724274,
    "text": "このような時系列データの場合、交差検証やその他の一般的な機械学習テクニックを使うと、例えば2022年のデータを使って2019年に何が起こったかを予測することになる。"
  },
  {
    "start": 1724774,
    "end": 1730390,
    "text": "宝くじに当たりそうだ。"
  },
  {
    "start": 1730422,
    "end": 1736622,
    "text": "私は住宅価格を完璧に予測することができるが、現実の世界ではあなたのモデルはうまく機能しないだろう。"
  },
  {
    "start": 1736758,
    "end": 1743182,
    "text": "私はこのミスを何度も何度も犯してきたので、このミスを犯さないための方法を紹介しようと思う。"
  },
  {
    "start": 1743278,
    "end": 1745554,
    "text": "バックテストと呼ばれるものを行うつもりだ。"
  },
  {
    "start": 1746134,
    "end": 1754382,
    "text": "バックテストは、データセットのほとんどについて予測を生成させるが、データセットの順序を尊重する方法で行う。"
  },
  {
    "start": 1754478,
    "end": 1758154,
    "text": "将来のデータを使って過去を予測することだけは避けたい。"
  },
  {
    "start": 1758894,
    "end": 1767854,
    "text": "バックテストの仕組みは、まず全予測というリストを初期化し、ここにすべての予測セットを追加します。"
  },
  {
    "start": 1768014,
    "end": 1782734,
    "text": "それから、大きなループを書くことにしよう。このループを書き出して、何をやっているのか説明しよう。ここで2つの定数、dartとstepも定義する。"
  },
  {
    "start": 1784514,
    "end": 1789066,
    "text": "よし、じゃあ、これは5年分のデータから始めよう。"
  },
  {
    "start": 1789170,
    "end": 1791066,
    "text": "我々のデータは2008年から始まっている。"
  },
  {
    "start": 1791170,
    "end": 1797594,
    "text": "2008年から2013年までのすべてのデータを取り込み、次の年の予測を立てる。"
  },
  {
    "start": 1797714,
    "end": 1815054,
    "text": "2008年から2013年までのデータを使って2014年の予測を立て、2008年から2014年までのデータを使って2015年の予測を立て、2014年から2022年までのすべての年の予測を立てる。"
  },
  {
    "start": 1816034,
    "end": 1821574,
    "text": "私たちが行っているのは、トレーニングを分割し、データをトレーニング・セットとテスト・セットに分けることです。"
  },
  {
    "start": 1822394,
    "end": 1826214,
    "text": "私たちのトレーニング・データは、私までのすべてである。"
  },
  {
    "start": 1827054,
    "end": 1834314,
    "text": "ということは、テスト・セットはIの翌年ということになる。"
  },
  {
    "start": 1835774,
    "end": 1836634,
    "text": "オーケー。"
  },
  {
    "start": 1837174,
    "end": 1844094,
    "text": "stepが52なのは1年が52週あるからで、startが260なのは5年分のデータだからだ。"
  },
  {
    "start": 1844214,
    "end": 1844838,
    "text": "オーケー。"
  },
  {
    "start": 1844966,
    "end": 1851954,
    "text": "そして、すべての予測、追加、予測、訓練、テスト予測子を書く。"
  },
  {
    "start": 1855014,
    "end": 1859514,
    "text": "先ほど書いたこの関数を呼び出して、実際に予測を生成している。"
  },
  {
    "start": 1860254,
    "end": 1874310,
    "text": "これからやることは、すべての予測値を連結して、numpy配列のリストにし、それらの配列を連結して、すべての予測値を持つ1つの配列にすることだ。"
  },
  {
    "start": 1874462,
    "end": 1887458,
    "text": "そうすれば、予測値が返され、精度が目標値まで上がる。"
  },
  {
    "start": 1887626,
    "end": 1893834,
    "text": "これがテストデータの実際の値になる。"
  },
  {
    "start": 1893994,
    "end": 1898018,
    "text": "そうすれば、私たちの予測に合格し、これが私たちの正確さのスコアになる。"
  },
  {
    "start": 1898186,
    "end": 1902334,
    "text": "実際の値と予測値を比較するのだ。"
  },
  {
    "start": 1903034,
    "end": 1906066,
    "text": "さて、これでバックテスト関数を書きました。"
  },
  {
    "start": 1906130,
    "end": 1914090,
    "text": "たくさんのコンセプトがあるので、何度かコードを読まなくてもあまり気にしないでほしい。"
  },
  {
    "start": 1914162,
    "end": 1916094,
    "text": "これらの関数を定義する。"
  },
  {
    "start": 1920474,
    "end": 1926226,
    "text": "それでは、バックテストを実行しよう。"
  },
  {
    "start": 1926370,
    "end": 1933934,
    "text": "価格データ、予測変数、目標値を渡し、アルゴリズムの精度を調べます。"
  },
  {
    "start": 1935934,
    "end": 1936534,
    "text": "オーケー。"
  },
  {
    "start": 1936574,
    "end": 1942874,
    "text": "小さなタイプミスがあったので、正確性をこちらに書きましたが、正確性のスコアとすべきです。"
  },
  {
    "start": 1943294,
    "end": 1951038,
    "text": "もう一度実行して、正確さをチェックしよう。"
  },
  {
    "start": 1951166,
    "end": 1953078,
    "text": "59％の精度だった。"
  },
  {
    "start": 1953166,
    "end": 1965524,
    "text": "つまり、我々のモデルが予測を行ったとき、その予測は59％の確率で正しかったということだ。"
  },
  {
    "start": 1970104,
    "end": 1978800,
    "text": "さらにいくつかの変数をモデルに追加し、それらの変数を使って実際にモデルに追加情報を与える。"
  },
  {
    "start": 1978992,
    "end": 1984448,
    "text": "具体的には、住宅価格の最近の動向についてモデルに情報を与える。"
  },
  {
    "start": 1984576,
    "end": 1993464,
    "text": "現在の販売価格、現在の金利などと過去1年間の平均との比率を取る。"
  },
  {
    "start": 1993884,
    "end": 2007564,
    "text": "そのために、pandasのローリング・メソッドを使い、最小期間を渡します。つまり、1期間のデータであっても、pandasはnaを返しません。"
  },
  {
    "start": 2007684,
    "end": 2015932,
    "text": "通常、pandasは現在の行から遡って52週未満のデータしかない場合、naを返します。"
  },
  {
    "start": 2016108,
    "end": 2018024,
    "text": "分間はそれを避けることができる。"
  },
  {
    "start": 2018324,
    "end": 2020140,
    "text": "私たちは毎年見ることができる。"
  },
  {
    "start": 2020292,
    "end": 2024024,
    "text": "これは基本的に過去1年間の平均値を示している。"
  },
  {
    "start": 2024764,
    "end": 2033052,
    "text": "ここにある2022年4月9日の値は、実際には平均金利、平均賃貸空室率などである。"
  },
  {
    "start": 2033148,
    "end": 2034624,
    "text": "この1年間。"
  },
  {
    "start": 2036004,
    "end": 2042950,
    "text": "となると、私たちがやりたいのは、現在の価値と過去1年間の価値との比率を求めることである。"
  },
  {
    "start": 2043142,
    "end": 2047994,
    "text": "まずカラム名を定義する。"
  },
  {
    "start": 2049774,
    "end": 2055190,
    "text": "これは、新しい変数名を実際に生成するための素晴らしいリスト内包である。"
  },
  {
    "start": 2055382,
    "end": 2069104,
    "text": "つまり、価格データと年間レシオは、価格データの予測値をレシオで割ったものに等しいということだ。"
  },
  {
    "start": 2072764,
    "end": 2078252,
    "text": "基本的には、金利を過去1年間の平均金利で割っている。"
  },
  {
    "start": 2078348,
    "end": 2080620,
    "text": "空室率も価格も同じ。"
  },
  {
    "start": 2080772,
    "end": 2084624,
    "text": "これは、価格がどのように推移しているかについての良い情報をモデルに与える。"
  },
  {
    "start": 2085364,
    "end": 2087424,
    "text": "この価格データを見てみよう。"
  },
  {
    "start": 2088604,
    "end": 2090524,
    "text": "これらはすべて比率であることがわかるだろう。"
  },
  {
    "start": 2090644,
    "end": 2098835,
    "text": "この最後の行、2022年4月9日の週を見ると、金利の比率は1.46であることがわかる。"
  },
  {
    "start": 2098939,
    "end": 2105475,
    "text": "金利は昨年よりずっとずっと高く、賃貸の空室率は低い。"
  },
  {
    "start": 2105579,
    "end": 2110143,
    "text": "これは、アルゴリズムが価格トレンドを予測するために使用できる良い情報を与える。"
  },
  {
    "start": 2111203,
    "end": 2114823,
    "text": "精度が上がったかどうか見てみよう。"
  },
  {
    "start": 2117563,
    "end": 2119223,
    "text": "どうなるかな"
  },
  {
    "start": 2119954,
    "end": 2124794,
    "text": "精度を見るときは、ここに新しい予測因子を加えなければならない。"
  },
  {
    "start": 2124914,
    "end": 2129014,
    "text": "年間の比率を加えておくよ。"
  },
  {
    "start": 2129834,
    "end": 2134218,
    "text": "精度を見ると、65％にまで向上している。"
  },
  {
    "start": 2134346,
    "end": 2139974,
    "text": "これらの比率を加えることで、アルゴリズムはより良い決断を下すための良い情報を得ることができた。"
  },
  {
    "start": 2144774,
    "end": 2154074,
    "text": "今、私たちができることは、アルゴリズムが予測でミスをしている箇所を実際にプロットできるように、いくつかの診断を素早く行うことだ。"
  },
  {
    "start": 2154454,
    "end": 2170034,
    "text": "つまり、プレッドマッチとイコール・プレッド、イコール・プライス・データ・ターゲット、イロック・スタートアップということになる。"
  },
  {
    "start": 2170834,
    "end": 2172194,
    "text": "これは何をしているんだ？"
  },
  {
    "start": 2172314,
    "end": 2177154,
    "text": "これは、予測値と実際の値を比較することである。"
  },
  {
    "start": 2177274,
    "end": 2184134,
    "text": "predmatchは、両者が揃えばtrueになり、揃わなければfalseになる。"
  },
  {
    "start": 2185234,
    "end": 2193682,
    "text": "ということは、グラフを作るのだから、ここに色を割り当てればいい。"
  },
  {
    "start": 2193858,
    "end": 2203326,
    "text": "つまり、予測値が一致した場合、グラフを緑色にしたいのだ。"
  },
  {
    "start": 2203470,
    "end": 2206718,
    "text": "予想が外れたときは赤にしたい。"
  },
  {
    "start": 2206846,
    "end": 2208434,
    "text": "これはプレデッドマッチだ。"
  },
  {
    "start": 2209374,
    "end": 2211262,
    "text": "では、それを実行してみよう。"
  },
  {
    "start": 2211438,
    "end": 2226998,
    "text": "そこで、matplotlibを使ってプロットを作成し、データ・イコール価格データをプロットする。"
  },
  {
    "start": 2227046,
    "end": 2230234,
    "text": "これは実際の値をコピーしているだけだ。"
  },
  {
    "start": 2238374,
    "end": 2242234,
    "text": "何が起こっているのか、これをタイプしてから説明しよう。"
  },
  {
    "start": 2243374,
    "end": 2245194,
    "text": "エンターキーを押すのが早すぎなければね。"
  },
  {
    "start": 2247534,
    "end": 2249720,
    "text": "よし、じゃあ、実行してみよう。"
  },
  {
    "start": 2249902,
    "end": 2256100,
    "text": "このプロットは、私たちが予測し、それが正しかったときに、緑色であることを示している。"
  },
  {
    "start": 2256252,
    "end": 2258964,
    "text": "赤は、私たちが予測を立て、それが外れた場合だ。"
  },
  {
    "start": 2259124,
    "end": 2266412,
    "text": "このステートメントがやっていることは、resetindexが実際にインデックスをデータフレームのindexというカラムに変えていることだ。"
  },
  {
    "start": 2266548,
    "end": 2273024,
    "text": "というのも、そうしないとX軸のインデックスを実際に使うことができないからだ。"
  },
  {
    "start": 2273724,
    "end": 2280118,
    "text": "X軸にインデックスという列を使い、Y軸に調整後の価格を使う。"
  },
  {
    "start": 2280246,
    "end": 2287598,
    "text": "私たちが言いたいのは、ポイントをプロットするときはいつでも、プレマッチと呼ばれるこのシリーズに基づいて色を塗るということだ。"
  },
  {
    "start": 2287766,
    "end": 2296814,
    "text": "このプロットでわかるのは、このモデルは最近、市場が上昇しているときにはあまりうまくいっていなかったが、突然下降に転じたということだ。"
  },
  {
    "start": 2296974,
    "end": 2311146,
    "text": "ニュース記事やその他の経済データセットのような、市場が転換するタイミングを説明する予測因子やデータセットを追加することで、このモデルを改善できるかもしれない。"
  },
  {
    "start": 2311250,
    "end": 2315734,
    "text": "この種の診断は、モデルをより良くする方法を見つけ出すのに役立つ。"
  },
  {
    "start": 2316114,
    "end": 2324210,
    "text": "最後にご紹介するのは、モデルにとって実際に最も重要なカラムをチェックする診断です。"
  },
  {
    "start": 2324402,
    "end": 2331354,
    "text": "これは、どの列を削除できるか、あるいは追加データを見つける必要があるか、データを見つけるのに役立つ。"
  },
  {
    "start": 2332534,
    "end": 2339910,
    "text": "ランダムフォレスト分類器をもう一度初期化する。"
  },
  {
    "start": 2339982,
    "end": 2351474,
    "text": "最小のサンプル分割とランダムな状態を渡して、先に進み、モデルをフィットさせるが、予測をするわけではないので、すべてのデータにわたってフィットさせる。"
  },
  {
    "start": 2355414,
    "end": 2370752,
    "text": "その結果、許可順列の重要性、rf価格データの予測因子とリピート10ランダム状態が1に等しいと言うことです。"
  },
  {
    "start": 2370888,
    "end": 2381484,
    "text": "これは、どの変数がランダムフォレストモデルにとって最も重要で、予測性能を向上させるのに役立つかをチェックするものである。"
  },
  {
    "start": 2382984,
    "end": 2388484,
    "text": "そうだ、ここで価格データのターゲットを打ち損ねたようだ。"
  },
  {
    "start": 2391784,
    "end": 2393324,
    "text": "それを実行してみるよ。"
  },
  {
    "start": 2393864,
    "end": 2401764,
    "text": "となると、私たちが見ることができるのは、結果の重要性の平均であり、予測因子を見ることができる。"
  },
  {
    "start": 2402624,
    "end": 2408952,
    "text": "これでわかるのは、各変数がモデルにとってどれだけ重要であったかである。"
  },
  {
    "start": 2409048,
    "end": 2415844,
    "text": "この値が高ければ高いほど、その列はモデルにとってより重要であり、予測に組み込まれる。"
  },
  {
    "start": 2416344,
    "end": 2421644,
    "text": "この2つの診断は、このモデルを改善するための次のステップを示すのに役立つ。"
  },
  {
    "start": 2425904,
    "end": 2429808,
    "text": "次のステップとしては、より多くの経済指標を得ることが考えられる。"
  },
  {
    "start": 2429936,
    "end": 2433032,
    "text": "株式市場の指標を加えることもできるだろう。"
  },
  {
    "start": 2433168,
    "end": 2441204,
    "text": "金のような代替商品の指標や、住宅価格と相関があるかどうかわからないその他の資産を加えることもできる。"
  },
  {
    "start": 2441244,
    "end": 2443344,
    "text": "は興味深い情報を加えることができる。"
  },
  {
    "start": 2443724,
    "end": 2453572,
    "text": "住宅価格がバブルであるとか、暴落しているとか、そういった内容のニュース記事やメディアに関する情報は何でも見つけることができる。"
  },
  {
    "start": 2453668,
    "end": 2467332,
    "text": "また、新しい住宅が建てられている場所や、どこかで新しい住宅がたくさん売り出されるのか、あるいは自然災害などの外的な出来事があるのか、といったデータも見つけることができる。"
  },
  {
    "start": 2467428,
    "end": 2470376,
    "text": "このモデルを改善し続ける方法はたくさんある。"
  },
  {
    "start": 2470540,
    "end": 2477144,
    "text": "また、先ほども少し触れたが、このモデルをあなたの地域に合わせてカスタマイズすることもできる。"
  },
  {
    "start": 2477304,
    "end": 2483648,
    "text": "zillowのデータセットには、アメリカのほぼすべての都市圏の行がある。"
  },
  {
    "start": 2483776,
    "end": 2488284,
    "text": "このモデルをあなたの地元に合わせてカスタマイズすることもできる。"
  },
  {
    "start": 2489664,
    "end": 2491400,
    "text": "改善する方法はたくさんある。"
  },
  {
    "start": 2491552,
    "end": 2498424,
    "text": "また、別の機械学習アルゴリズムを使うこともでき、その方がこのデータセットに適している可能性もある。"
  },
  {
    "start": 2499364,
    "end": 2506820,
    "text": "さて、このウォークスルーを楽しんでいただけたなら幸いである。"
  },
  {
    "start": 2506972,
    "end": 2508004,
    "text": "ありがとう。"
  }
]