[
  {
    "start": 1120,
    "end": 1608,
    "text": "やあ、みんな。"
  },
  {
    "start": 1654,
    "end": 4074,
    "text": "チャンネル初のライブストリームへようこそ。"
  },
  {
    "start": 5094,
    "end": 15794,
    "text": "今日は、高度な回帰テクニックを競うKaggleのコンペティション、住宅価格コンペティションに挑戦してみよう。"
  },
  {
    "start": 16334,
    "end": 19794,
    "text": "大会ではまずまずの成績を残せるように頑張りたい。"
  },
  {
    "start": 20174,
    "end": 24714,
    "text": "これは、いつもよりずっと、まるで深いウォークスルーになるだろう。"
  },
  {
    "start": 26354,
    "end": 28954,
    "text": "さあ、飛び込もう。"
  },
  {
    "start": 29114,
    "end": 34106,
    "text": "この大会のために新しいノートブックを作るつもりだが、その前にデータを見てみよう。"
  },
  {
    "start": 34130,
    "end": 40250,
    "text": "実際、81カラムというかなりの数のカラムがあるので、さまざまな機能があります。"
  },
  {
    "start": 40282,
    "end": 46134,
    "text": "私たちは、ある家の価格を予測しようとしている。"
  },
  {
    "start": 46674,
    "end": 53834,
    "text": "また、特徴の説明がたくさん書かれたテキストファイルがあるので、前処理をするときにそれを使います。"
  },
  {
    "start": 54294,
    "end": 57434,
    "text": "コードに入ろう、新しいノートブックに。"
  },
  {
    "start": 58374,
    "end": 61634,
    "text": "この話に入る前に、リーダーボードも見ておきたい。"
  },
  {
    "start": 62374,
    "end": 63726,
    "text": "努力するつもりだ。"
  },
  {
    "start": 63910,
    "end": 65934,
    "text": "以前にもこのコンペに応募したことがある。"
  },
  {
    "start": 66094,
    "end": 67314,
    "text": "それは心配しなくていい。"
  },
  {
    "start": 67694,
    "end": 70154,
    "text": "いいスコアを目指している。"
  },
  {
    "start": 70734,
    "end": 76154,
    "text": "良いスコアは、リーダーボードで他の人が獲得したスコアで判断することができる。"
  },
  {
    "start": 77034,
    "end": 85426,
    "text": "これを見れば、リーダーボードの上位でかなりの不正行為が行われていることがわかるだろう。"
  },
  {
    "start": 85610,
    "end": 86322,
    "text": "これは"
  },
  {
    "start": 86378,
    "end": 87854,
    "text": "これはrmseだと思う。"
  },
  {
    "start": 88274,
    "end": 88634,
    "text": "そうだね。"
  },
  {
    "start": 88674,
    "end": 89578,
    "text": "二乗平均平方根。"
  },
  {
    "start": 89706,
    "end": 91094,
    "text": "ああ、ログエラーだ。"
  },
  {
    "start": 92034,
    "end": 95574,
    "text": "がゼロということは、この男はなぜか答えを知っているということだ。"
  },
  {
    "start": 95994,
    "end": 99386,
    "text": "やあ、ダルシュ。"
  },
  {
    "start": 99410,
    "end": 100214,
    "text": "調子はどうだい？"
  },
  {
    "start": 102694,
    "end": 105334,
    "text": "でも、そう、だから彼はなんとなく答えを知っている。"
  },
  {
    "start": 105374,
    "end": 117014,
    "text": "彼がどうやってこの点数を獲得したのかは知らないが、本当に、本当に低い点数をつけている他の人たちは、コンペティションに提供されていない外部データを使っているのだと思う。"
  },
  {
    "start": 117174,
    "end": 124158,
    "text": "提供されたデータだけを使いながら、最高のスコアを目指すつもりだ。"
  },
  {
    "start": 124286,
    "end": 126754,
    "text": "どこにあるのかわかりますか？"
  },
  {
    "start": 127974,
    "end": 128414,
    "text": "そうだね。"
  },
  {
    "start": 128454,
    "end": 130114,
    "text": "これらのスコアはすべて良さそうだ。"
  },
  {
    "start": 130954,
    "end": 132794,
    "text": "ここにジャンプがあるようだ。"
  },
  {
    "start": 132834,
    "end": 140898,
    "text": "275位以上のノートブックを見ると、外部データを使用する傾向があることがわかる。"
  },
  {
    "start": 140946,
    "end": 148894,
    "text": "これらのノートブックの1つを見ると、複数のデータソースを使用しており、提供されたデータよりも多くのデータを使用しているプライベートなデータセットがあることがわかる。"
  },
  {
    "start": 149274,
    "end": 155480,
    "text": "そういうことは無視することにして、どこかにたどり着くことだけに集中したい。"
  },
  {
    "start": 155642,
    "end": 165264,
    "text": "もしかしたら、0.11は本当にいいスコアかもしれないし、0.12かもしれない。"
  },
  {
    "start": 165724,
    "end": 167784,
    "text": "よし、ではノートに飛び込もう。"
  },
  {
    "start": 169804,
    "end": 174104,
    "text": "それは良かった。"
  },
  {
    "start": 174964,
    "end": 175988,
    "text": "ありがとう。"
  },
  {
    "start": 176156,
    "end": 180664,
    "text": "それでは、numpyとpandasをインポートして始めよう。"
  },
  {
    "start": 183824,
    "end": 188224,
    "text": "いつものようにpandas readcsvを使ってデータを読み込む。"
  },
  {
    "start": 188384,
    "end": 198724,
    "text": "ここでは2つの異なるデータ・フレームを読み込み、それらをtrain zeroとtest zeroと呼ぶことにする。"
  },
  {
    "start": 199424,
    "end": 207364,
    "text": "通常、私の過去のビデオでは、すべての前処理に1つの関数を使用してきたが、ここではデータを処理しながら進めたいので、それではうまくいかない。"
  },
  {
    "start": 208354,
    "end": 218134,
    "text": "どちらもpandas read CSVを使い、ファイルパスを取得して、こことここに貼り付けます。"
  },
  {
    "start": 219794,
    "end": 222594,
    "text": "これがテストセットと列車セットになる。"
  },
  {
    "start": 222634,
    "end": 231614,
    "text": "また、提出されたサンプルを見てみよう。"
  },
  {
    "start": 232854,
    "end": 234834,
    "text": "トレーニングゼロ、テストゼロ。"
  },
  {
    "start": 236254,
    "end": 238294,
    "text": "すぐにすべての列を見ることができないことに気づいた。"
  },
  {
    "start": 238334,
    "end": 244874,
    "text": "ここで、pandas set option max columns to noneと入力してみよう。"
  },
  {
    "start": 249414,
    "end": 251094,
    "text": "ビデオを気に入ってくれてうれしいよ。"
  },
  {
    "start": 251254,
    "end": 252274,
    "text": "ありがとう。"
  },
  {
    "start": 253134,
    "end": 258314,
    "text": "さて、それでは特徴を見てみよう。"
  },
  {
    "start": 259194,
    "end": 272826,
    "text": "テキストファイルを開いて、これを処理するために必要なステップをすべて書き出してみよう。"
  },
  {
    "start": 272890,
    "end": 275254,
    "text": "少し計画を練る必要がありそうだ。"
  },
  {
    "start": 276394,
    "end": 288594,
    "text": "最初に行うのはデータのクリーニングで、欠損値を埋めたり、すべての列が正しいデータ型であることを確認したりする。"
  },
  {
    "start": 290734,
    "end": 293070,
    "text": "そうすれば、フィーチャーエンジニアリングができるかもしれない。"
  },
  {
    "start": 293142,
    "end": 297834,
    "text": "また、後で変形をフィーチャーするために取っておくかもしれない。"
  },
  {
    "start": 299414,
    "end": 301874,
    "text": "フィーチャー・トランスフォーメーションについては、また後ほど。"
  },
  {
    "start": 302334,
    "end": 309514,
    "text": "また、ある時点で特徴選択を行うことになるが、これはモデルの学習が終わった後に行うことになるだろう。"
  },
  {
    "start": 310594,
    "end": 330490,
    "text": "ある種のエンコーディング・スケーリングが必要になるだろうし、ターゲットの変換もチェックするかもしれない。つまり、回帰タスクでは、特徴に加えて、ターゲットにも何らかの変換が必要になることがある。"
  },
  {
    "start": 330642,
    "end": 334362,
    "text": "ターゲットを詳しく見て、それを解明しようと思う。"
  },
  {
    "start": 334418,
    "end": 345534,
    "text": "それとは別に目標変換が必要な場合は、最適化の段階、つまりモデルの選択に移ることになる。"
  },
  {
    "start": 346194,
    "end": 359290,
    "text": "モデルを選び、ハイパーパラメーターを最適化し、そしてアンサンブルを行う。"
  },
  {
    "start": 359402,
    "end": 362828,
    "text": "これが大会で成功する鍵だ。"
  },
  {
    "start": 363026,
    "end": 365176,
    "text": "これこそが、あなたのモデルを強くするものなのだ。"
  },
  {
    "start": 365280,
    "end": 367444,
    "text": "それについては、後ほど取り上げることにしよう。"
  },
  {
    "start": 368144,
    "end": 370160,
    "text": "まずは掃除から始めよう。"
  },
  {
    "start": 370352,
    "end": 378592,
    "text": "では、提出書類のサンプルも見てみよう。"
  },
  {
    "start": 378648,
    "end": 381912,
    "text": "私たちは、最終的な結果がどうあるべきかを理解している。"
  },
  {
    "start": 382088,
    "end": 385464,
    "text": "これらのIDがあり、これがテストセットのIDである。"
  },
  {
    "start": 385584,
    "end": 391656,
    "text": "冒頭を見ると、すべてのIDが表示され、それぞれのIDに対して予測された販売価格が表示されている。"
  },
  {
    "start": 391760,
    "end": 394484,
    "text": "最後にこのようなデータフレームを提出する。"
  },
  {
    "start": 397864,
    "end": 402924,
    "text": "よし、では列車セットをもう少し見てみよう。"
  },
  {
    "start": 404424,
    "end": 407524,
    "text": "トレインゼロ情報"
  },
  {
    "start": 408864,
    "end": 413048,
    "text": "だから、ユーザー名のマトリックスだけを見ていたいので、これはあまり良くない。"
  },
  {
    "start": 413096,
    "end": 417994,
    "text": "実際に、行を合計して各列の欠損値の総数を求めてみよう。"
  },
  {
    "start": 418144,
    "end": 426246,
    "text": "すぐにはすべての行が見えないので、一番上まで行って行の最大値を設定します。"
  },
  {
    "start": 426310,
    "end": 428790,
    "text": "あと、大きすぎるのも困る。"
  },
  {
    "start": 428822,
    "end": 432914,
    "text": "81か90くらいにしようかな。"
  },
  {
    "start": 435574,
    "end": 436926,
    "text": "よし、これで全員を見ることができる。"
  },
  {
    "start": 437030,
    "end": 440094,
    "text": "ここには欠損値がいくつかある。"
  },
  {
    "start": 440134,
    "end": 442074,
    "text": "絶対に処理しなければならない。"
  },
  {
    "start": 443714,
    "end": 446174,
    "text": "ここで考えてほしいことがある。"
  },
  {
    "start": 446914,
    "end": 449738,
    "text": "実際に訓練セットとテストセットが与えられる。"
  },
  {
    "start": 449906,
    "end": 458574,
    "text": "だから、一般的にコンペティションを扱う場合、テストセットはすべての前処理が終わるまで見ないものと考えるべきだ。"
  },
  {
    "start": 458914,
    "end": 470824,
    "text": "コンペティションに参加する場合、生産目的での実用性というルールは窓から消えてしまう。"
  },
  {
    "start": 471164,
    "end": 473692,
    "text": "我々は与えられたデータに固執するつもりだ。"
  },
  {
    "start": 473828,
    "end": 480544,
    "text": "テストセットから、より有益な情報を引き出すことができると思う。"
  },
  {
    "start": 481244,
    "end": 486984,
    "text": "テストゼロを見てみよう。"
  },
  {
    "start": 488524,
    "end": 490904,
    "text": "これにも欠損値があることがわかるだろう。"
  },
  {
    "start": 491524,
    "end": 497336,
    "text": "欠損値を埋めたい場合、平均値置換をするとしよう。"
  },
  {
    "start": 497360,
    "end": 499224,
    "text": "私たちは列の平均で埋めていた。"
  },
  {
    "start": 499384,
    "end": 510044,
    "text": "もしテストセットと訓練セットを組み合わせれば、テストセットにも有効なデータポイントがあるので、列の平均を計算するときに使える情報が増える。"
  },
  {
    "start": 510744,
    "end": 522010,
    "text": "テストセットに関連するターゲットはわからないが、平均値インピュテーションや欠損値インピュテーションのようなものでは、テストセットを利用できることは非常に有用である。"
  },
  {
    "start": 522202,
    "end": 536614,
    "text": "実際に行うのは、訓練セットとテストセットを組み合わせることで、これは欠損値を埋めるためだけのものだ。"
  },
  {
    "start": 536914,
    "end": 540402,
    "text": "前処理を終えたら、もう一度分割する。"
  },
  {
    "start": 540498,
    "end": 548934,
    "text": "そうすると、トレーニング・テスト・セットが混ざってしまうからだ。"
  },
  {
    "start": 549314,
    "end": 553654,
    "text": "それを連結すれば問題はない。"
  },
  {
    "start": 555354,
    "end": 569002,
    "text": "それでは、pandasのconcatを使って、train zeroとtest zeroをゼロ軸に沿って重ね合わせます。"
  },
  {
    "start": 569098,
    "end": 571186,
    "text": "今これをやると、エラーが出る。"
  },
  {
    "start": 571250,
    "end": 577448,
    "text": "実際にはエラーはないのですが、おそらく、ええ、ご覧の通り、販売価格の列には値がありません。"
  },
  {
    "start": 577576,
    "end": 582804,
    "text": "これから行うのは、連結する前にターゲット・カラムを取り除くことだ。"
  },
  {
    "start": 584304,
    "end": 588088,
    "text": "ターゲットと呼ぼう。"
  },
  {
    "start": 588256,
    "end": 591164,
    "text": "それは列車ゼロ、サブセール価格になるだけだ。"
  },
  {
    "start": 595464,
    "end": 596364,
    "text": "おっと。"
  },
  {
    "start": 598464,
    "end": 606824,
    "text": "見てみると、それはトレインセットだけで、テストセットのターゲットは追加されない。"
  },
  {
    "start": 607364,
    "end": 610108,
    "text": "その一方で、IDを削除したいとも思っている。"
  },
  {
    "start": 610276,
    "end": 617724,
    "text": "テストIDだけは、サンプル提出に必要なので、実際に役に立つことを指摘しておきたい。"
  },
  {
    "start": 617844,
    "end": 621304,
    "text": "私たちが提出するとき、列車のIDはあまり役に立たない。"
  },
  {
    "start": 623804,
    "end": 625424,
    "text": "それを捨てればいい。"
  },
  {
    "start": 627304,
    "end": 628964,
    "text": "テストIDを保存しよう。"
  },
  {
    "start": 629544,
    "end": 636248,
    "text": "これがテスト・ゼロのサブIDになる。"
  },
  {
    "start": 636296,
    "end": 637928,
    "text": "私は列車を作るつもりだ。"
  },
  {
    "start": 638096,
    "end": 641344,
    "text": "訓練ゼロとテストゼロを生データと考えることができる。"
  },
  {
    "start": 641424,
    "end": 645084,
    "text": "となると、生データから次のステップに進むのがトレーニング・ワンだ。"
  },
  {
    "start": 645424,
    "end": 652164,
    "text": "列車1を列車ゼロにし、id列と販売価格列を削除する。"
  },
  {
    "start": 652304,
    "end": 657264,
    "text": "すでにターゲットに保存してあるので、アクセス1から落とすことができる。"
  },
  {
    "start": 657884,
    "end": 666984,
    "text": "テスト1はトレインになる。"
  },
  {
    "start": 668124,
    "end": 673744,
    "text": "そして、train oneとtest oneを連結し、これをdata oneと呼ぶことにする。"
  },
  {
    "start": 674044,
    "end": 676212,
    "text": "今、データはその両方のようなものだ。"
  },
  {
    "start": 676268,
    "end": 677108,
    "text": "我々のすべてのデータだ。"
  },
  {
    "start": 677156,
    "end": 677316,
    "text": "そうだね。"
  },
  {
    "start": 677340,
    "end": 678264,
    "text": "訓練とテスト。"
  },
  {
    "start": 679624,
    "end": 681844,
    "text": "それが終わったらデータを見てみよう。"
  },
  {
    "start": 683704,
    "end": 687160,
    "text": "テスト・カラムはありません。"
  },
  {
    "start": 687312,
    "end": 691524,
    "text": "最後に、ターゲットから与えられる販売価格の欄がない。"
  },
  {
    "start": 693624,
    "end": 693952,
    "text": "いいね？"
  },
  {
    "start": 693968,
    "end": 701524,
    "text": "欠損値を埋めるときに、前処理のためにもっと多くのデータを見ることができるからだ。"
  },
  {
    "start": 702384,
    "end": 702736,
    "text": "いいね？"
  },
  {
    "start": 702760,
    "end": 719944,
    "text": "まずは、データ型を正しく設定し、適切なデータ型を確保することから始めましょう。"
  },
  {
    "start": 721884,
    "end": 734564,
    "text": "データ1を見ると、selectdtypes numpy numberで、すべての数値カラムが得られる。"
  },
  {
    "start": 737344,
    "end": 751044,
    "text": "ここでは、数値としてエンコードされているが、実際にはカテゴリーであるべき特徴を探すことができる。"
  },
  {
    "start": 751704,
    "end": 754324,
    "text": "最初に見たのはMSのサブクラスだった。"
  },
  {
    "start": 755284,
    "end": 756932,
    "text": "これは授業ですよね？"
  },
  {
    "start": 756948,
    "end": 757636,
    "text": "断言できる。"
  },
  {
    "start": 757660,
    "end": 760864,
    "text": "ここでは、データの説明からより多くの情報を得ることができる。"
  },
  {
    "start": 761284,
    "end": 762636,
    "text": "それを引きずるだけだ。"
  },
  {
    "start": 762780,
    "end": 766304,
    "text": "各特徴には、私たちが見ることができる何らかのメタデータが与えられている。"
  },
  {
    "start": 766804,
    "end": 770468,
    "text": "Msのサブクラスは、売却に関与する住居のタイプを識別する。"
  },
  {
    "start": 770516,
    "end": 772116,
    "text": "それぞれがユニークなタイプである。"
  },
  {
    "start": 772180,
    "end": 773664,
    "text": "つまり、カテゴライズされているということだ。"
  },
  {
    "start": 774924,
    "end": 786312,
    "text": "データ1、MSSをコピーしてみよう。"
  },
  {
    "start": 786328,
    "end": 792004,
    "text": "実際には、データ2をデータ1の新しいコピーと呼ぶことにして、ここではデータ2を修正するだけだ。"
  },
  {
    "start": 793584,
    "end": 801884,
    "text": "このカラムは現在整数カラムなので、このように文字列カラムに設定したい。"
  },
  {
    "start": 802384,
    "end": 802736,
    "text": "いいかい？"
  },
  {
    "start": 802760,
    "end": 804016,
    "text": "他の選手も探したい。"
  },
  {
    "start": 804160,
    "end": 808476,
    "text": "これは数値で、間口や面積の条件と同じだ。"
  },
  {
    "start": 808540,
    "end": 809436,
    "text": "これらはすべて数字である。"
  },
  {
    "start": 809540,
    "end": 810944,
    "text": "年も数字である。"
  },
  {
    "start": 813244,
    "end": 816364,
    "text": "私はただ、よりカテゴライズされた特徴を探しているだけだ。"
  },
  {
    "start": 816484,
    "end": 818624,
    "text": "これは面積で、Sfだと思う。"
  },
  {
    "start": 818924,
    "end": 823224,
    "text": "これも数値で、風呂の数。"
  },
  {
    "start": 825564,
    "end": 831900,
    "text": "カウントの列、年の列、そしてメートル法の列がある。"
  },
  {
    "start": 831932,
    "end": 833838,
    "text": "ええ、他には見当たりません。"
  },
  {
    "start": 834036,
    "end": 841534,
    "text": "以前これを見ていたのですが、唯一エンコードされているのは、数値としてエンコードされているカテゴリカルはMSのサブクラスだけだと思います。"
  },
  {
    "start": 842714,
    "end": 847694,
    "text": "文字列と等しくなるように設定すれば十分だろう。"
  },
  {
    "start": 848594,
    "end": 852294,
    "text": "これで欠損値のインピュテーションに移ることができる。"
  },
  {
    "start": 852674,
    "end": 860334,
    "text": "まず第一に、カテゴリカルな欠損値に対処することである。"
  },
  {
    "start": 865864,
    "end": 869408,
    "text": "インピュートができないので、まずこれを行う。"
  },
  {
    "start": 869576,
    "end": 874056,
    "text": "カテゴリーをインプットする唯一の方法は最頻値を使うことである。"
  },
  {
    "start": 874200,
    "end": 876056,
    "text": "手作業でこれをやらなければならない。"
  },
  {
    "start": 876080,
    "end": 881124,
    "text": "インピュテーションを見つけるのに、数字のトリックのようなものは使えない。"
  },
  {
    "start": 882424,
    "end": 885654,
    "text": "そのためには、データの説明をもう一度見なければならない。"
  },
  {
    "start": 885784,
    "end": 887170,
    "text": "しばらく時間がかかるかもしれない。"
  },
  {
    "start": 887202,
    "end": 902298,
    "text": "各特徴を調べて、どのタイミングでモードで埋めるべきか、また特定の特徴、例えばこの特徴の欠落値が実際に意味を持つかどうかを見極めなければならない。"
  },
  {
    "start": 902426,
    "end": 903770,
    "text": "アリアックアクセスがない。"
  },
  {
    "start": 903962,
    "end": 907026,
    "text": "ここで欠落している値は、実際には有効な値である。"
  },
  {
    "start": 907090,
    "end": 913658,
    "text": "なぜなら、欠落値には実際に意味があると規定されているからだ。"
  },
  {
    "start": 913826,
    "end": 923094,
    "text": "このような特徴の場合、欠損値をモードで埋めるのではなく、欠損値を独自の値に設定します。"
  },
  {
    "start": 924674,
    "end": 929534,
    "text": "だから、ここでやらなければならないことは2つある。"
  },
  {
    "start": 930034,
    "end": 942424,
    "text": "列モードを使ってインピュートし、定数値を使ってインピュートしなければならない。"
  },
  {
    "start": 944324,
    "end": 945984,
    "text": "まずはこれを使うよ。"
  },
  {
    "start": 947084,
    "end": 956384,
    "text": "それぞれのカラムに対してforループを作り、ここでカラムを指定する。"
  },
  {
    "start": 958724,
    "end": 962532,
    "text": "それぞれについて、それは何なのか？"
  },
  {
    "start": 962548,
    "end": 964024,
    "text": "我々が扱っている2つのデータ。"
  },
  {
    "start": 968304,
    "end": 972728,
    "text": "別のメソッドを使って、カラムにaを記入する。"
  },
  {
    "start": 972856,
    "end": 982284,
    "text": "定数値については、すべて同じ値を使ってもいいと思う。"
  },
  {
    "start": 982944,
    "end": 987944,
    "text": "欠落した値が実際に意味を持つ場合には、何も記入しない。"
  },
  {
    "start": 988104,
    "end": 993564,
    "text": "ナに意味が与えられているものを、もうひとつ探してみよう。"
  },
  {
    "start": 994344,
    "end": 994856,
    "text": "そう、ここだよ。"
  },
  {
    "start": 994880,
    "end": 996640,
    "text": "ナは地下室がないという意味だ。"
  },
  {
    "start": 996832,
    "end": 999844,
    "text": "ベースメントなしを \"なし \"とエンコードする。"
  },
  {
    "start": 1000264,
    "end": 1004728,
    "text": "そうすることで、NAの欠落はなくなる。"
  },
  {
    "start": 1004816,
    "end": 1010016,
    "text": "しかし、これ以外のもの、例えばこれにはNaの仕様がない。"
  },
  {
    "start": 1010120,
    "end": 1015484,
    "text": "この列に欠損値があった場合、モード値で埋めることになる。"
  },
  {
    "start": 1015904,
    "end": 1016824,
    "text": "意味があるのか？"
  },
  {
    "start": 1016904,
    "end": 1019564,
    "text": "何か質問があれば、遠慮なくチャットで聞いてほしい。"
  },
  {
    "start": 1021764,
    "end": 1028824,
    "text": "今回は2つのサブカラムモードでデータを埋める。"
  },
  {
    "start": 1029684,
    "end": 1034144,
    "text": "モードが複数の値を返す可能性があるため、ここでは添え字をゼロにする。"
  },
  {
    "start": 1034924,
    "end": 1037556,
    "text": "よし、ではこの2つのリストを入力しよう。"
  },
  {
    "start": 1037620,
    "end": 1040864,
    "text": "すべてのカラムを見ながら入力していく。"
  },
  {
    "start": 1042004,
    "end": 1049244,
    "text": "イズナサムのデータを見てみよう。"
  },
  {
    "start": 1051224,
    "end": 1057592,
    "text": "実際には、あるカラムに少なくとも1つの欠損値があるかどうかを調べるだけだ。"
  },
  {
    "start": 1057688,
    "end": 1066152,
    "text": "これがtrue falseなら、それをサブとして、データ2のインデクサーとして使おう。"
  },
  {
    "start": 1066328,
    "end": 1074334,
    "text": "すべての行を対象とし、この条件に一致する列だけを対象とする。"
  },
  {
    "start": 1075874,
    "end": 1079826,
    "text": "カラムを入力すれば、そのカラムのリストだけを得ることができる。"
  },
  {
    "start": 1080010,
    "end": 1086894,
    "text": "これらの列をそれぞれ見て、少なくとも1つの欠損値がある列を整理してみよう。"
  },
  {
    "start": 1087794,
    "end": 1092414,
    "text": "ああ、これはオブジェクト・カラムにだけやるべきことなんだ。"
  },
  {
    "start": 1093194,
    "end": 1095906,
    "text": "そうしよう"
  },
  {
    "start": 1095930,
    "end": 1100284,
    "text": "データ2ドットセレクトdtypesオブジェクト。"
  },
  {
    "start": 1101704,
    "end": 1104844,
    "text": "さて、ここに欠損値を持つすべてのオブジェクト・カラムがある。"
  },
  {
    "start": 1107184,
    "end": 1111604,
    "text": "そのひとつひとつに目を通し、データの説明をチェックして、どうすべきかを考えよう。"
  },
  {
    "start": 1114064,
    "end": 1114656,
    "text": "さん。"
  },
  {
    "start": 1114680,
    "end": 1116204,
    "text": "ゾーニングについては、すでに検討した。"
  },
  {
    "start": 1116824,
    "end": 1118152,
    "text": "ここが最初だよ。"
  },
  {
    "start": 1118288,
    "end": 1118560,
    "text": "実はね。"
  },
  {
    "start": 1118592,
    "end": 1119768,
    "text": "いや、それは違う。"
  },
  {
    "start": 1119936,
    "end": 1120296,
    "text": "オーケー。"
  },
  {
    "start": 1120320,
    "end": 1120576,
    "text": "さん。"
  },
  {
    "start": 1120600,
    "end": 1124922,
    "text": "ゾーニングは欠落値に対して特別な意味を持たない。"
  },
  {
    "start": 1125098,
    "end": 1126026,
    "text": "さんを連れて行くつもりだ。"
  },
  {
    "start": 1126050,
    "end": 1131254,
    "text": "ゾーニングを行い、モード・インピュートの列に入れる。"
  },
  {
    "start": 1133794,
    "end": 1135170,
    "text": "そしてアリだ。"
  },
  {
    "start": 1135322,
    "end": 1137018,
    "text": "アリはこっちで探そう。"
  },
  {
    "start": 1137106,
    "end": 1139770,
    "text": "ナに特定の意味が与えられているのがわかるだろう。"
  },
  {
    "start": 1139922,
    "end": 1144854,
    "text": "Aliカラムを定数値インピュートのカラムに入れる。"
  },
  {
    "start": 1147474,
    "end": 1153572,
    "text": "この場合、ユーティリティがあり、n aの値を持たない。"
  },
  {
    "start": 1153668,
    "end": 1158384,
    "text": "モード・インピュートのカラムにもう一度それを入れる。"
  },
  {
    "start": 1159524,
    "end": 1163704,
    "text": "次にエクステリア・ファースト、エクステリア・セカンド。"
  },
  {
    "start": 1164684,
    "end": 1168544,
    "text": "エクステリア・ファーストにはミッシングの値がない。"
  },
  {
    "start": 1169844,
    "end": 1170756,
    "text": "エクステリア・セカンド。"
  },
  {
    "start": 1170820,
    "end": 1172164,
    "text": "また、ミッシングの値もない。"
  },
  {
    "start": 1172244,
    "end": 1175664,
    "text": "いずれもモード帰属となる。"
  },
  {
    "start": 1176664,
    "end": 1182044,
    "text": "こことここに貼ってくれ。"
  },
  {
    "start": 1183744,
    "end": 1189444,
    "text": "そうですね、マス、石積みのベニヤタイプだと思います。"
  },
  {
    "start": 1193664,
    "end": 1195044,
    "text": "ここから下を検索"
  },
  {
    "start": 1199704,
    "end": 1202516,
    "text": "ここでは石積みのベニヤタイプだ。"
  },
  {
    "start": 1202660,
    "end": 1203588,
    "text": "noneの値がある。"
  },
  {
    "start": 1203636,
    "end": 1205224,
    "text": "それは欠損値ではない。"
  },
  {
    "start": 1206124,
    "end": 1207852,
    "text": "欠けた値に意味はない。"
  },
  {
    "start": 1207908,
    "end": 1210384,
    "text": "このカラムのモードで埋めたい。"
  },
  {
    "start": 1212644,
    "end": 1216664,
    "text": "じゃあ、ここに貼っておいて。"
  },
  {
    "start": 1219444,
    "end": 1227952,
    "text": "よし、ここでの地下室クオリティは地下室クオリティだ。"
  },
  {
    "start": 1228048,
    "end": 1229904,
    "text": "地下のクオリティには意味がある。"
  },
  {
    "start": 1230024,
    "end": 1236544,
    "text": "もし、地下室の質の欄の値が欠けていれば、実際には地下室がないことを意味するので、これを「なし」とエンコードする。"
  },
  {
    "start": 1236624,
    "end": 1239724,
    "text": "これは一定の帰属値である。"
  },
  {
    "start": 1240264,
    "end": 1242960,
    "text": "地下室コンディションもある。"
  },
  {
    "start": 1243032,
    "end": 1244792,
    "text": "また、ナは地下室がないことを意味する。"
  },
  {
    "start": 1244888,
    "end": 1251804,
    "text": "実際、これらの地下室の柱はすべて、NAの意味として地下室がないことがわかる。"
  },
  {
    "start": 1252524,
    "end": 1256068,
    "text": "さあ、それを埋めていこう。"
  },
  {
    "start": 1256156,
    "end": 1266084,
    "text": "地下室の質は、地下室の状態も加えて、一定の推定地下室露出を得る。"
  },
  {
    "start": 1266204,
    "end": 1271268,
    "text": "地下のフィンタイプも。"
  },
  {
    "start": 1271356,
    "end": 1272276,
    "text": "ここで再確認してほしい。"
  },
  {
    "start": 1272300,
    "end": 1274244,
    "text": "ナはまだ地下室がないことを意味する。"
  },
  {
    "start": 1274364,
    "end": 1275624,
    "text": "ここに書いておこう。"
  },
  {
    "start": 1277604,
    "end": 1281124,
    "text": "地下室はない。"
  },
  {
    "start": 1283144,
    "end": 1288604,
    "text": "では、次は電気部門だ。"
  },
  {
    "start": 1290144,
    "end": 1293064,
    "text": "とても面倒なことだとは思うが、このプロセスのとても重要な部分だ。"
  },
  {
    "start": 1293144,
    "end": 1295164,
    "text": "私たちは間違った価値で満たされたくはない。"
  },
  {
    "start": 1295704,
    "end": 1304964,
    "text": "電気的な列はn aには意味がないので、ここではモードで埋めることにする。"
  },
  {
    "start": 1310284,
    "end": 1315580,
    "text": "その後にはキッチンの品質があるが、これも意味がない。"
  },
  {
    "start": 1315692,
    "end": 1317344,
    "text": "それをモードで埋める。"
  },
  {
    "start": 1319804,
    "end": 1321144,
    "text": "それから機能的だ。"
  },
  {
    "start": 1323444,
    "end": 1328064,
    "text": "これも意味がないので、モードで埋まる。"
  },
  {
    "start": 1330164,
    "end": 1331116,
    "text": "あと少しで終わる。"
  },
  {
    "start": 1331140,
    "end": 1332384,
    "text": "暖炉の質。"
  },
  {
    "start": 1336194,
    "end": 1339314,
    "text": "これにはn aの意味があり、暖炉はない。"
  },
  {
    "start": 1339434,
    "end": 1345186,
    "text": "これはガレージのタイプで、ここで常にインプットされる。"
  },
  {
    "start": 1345210,
    "end": 1347562,
    "text": "ここにはたくさんのガレージの柱がある。"
  },
  {
    "start": 1347738,
    "end": 1348666,
    "text": "これがガレージタイプだ。"
  },
  {
    "start": 1348690,
    "end": 1352654,
    "text": "n aに意味があることがわかるだろう。"
  },
  {
    "start": 1352994,
    "end": 1356786,
    "text": "また、ガレージの仕上げ、ガレージの品質、ガレージのコンディションもあります。"
  },
  {
    "start": 1356970,
    "end": 1357898,
    "text": "それを見てみよう。"
  },
  {
    "start": 1357946,
    "end": 1361966,
    "text": "どれも欠落した価値に対してこのような意味を持っていると思う。"
  },
  {
    "start": 1362150,
    "end": 1362558,
    "text": "そうだね。"
  },
  {
    "start": 1362606,
    "end": 1365714,
    "text": "我々はそのすべてを常にインプットする。"
  },
  {
    "start": 1366534,
    "end": 1375154,
    "text": "ガレージのタイプは、仕上げの質やコンディションと同様にここに入る。"
  },
  {
    "start": 1385514,
    "end": 1386386,
    "text": "分かった。"
  },
  {
    "start": 1386570,
    "end": 1388290,
    "text": "今はかつての機能だけだ。"
  },
  {
    "start": 1388482,
    "end": 1393162,
    "text": "pool qc、これはプールの質で、naはプールがないことを意味する。"
  },
  {
    "start": 1393218,
    "end": 1395494,
    "text": "それもまた一定のインピュテーションである。"
  },
  {
    "start": 1399154,
    "end": 1402666,
    "text": "それならフェンスがあるし、ナはフェンスがないことを意味する。"
  },
  {
    "start": 1402690,
    "end": 1409530,
    "text": "これもコンスタントにインプットされている。"
  },
  {
    "start": 1409722,
    "end": 1410894,
    "text": "それを見てみよう。"
  },
  {
    "start": 1412014,
    "end": 1413034,
    "text": "これだ。"
  },
  {
    "start": 1413334,
    "end": 1414582,
    "text": "ナ」は「なし」を意味する。"
  },
  {
    "start": 1414678,
    "end": 1418714,
    "text": "それもまた、一定の帰属となる。"
  },
  {
    "start": 1420014,
    "end": 1425326,
    "text": "セイルタイプとセールタイプだ。"
  },
  {
    "start": 1425350,
    "end": 1426902,
    "text": "欠損値には意味がない。"
  },
  {
    "start": 1426958,
    "end": 1429514,
    "text": "セイルタイプはモードインプットされる。"
  },
  {
    "start": 1429894,
    "end": 1441584,
    "text": "さて、やっと終わったので、それぞれの適切な詰め方にビン詰めして、今度はこれを試してみよう。"
  },
  {
    "start": 1443084,
    "end": 1444264,
    "text": "これを実行する。"
  },
  {
    "start": 1445004,
    "end": 1446184,
    "text": "エラーが出る。"
  },
  {
    "start": 1446484,
    "end": 1448544,
    "text": "ああ、コンマを忘れていた。"
  },
  {
    "start": 1449924,
    "end": 1450704,
    "text": "そうだね。"
  },
  {
    "start": 1452724,
    "end": 1456908,
    "text": "では、ノートを最初から読み直してみよう。"
  },
  {
    "start": 1456956,
    "end": 1457156,
    "text": "そうだね。"
  },
  {
    "start": 1457180,
    "end": 1460624,
    "text": "よし、では次にイスナを見てみよう。"
  },
  {
    "start": 1461964,
    "end": 1462924,
    "text": "Jbdata2だ。"
  },
  {
    "start": 1462964,
    "end": 1467724,
    "text": "そうだね、そして、そのほとんどに手を打った。"
  },
  {
    "start": 1468224,
    "end": 1482324,
    "text": "対象列のISNAを見ると、これは先ほど作業したものであるが、同様に列を横断して合計すると、対象列、カテゴリー列には欠損値はない。"
  },
  {
    "start": 1482784,
    "end": 1487848,
    "text": "さて、数字の列を見てみると、欠損値がいくつかある。"
  },
  {
    "start": 1487936,
    "end": 1489404,
    "text": "それを次に扱おう。"
  },
  {
    "start": 1490984,
    "end": 1499764,
    "text": "新しいコピー、データ3を作り、それをデータ2のコピーとし、数値の欠損値に対処しよう。"
  },
  {
    "start": 1503064,
    "end": 1514008,
    "text": "それでは、数値の場合は平均値で計算することもできますが、実はもっといい方法があると思います。"
  },
  {
    "start": 1514136,
    "end": 1519450,
    "text": "残りのデータを使うことで、よりインテリジェントな方法でインピュートを行うことができる。"
  },
  {
    "start": 1519642,
    "end": 1529654,
    "text": "テストデータがあるのだから、KNnインピュテーションを使うことができる。"
  },
  {
    "start": 1529994,
    "end": 1540374,
    "text": "ニーレスト・ネイバーズ・インピュテーションは、基本的に欠損値がある場合、その周辺の例を見て、その値がどうあるべきかを割り出す。"
  },
  {
    "start": 1542694,
    "end": 1547502,
    "text": "ここではknnリグレッサーを使用する。"
  },
  {
    "start": 1547558,
    "end": 1552554,
    "text": "SklearnからKNn imputerオブジェクトがあることは知っているが、実際にリグレッサーを使いたい。"
  },
  {
    "start": 1553014,
    "end": 1559474,
    "text": "sklearn dot neighborsからkneighbors regressorをインポートする。"
  },
  {
    "start": 1560254,
    "end": 1561914,
    "text": "どうやるか、お見せしましょう。"
  },
  {
    "start": 1564214,
    "end": 1566326,
    "text": "これらの値を見てみよう。"
  },
  {
    "start": 1566350,
    "end": 1568934,
    "text": "データ3は符号和ではない。"
  },
  {
    "start": 1570354,
    "end": 1572674,
    "text": "実際に数値だけを見てみよう。"
  },
  {
    "start": 1572754,
    "end": 1578294,
    "text": "dtypesを選択 numpy ドット数、ドットはドット和。"
  },
  {
    "start": 1578594,
    "end": 1581214,
    "text": "実際、この中にはそれほど多くはない。"
  },
  {
    "start": 1582034,
    "end": 1586294,
    "text": "覚えておいてほしいのは、これは訓練セットとテストセットを1つにまとめたもので、データ3である。"
  },
  {
    "start": 1587394,
    "end": 1591946,
    "text": "私たちのやりたいこと、私たちの持っているものを見てみよう。"
  },
  {
    "start": 1592130,
    "end": 1595694,
    "text": "さて、トレーニングセットとテストセットだ。"
  },
  {
    "start": 1595814,
    "end": 1598870,
    "text": "この目的のためには、ターゲットのことは気にする必要はないんだ。"
  },
  {
    "start": 1598982,
    "end": 1604894,
    "text": "我々は訓練セットのターゲット例しか持っていないが、このインピュテーションには使わないので、それは問題ではない。"
  },
  {
    "start": 1605054,
    "end": 1613434,
    "text": "訓練セットとテストセットの両方が、平均値、あるいは平均値ではなくknn値をインプットするために使える有用な情報を持っている。"
  },
  {
    "start": 1614614,
    "end": 1619234,
    "text": "ここでは隣人のリグレッサーを作成する。"
  },
  {
    "start": 1622234,
    "end": 1627774,
    "text": "これは、周囲のデータポイントを見て、それに基づいて記入することで機能する。"
  },
  {
    "start": 1628714,
    "end": 1632014,
    "text": "kとnのインピュート関数を作ったらどうだろう。"
  },
  {
    "start": 1633354,
    "end": 1642094,
    "text": "これはデータフレームとカラムを受け取り、カラムの欠損値を埋めた同じデータフレームを返します。"
  },
  {
    "start": 1642554,
    "end": 1646274,
    "text": "まずはデータフレームのコピーを作成し、その場で変更しないようにする。"
  },
  {
    "start": 1647774,
    "end": 1655270,
    "text": "データフレームを操作している場合、最近傍を計算するために使用できるのは数値データだけです。"
  },
  {
    "start": 1655302,
    "end": 1655874,
    "text": "そうだろう？"
  },
  {
    "start": 1657174,
    "end": 1667754,
    "text": "この数値DfはDf, select dtypes numpy numberとなる。"
  },
  {
    "start": 1669974,
    "end": 1672916,
    "text": "これは数字の列だけになりますね？"
  },
  {
    "start": 1673020,
    "end": 1684268,
    "text": "ここでこれを返して、KNn imputeを呼び出すとしたら？"
  },
  {
    "start": 1684276,
    "end": 1684700,
    "text": "データ3。"
  },
  {
    "start": 1684732,
    "end": 1686988,
    "text": "データ3に入った。"
  },
  {
    "start": 1687036,
    "end": 1696388,
    "text": "例えば、車庫入れをするとしよう。"
  },
  {
    "start": 1696556,
    "end": 1697508,
    "text": "これはただ返されるだけだ。"
  },
  {
    "start": 1697596,
    "end": 1701344,
    "text": "現在は、データ3のすべての数値列を返すだけだ。"
  },
  {
    "start": 1702124,
    "end": 1705876,
    "text": "これらは、kとnのインピュテーションに実際に使用できる唯一の列である。"
  },
  {
    "start": 1705940,
    "end": 1706544,
    "text": "そうだね。"
  },
  {
    "start": 1707804,
    "end": 1712144,
    "text": "どうやってやるんだ？"
  },
  {
    "start": 1712804,
    "end": 1717836,
    "text": "ここには欠損値のある列があることを考慮しなければならない。"
  },
  {
    "start": 1717940,
    "end": 1723344,
    "text": "KNNインピュテーションを行う際には、欠損値の列は使いたくない。"
  },
  {
    "start": 1725344,
    "end": 1734008,
    "text": "数字以外のカラムを作成する。"
  },
  {
    "start": 1734056,
    "end": 1736392,
    "text": "これらは欠損値のない列である。"
  },
  {
    "start": 1736568,
    "end": 1741904,
    "text": "データフレームを取り出し、\"isna sum \"とタイプすれば、その値が得られる。"
  },
  {
    "start": 1742064,
    "end": 1746724,
    "text": "これは各列の欠損値の合計を返す。"
  },
  {
    "start": 1747504,
    "end": 1749712,
    "text": "各1はゼロより大きいか？"
  },
  {
    "start": 1749768,
    "end": 1752084,
    "text": "つまり、少なくとも1つの値が欠けている？"
  },
  {
    "start": 1752894,
    "end": 1764206,
    "text": "実際、より良いのは、これがゼロに等しいかどうか、つまり欠損値がないかどうかを尋ねてから、これを使用することです。ここで、これがゼロに等しいかどうかを尋ねると、欠損値がない場合はどこでも真偽値が得られます。"
  },
  {
    "start": 1764350,
    "end": 1767474,
    "text": "そして、それをデータ3のインデクサーとして使うことができる。"
  },
  {
    "start": 1767854,
    "end": 1769514,
    "text": "ごめん、またこうやってやらなきゃいけないんだ。"
  },
  {
    "start": 1773974,
    "end": 1774846,
    "text": "ああ、そうか。"
  },
  {
    "start": 1774870,
    "end": 1778988,
    "text": "それは、numpyの数字列を見ないようにしようということだからだ。"
  },
  {
    "start": 1779156,
    "end": 1779516,
    "text": "オーケー。"
  },
  {
    "start": 1779540,
    "end": 1784348,
    "text": "こうすると、欠損値を含まない列だけが得られることになる。"
  },
  {
    "start": 1784516,
    "end": 1785984,
    "text": "それが私たちがここで望んでいることだ。"
  },
  {
    "start": 1786844,
    "end": 1789064,
    "text": "しかし、我々はこれを数値のdfで行うべきである。"
  },
  {
    "start": 1790324,
    "end": 1792664,
    "text": "ここではこれをインデクサーとして使用する。"
  },
  {
    "start": 1795724,
    "end": 1798380,
    "text": "次に、カラム名を取得するためにカラムを入力する。"
  },
  {
    "start": 1798452,
    "end": 1801984,
    "text": "non-na列は、欠損値のない列である。"
  },
  {
    "start": 1804224,
    "end": 1809324,
    "text": "数字データ、数値データ、そして欠損値のない列がある。"
  },
  {
    "start": 1809624,
    "end": 1813724,
    "text": "さて、このカラムをターゲットにしたい。"
  },
  {
    "start": 1815944,
    "end": 1818512,
    "text": "ナターゲットと呼んだ方がいいかもしれない。"
  },
  {
    "start": 1818568,
    "end": 1824764,
    "text": "これが、欠損値を埋めたいターゲット、列である。"
  },
  {
    "start": 1826144,
    "end": 1835924,
    "text": "これからやることは、残りのすべてのデータをこのデータの隣人として使うことだ。"
  },
  {
    "start": 1837344,
    "end": 1841764,
    "text": "では、この一時的な列車テストセットを作成しよう。"
  },
  {
    "start": 1842984,
    "end": 1852160,
    "text": "Yトレインは、ターゲットの欠落していないすべての値になりますね。"
  },
  {
    "start": 1852192,
    "end": 1856924,
    "text": "欠落していない列のすべての値をY列車として使用する。"
  },
  {
    "start": 1858164,
    "end": 1879628,
    "text": "というのも、実際に扱うのは数値のDFだけであり、Natargetをターゲットにするつもりだからだ。"
  },
  {
    "start": 1879676,
    "end": 1879884,
    "text": "そうだね。"
  },
  {
    "start": 1879924,
    "end": 1887150,
    "text": "じゃあ、考えさせてくれ。"
  },
  {
    "start": 1887182,
    "end": 1889074,
    "text": "まだやらないほうがいいかもしれない。"
  },
  {
    "start": 1892214,
    "end": 1895114,
    "text": "このプロジェクトで試せる、事前に訓練されたモデルにはどのようなものがありますか？"
  },
  {
    "start": 1895654,
    "end": 1898902,
    "text": "このプロジェクトでは、事前に訓練されたモデルを使うことはないだろう。"
  },
  {
    "start": 1899078,
    "end": 1906114,
    "text": "画像分類で何らかのディープラーニングを行っているのであれば、事前に訓練されたモデルは本当に役に立つ。"
  },
  {
    "start": 1906534,
    "end": 1910274,
    "text": "この場合は、まだモデル選択の段階ではない。"
  },
  {
    "start": 1910694,
    "end": 1912754,
    "text": "その話をする前に待とう。"
  },
  {
    "start": 1914974,
    "end": 1923954,
    "text": "では、NAターゲットで欠落していないすべての値を取得する。"
  },
  {
    "start": 1924934,
    "end": 1930634,
    "text": "ちょっとわかりにくいので、まずここで実際にやってみよう。"
  },
  {
    "start": 1931334,
    "end": 1933194,
    "text": "我々は3つのデータを持っている。"
  },
  {
    "start": 1933934,
    "end": 1935194,
    "text": "どちらを使うべきか？"
  },
  {
    "start": 1936234,
    "end": 1938694,
    "text": "では、欠損値を含むものを見つけなければならない。"
  },
  {
    "start": 1942674,
    "end": 1944282,
    "text": "よし、間口はどうだ？"
  },
  {
    "start": 1944458,
    "end": 1946010,
    "text": "これはこの上だ。"
  },
  {
    "start": 1946162,
    "end": 1947770,
    "text": "間口は我々のターゲットになる。"
  },
  {
    "start": 1947842,
    "end": 1950694,
    "text": "これは欠損値を埋めたい列である。"
  },
  {
    "start": 1951314,
    "end": 1952654,
    "text": "見てみよう。"
  },
  {
    "start": 1953034,
    "end": 1960894,
    "text": "その場合、欠損値を持つ行だけが欲しいので、isnaと入力すれば、この列だけのtrue falseを得ることができる。"
  },
  {
    "start": 1962294,
    "end": 1972834,
    "text": "そして、これを行のインデクサーとして使い、間口を列のインデクサーとして使うことで、3つのデータを同じように扱うことができる。"
  },
  {
    "start": 1973654,
    "end": 1977110,
    "text": "欠損値を持つすべての行を得ることができる。"
  },
  {
    "start": 1977222,
    "end": 1983594,
    "text": "実際には、欠損値を得るためにtrueに等しくし、欠損していない値を得るためにfalseに等しくすることができる。"
  },
  {
    "start": 1984014,
    "end": 1990850,
    "text": "ということは、ここがYトレインということになる。"
  },
  {
    "start": 1990962,
    "end": 2000626,
    "text": "データ3の代わりに数値DFを使用する。"
  },
  {
    "start": 2000770,
    "end": 2003054,
    "text": "間口の代わりにナターゲットを使う。"
  },
  {
    "start": 2005394,
    "end": 2012930,
    "text": "これらは、私たちのNaターゲットのデータポイントのうち、欠落していないすべての例となる。"
  },
  {
    "start": 2013042,
    "end": 2014330,
    "text": "それがY列車になるんだ。"
  },
  {
    "start": 2014362,
    "end": 2020134,
    "text": "これは、これから訓練するリグレッサーのラベルやターゲット・データのようなものだ。"
  },
  {
    "start": 2020554,
    "end": 2022194,
    "text": "それからXトレインを作る。"
  },
  {
    "start": 2022354,
    "end": 2028814,
    "text": "これが、インピュートの値を予測するためにモデルが使用する残りのデータとなる。"
  },
  {
    "start": 2029474,
    "end": 2040574,
    "text": "ここで、X列車は、同じY列車の例に対する他のすべての列となる。"
  },
  {
    "start": 2042184,
    "end": 2054044,
    "text": "ytrain indexは必要なインデックスを与えてくれるので、残りのデータのインデクサーとしてytrain indexを使うことができる。"
  },
  {
    "start": 2057064,
    "end": 2061832,
    "text": "ここでやったことをそのまま使ったほうがいいのかなと思っているんだ。"
  },
  {
    "start": 2061928,
    "end": 2064164,
    "text": "その方が混乱しないと思うんだ。"
  },
  {
    "start": 2065464,
    "end": 2066604,
    "text": "そうしよう。"
  },
  {
    "start": 2068623,
    "end": 2070423,
    "text": "我々はまだこの価値を求めているんだ。"
  },
  {
    "start": 2070503,
    "end": 2074283,
    "text": "これらは欠損値のないすべての値である。"
  },
  {
    "start": 2074943,
    "end": 2076883,
    "text": "ターゲット欄に"
  },
  {
    "start": 2080063,
    "end": 2081439,
    "text": "これをコピーすればいい。"
  },
  {
    "start": 2081471,
    "end": 2089363,
    "text": "ここでの唯一の違いは、カラムがナターゲットになる代わりに、残りのすべてのカラムがナターゲットになることだろう。"
  },
  {
    "start": 2091343,
    "end": 2099333,
    "text": "この場合は、Na以外のカラムに由来する。"
  },
  {
    "start": 2101673,
    "end": 2110653,
    "text": "なぜなら、\"Na \"でないカラムに \"Na \"のターゲットも含めたくないからだ。"
  },
  {
    "start": 2112953,
    "end": 2117933,
    "text": "実際には、そこに欠けている値があるので、含まれていないとは言えない。"
  },
  {
    "start": 2118374,
    "end": 2121590,
    "text": "さて、ここで列はナでない列である。"
  },
  {
    "start": 2121622,
    "end": 2123366,
    "text": "ここでは、我々のカラムがNaのターゲットである。"
  },
  {
    "start": 2123470,
    "end": 2126014,
    "text": "となると、私たちのXテストもまったく同じことになる。"
  },
  {
    "start": 2126054,
    "end": 2129274,
    "text": "ただし、これらはすべて欠番がある例である。"
  },
  {
    "start": 2129934,
    "end": 2133846,
    "text": "少しわかりにくいと思うが、その方法を見てみよう。"
  },
  {
    "start": 2133950,
    "end": 2135314,
    "text": "これがxtestだ。"
  },
  {
    "start": 2138414,
    "end": 2140830,
    "text": "オーケー、これを再チェックして、すべてが機能していることを確認したい。"
  },
  {
    "start": 2140902,
    "end": 2142110,
    "text": "これはいいことだと思う。"
  },
  {
    "start": 2142262,
    "end": 2148534,
    "text": "y trainは、欠損値のないNaターゲットのすべての値である。"
  },
  {
    "start": 2149514,
    "end": 2156534,
    "text": "X訓練は、Na対象について欠損値を持たない残りのデータのすべての値である。"
  },
  {
    "start": 2157154,
    "end": 2163214,
    "text": "xテストは、natargetに欠損値がある残りのすべてのデータである。"
  },
  {
    "start": 2164874,
    "end": 2169728,
    "text": "では、リグレッサーを作りましょう。"
  },
  {
    "start": 2169826,
    "end": 2171904,
    "text": "それはニーバーのリグレッサーになる。"
  },
  {
    "start": 2176404,
    "end": 2180100,
    "text": "XトレインでKnnフィットと呼ぶことにしよう。"
  },
  {
    "start": 2180132,
    "end": 2181064,
    "text": "Y列車。"
  },
  {
    "start": 2182204,
    "end": 2188060,
    "text": "ということは、我々がインプットしようとしている値は、予測値から来ていることになる。"
  },
  {
    "start": 2188252,
    "end": 2194452,
    "text": "yPredはXテストでのknn予測になる。"
  },
  {
    "start": 2194628,
    "end": 2197504,
    "text": "これがインピュテーションとして使用する値である。"
  },
  {
    "start": 2199144,
    "end": 2211644,
    "text": "Dfと呼ばれる元のデータ・フレームを取り出し、インデックスをロードする。"
  },
  {
    "start": 2212024,
    "end": 2214204,
    "text": "これを見てみよう。"
  },
  {
    "start": 2216464,
    "end": 2219096,
    "text": "これは今、Y列車だ。"
  },
  {
    "start": 2219200,
    "end": 2220672,
    "text": "Yトレインはこんな感じ。"
  },
  {
    "start": 2220808,
    "end": 2230384,
    "text": "これをtrueに変更すると、natargetに含まれる値で欠損値があるものはすべてtrueになる。"
  },
  {
    "start": 2231004,
    "end": 2233784,
    "text": "さて、数値のDfをDFに変えてみた。"
  },
  {
    "start": 2235764,
    "end": 2238984,
    "text": "これは実際のデータフレームを修正する。"
  },
  {
    "start": 2240004,
    "end": 2251120,
    "text": "これらの値をyPredと等しく設定すれば、基本的に、最後に導き出した予測を使って、NAターゲットの欠損値をすべて埋めることになる。"
  },
  {
    "start": 2251152,
    "end": 2252324,
    "text": "DFに戻る。"
  },
  {
    "start": 2252704,
    "end": 2255528,
    "text": "あまり混乱させないでほしい。"
  },
  {
    "start": 2255656,
    "end": 2256496,
    "text": "試してみよう。"
  },
  {
    "start": 2256520,
    "end": 2263880,
    "text": "さて、車庫の建設年の欄だけを使ってこれを実行すると、もはや何もないはずである。"
  },
  {
    "start": 2263992,
    "end": 2266004,
    "text": "実際には、土地の間口を使ってみよう。"
  },
  {
    "start": 2267424,
    "end": 2280166,
    "text": "データ3の \"isa sum \"を見ると、486の値が欠落していることがわかる。"
  },
  {
    "start": 2280310,
    "end": 2291514,
    "text": "isnaの合計を確認すると、土地の間口の値が埋められており、基本的に特徴空間の周囲のデータを使って埋められていることがわかります。"
  },
  {
    "start": 2293014,
    "end": 2296822,
    "text": "それでは、すべての数値に対してこの操作を行おう。"
  },
  {
    "start": 2296918,
    "end": 2302146,
    "text": "ただ、ノートを少しきれいにするだけだ。"
  },
  {
    "start": 2302190,
    "end": 2305522,
    "text": "残りの欠損値を見てみよう。"
  },
  {
    "start": 2305698,
    "end": 2307174,
    "text": "欠測値の列。"
  },
  {
    "start": 2309634,
    "end": 2311534,
    "text": "あ、ごめん、×じゃなくてデータ3ね。"
  },
  {
    "start": 2313034,
    "end": 2320294,
    "text": "少なくとも1つの欠損値があるものをすべて調べ、これをデータ3列のインデクサーとして使おう。"
  },
  {
    "start": 2321834,
    "end": 2327654,
    "text": "ここにあるのは、欠損値を持つすべての数値変数である。"
  },
  {
    "start": 2327964,
    "end": 2338144,
    "text": "このリストのカラムのために、ちょっときれいにインデントしてみよう。"
  },
  {
    "start": 2351244,
    "end": 2375644,
    "text": "それぞれの列について、データ3を取り出し、列を取り出し、データ3をすべてkNNインピュートに等しく設定する。"
  },
  {
    "start": 2376024,
    "end": 2383164,
    "text": "これは、このKNNインピュテーション戦略を用いて、残りの各数値変数の欠損値をすべて埋めるだけである。"
  },
  {
    "start": 2383854,
    "end": 2385750,
    "text": "を実行し、データ3を見る。"
  },
  {
    "start": 2385782,
    "end": 2391914,
    "text": "行列を作り、行の和を求める。"
  },
  {
    "start": 2392414,
    "end": 2395394,
    "text": "データフレーム全体から欠損値がなくなった。"
  },
  {
    "start": 2395814,
    "end": 2404714,
    "text": "ここで欠損値の総数はゼロとなり、実質的にクリーニングの部分は終了した。"
  },
  {
    "start": 2405854,
    "end": 2410158,
    "text": "最後にデータ4を作成するが、これはデータ3の新しいコピーとなる。"
  },
  {
    "start": 2410286,
    "end": 2413462,
    "text": "では、データ4について次のステップを実行しよう。"
  },
  {
    "start": 2413638,
    "end": 2415662,
    "text": "さて、ここでリストを振り返ってみよう。"
  },
  {
    "start": 2415798,
    "end": 2418154,
    "text": "掃除は終わった。"
  },
  {
    "start": 2418974,
    "end": 2420834,
    "text": "次のフィーチャーエンジニアリング"
  },
  {
    "start": 2421654,
    "end": 2432614,
    "text": "最初のモデルをトレーニングした後で、フィーチャーエンジニアリングに戻ることにしよう。"
  },
  {
    "start": 2432654,
    "end": 2434230,
    "text": "私たちはただ、ベースラインを固めたいだけなんだ。"
  },
  {
    "start": 2434382,
    "end": 2436014,
    "text": "エンジニアリングをフィーチャーするために、また必ず戻ってくるだろう。"
  },
  {
    "start": 2436054,
    "end": 2437874,
    "text": "それは保留にしておこう。"
  },
  {
    "start": 2438414,
    "end": 2440446,
    "text": "トランスフォームが可能になった。"
  },
  {
    "start": 2440590,
    "end": 2444394,
    "text": "機能変換はやりたい。"
  },
  {
    "start": 2450334,
    "end": 2470124,
    "text": "特徴変換を行う理由は、取り込むデータが正規分布している場合に、特定のモデルがより良いパフォーマンスを発揮するためであり、特徴列から正規分布を保証できるとは限らない。"
  },
  {
    "start": 2470544,
    "end": 2474888,
    "text": "一つできることは、列の傾きを見ることだ。"
  },
  {
    "start": 2475056,
    "end": 2482432,
    "text": "スキューとは、どういう意味かわからないかもしれないが、基本的にはデータが片方に傾いていることを意味する。"
  },
  {
    "start": 2482488,
    "end": 2485512,
    "text": "歪んだデータはこのようになる。"
  },
  {
    "start": 2485648,
    "end": 2489696,
    "text": "平均値が一点だけ横にずれているのがわかるだろう。"
  },
  {
    "start": 2489880,
    "end": 2501644,
    "text": "平均が最頻値の右側にある場合を正のゆがみ、平均が最頻値の左側にある場合を負のゆがみと呼ぶ。"
  },
  {
    "start": 2504184,
    "end": 2507884,
    "text": "スキューについては、さまざまなテストがある。"
  },
  {
    "start": 2508744,
    "end": 2518174,
    "text": "基本的に私たちにできることは、変数に変換を加えることによって、変数のゆがみを修正することである。"
  },
  {
    "start": 2519034,
    "end": 2526094,
    "text": "今回使用するテストでは、scipy statsから取得する。"
  },
  {
    "start": 2528394,
    "end": 2530170,
    "text": "それを一番上にインポートしているんだ。"
  },
  {
    "start": 2530362,
    "end": 2536034,
    "text": "scipy stats SkUは与えられた列のskewを返します。"
  },
  {
    "start": 2536114,
    "end": 2546554,
    "text": "この3つのデータを見てみよう select dtypes, numpy number."
  },
  {
    "start": 2548854,
    "end": 2551774,
    "text": "これらはすべて数字による特徴である。"
  },
  {
    "start": 2551934,
    "end": 2554634,
    "text": "このスキューは数値フィーチャーにのみ適用される。"
  },
  {
    "start": 2555214,
    "end": 2559142,
    "text": "ロック・フロンテージを見てみよう。"
  },
  {
    "start": 2559318,
    "end": 2565762,
    "text": "これをここに渡すと、スキューの値が得られる。"
  },
  {
    "start": 2565958,
    "end": 2570690,
    "text": "この値がゼロの場合は、スキューがないことを意味する。"
  },
  {
    "start": 2570722,
    "end": 2572450,
    "text": "完全に正規分布している。"
  },
  {
    "start": 2572562,
    "end": 2578214,
    "text": "正の値は右偏り、負の値は左偏りを意味する。"
  },
  {
    "start": 2579434,
    "end": 2587494,
    "text": "一般的に、0.5以上の値がある場合、データは歪んでおり、変換が必要かもしれないと考えることができる。"
  },
  {
    "start": 2587794,
    "end": 2590690,
    "text": "0.5のしきい値は単なる基準に過ぎない。"
  },
  {
    "start": 2590762,
    "end": 2593634,
    "text": "お好みで試してみてください。"
  },
  {
    "start": 2594094,
    "end": 2600834,
    "text": "それぞれの数値列を見て、どの列の傾きを補正する必要があるかを考えよう。"
  },
  {
    "start": 2604214,
    "end": 2608814,
    "text": "このような小さなデータフレームを作成して、これを視覚化できるようにします。"
  },
  {
    "start": 2608894,
    "end": 2612314,
    "text": "多分、スキューDFと呼ぶことにしよう。"
  },
  {
    "start": 2614694,
    "end": 2617782,
    "text": "さて、そのデータとは何だろう？"
  },
  {
    "start": 2617878,
    "end": 2619234,
    "text": "データ4を見ているはずだ。"
  },
  {
    "start": 2620534,
    "end": 2627034,
    "text": "データ4を見てみよう。"
  },
  {
    "start": 2627614,
    "end": 2627990,
    "text": "そうだね。"
  },
  {
    "start": 2628022,
    "end": 2632774,
    "text": "さて、まずは数値データだけを見てみよう。"
  },
  {
    "start": 2632934,
    "end": 2638194,
    "text": "データ4、dtypesを選択、numpy番号。"
  },
  {
    "start": 2639814,
    "end": 2641154,
    "text": "それは控えておこう。"
  },
  {
    "start": 2641574,
    "end": 2644474,
    "text": "私がやりたいのは、それぞれのスキューを計算することだ。"
  },
  {
    "start": 2645984,
    "end": 2653604,
    "text": "このデータフレームに対して scipy stats Sku を呼び出すと、各列のスキューが返される。"
  },
  {
    "start": 2654944,
    "end": 2659576,
    "text": "これは各列、各数値に対して1つのSkuである。"
  },
  {
    "start": 2659720,
    "end": 2662124,
    "text": "これをデータフレームにすることができる。"
  },
  {
    "start": 2667344,
    "end": 2669764,
    "text": "もっといい方法はないかと考えている。"
  },
  {
    "start": 2675924,
    "end": 2676340,
    "text": "オーケー。"
  },
  {
    "start": 2676372,
    "end": 2677788,
    "text": "ええ、実際に列を追加します。"
  },
  {
    "start": 2677836,
    "end": 2679596,
    "text": "では、こんな感じで始めよう。"
  },
  {
    "start": 2679780,
    "end": 2685104,
    "text": "スクはまだやめておこう。"
  },
  {
    "start": 2686204,
    "end": 2690664,
    "text": "数値機能の列名を取って、ここで使ってみよう。"
  },
  {
    "start": 2692204,
    "end": 2696654,
    "text": "で、featureというカラム名をつける。"
  },
  {
    "start": 2704754,
    "end": 2708858,
    "text": "では、これに各カラムのskuを計算します。"
  },
  {
    "start": 2708946,
    "end": 2710494,
    "text": "これをSku dfと呼ぶことにする。"
  },
  {
    "start": 2714074,
    "end": 2719130,
    "text": "では、Sku DFにSkUという新しいカラムを追加しよう。"
  },
  {
    "start": 2719162,
    "end": 2739284,
    "text": "今できることは、各特徴について、部分特徴のデータではなく、その特徴のscipy stats skewを計算するラムダ関数を適用することです。"
  },
  {
    "start": 2741784,
    "end": 2745524,
    "text": "これで、各列に関連するスキュー値を見ることができる。"
  },
  {
    "start": 2746144,
    "end": 2750844,
    "text": "これを使えば、どれを変身させたいのかがわかる。"
  },
  {
    "start": 2751874,
    "end": 2771374,
    "text": "ひとつ注意したいのは、負の値がいくつかあることで、データがどの方向に偏っているかは関係なく、ただ偏りの絶対値を見たいのです。"
  },
  {
    "start": 2772634,
    "end": 2784234,
    "text": "skewのdfを取り出し、absolute skewという新しい値を作り、skewの列を取り出し、それに絶対値関数を適用するだけである。"
  },
  {
    "start": 2785134,
    "end": 2789314,
    "text": "ネガティヴなものがポジティヴなものになるのがわかるだろう。"
  },
  {
    "start": 2790054,
    "end": 2792750,
    "text": "今できることは、この列を閾値にすることだ。"
  },
  {
    "start": 2792902,
    "end": 2798194,
    "text": "スキューの絶対値が0.5より大きい場合は、変換を適用する。"
  },
  {
    "start": 2799734,
    "end": 2805206,
    "text": "最後にskewedというカラムを作る。"
  },
  {
    "start": 2805310,
    "end": 2818514,
    "text": "これは、列が歪んでいる場合であり、歪みの絶対値の列を取り、trueにマッピングする関数を適用する。"
  },
  {
    "start": 2819694,
    "end": 2827034,
    "text": "もしxが0.5より大きければ、0.5以上かもしれないし、そうでなければfalseにマップされる。"
  },
  {
    "start": 2828334,
    "end": 2836570,
    "text": "SKUの値が0.5を超えると、列が偏っていることがわかる。"
  },
  {
    "start": 2836762,
    "end": 2850694,
    "text": "これでできることは、skewedがtrueに等しいすべての行をデータフレームに問い合わせることである。"
  },
  {
    "start": 2851274,
    "end": 2857174,
    "text": "次にsub featureと入力すると、歪んでいるすべての列が表示される。"
  },
  {
    "start": 2858234,
    "end": 2861090,
    "text": "これで、必要な変換を施すことができる。"
  },
  {
    "start": 2861242,
    "end": 2863294,
    "text": "私たちが使う変身とは？"
  },
  {
    "start": 2864634,
    "end": 2866654,
    "text": "対数変換を使おう。"
  },
  {
    "start": 2870114,
    "end": 2871266,
    "text": "ログ変換。"
  },
  {
    "start": 2871450,
    "end": 2872614,
    "text": "これを見てみよう。"
  },
  {
    "start": 2873394,
    "end": 2874882,
    "text": "こんな感じだ。"
  },
  {
    "start": 2874938,
    "end": 2884174,
    "text": "あらかじめ歪んだデータがあり、各値に対数（対数）を適用すると、より正規分布に見えるようになる。"
  },
  {
    "start": 2886614,
    "end": 2893694,
    "text": "そのため、これはモデルが小さな値に対処するのに役立つ。"
  },
  {
    "start": 2893814,
    "end": 2901070,
    "text": "特にこのように、すべての値がゼロに非常に近いところに集中しているような場合、数値的に不安定になることがある。"
  },
  {
    "start": 2901222,
    "end": 2907834,
    "text": "そのため、対数変換を適用することで、よりきれいな範囲に広げることができる。"
  },
  {
    "start": 2908414,
    "end": 2911594,
    "text": "これらはすべて、ログ変換を使用する。"
  },
  {
    "start": 2912114,
    "end": 2921242,
    "text": "しかし、1つだけ問題がある。"
  },
  {
    "start": 2921298,
    "end": 2930494,
    "text": "もしこれを4つのデータのインデクサーとして使えば、配列が得られるだけだ。"
  },
  {
    "start": 2932354,
    "end": 2936274,
    "text": "これは歪んだ列、つまりデータ4の歪んだ部分だけである。"
  },
  {
    "start": 2936434,
    "end": 2945714,
    "text": "これをdescribeと入力すると、最小値がゼロになっているのがわかる。"
  },
  {
    "start": 2946094,
    "end": 2950854,
    "text": "ご存知のように、対数関数はゼロでは不定です。"
  },
  {
    "start": 2950934,
    "end": 2955518,
    "text": "さて、ここではマイナスの値を気にする必要はない。"
  },
  {
    "start": 2955646,
    "end": 2965934,
    "text": "これは主に実世界のデータであり、ここには負の値、意味のある負の値に相当する列はない。"
  },
  {
    "start": 2966634,
    "end": 2971454,
    "text": "というのも、ある時点で最小値がゼロになるので、対数変換をするだけではダメなのだ。"
  },
  {
    "start": 2971794,
    "end": 2973974,
    "text": "デスモスを見てみよう。"
  },
  {
    "start": 2975914,
    "end": 2980254,
    "text": "xの対数をゼロで見ると、不定ですよね？"
  },
  {
    "start": 2981674,
    "end": 2983454,
    "text": "ゼロの対数は未定義。"
  },
  {
    "start": 2983874,
    "end": 2988010,
    "text": "それを補わなければならない。"
  },
  {
    "start": 2988122,
    "end": 2996184,
    "text": "便利なトリックは、xに1を足すことだね？"
  },
  {
    "start": 2996344,
    "end": 3005048,
    "text": "今、ゼロにあるものはゼロになり、残りの領域が評価される。"
  },
  {
    "start": 3005176,
    "end": 3007656,
    "text": "負の値を心配する必要はない。"
  },
  {
    "start": 3007800,
    "end": 3015416,
    "text": "ゼロはゼロと定義されるからだ。"
  },
  {
    "start": 3015560,
    "end": 3021004,
    "text": "ゼロ以上のものは、このスケールに乗せられる。"
  },
  {
    "start": 3022424,
    "end": 3028284,
    "text": "numpyにはこのための関数が組み込まれており、それはnumpy log one pである。"
  },
  {
    "start": 3028624,
    "end": 3035480,
    "text": "このようにゼロ、ゼロ、1と置くと、ゼロに非常に近い評価を受けることがわかる。"
  },
  {
    "start": 3035632,
    "end": 3038040,
    "text": "ゼロに近い評価をする。"
  },
  {
    "start": 3038152,
    "end": 3039884,
    "text": "評価はゼロに近い。"
  },
  {
    "start": 3041844,
    "end": 3048144,
    "text": "住宅価格回帰競争とでも名付けようか。"
  },
  {
    "start": 3051044,
    "end": 3052244,
    "text": "コンペティションだ。"
  },
  {
    "start": 3052404,
    "end": 3053224,
    "text": "オーケー。"
  },
  {
    "start": 3053924,
    "end": 3054364,
    "text": "分かった。"
  },
  {
    "start": 3054404,
    "end": 3062396,
    "text": "だから、もしログでこれをやったとしたら、ログを使うだけで、これは問題ない。"
  },
  {
    "start": 3062460,
    "end": 3073078,
    "text": "一方、対数1（p）の場合は、ゼロを渡しても問題なく、結果的にゼロになる。"
  },
  {
    "start": 3073246,
    "end": 3075394,
    "text": "これが変換に使う関数だ。"
  },
  {
    "start": 3077934,
    "end": 3088190,
    "text": "この下にあるのは、このコラムのためにあると言ってもいい。"
  },
  {
    "start": 3088222,
    "end": 3093126,
    "text": "私たちはただ、このように問い合わせをしたいだけで、実際に問い合わせをする必要はない。"
  },
  {
    "start": 3093310,
    "end": 3100934,
    "text": "いいえ、実際には大丈夫です。では、それぞれの列（歪んだ特徴）について、その列を取り上げます。"
  },
  {
    "start": 3100974,
    "end": 3101454,
    "text": "これは何だ？"
  },
  {
    "start": 3101494,
    "end": 3103006,
    "text": "データ4？"
  },
  {
    "start": 3103110,
    "end": 3103794,
    "text": "そうだね。"
  },
  {
    "start": 3104454,
    "end": 3108422,
    "text": "データ4サブカラムはnumpyログに等しい。"
  },
  {
    "start": 3108478,
    "end": 3112590,
    "text": "4つのサブカラムの1ページ分のデータ。"
  },
  {
    "start": 3112742,
    "end": 3119274,
    "text": "これは、これらの歪んだ列のそれぞれに対数変換を適用しているもので、これで我々が求めている結果が得られるはずだ。"
  },
  {
    "start": 3123744,
    "end": 3130704,
    "text": "さて、ここでもう一度skew dfを実行してスキューをチェックすると、まだ値があるかもしれない。"
  },
  {
    "start": 3130864,
    "end": 3132504,
    "text": "ほとんどが修正されているのがわかるだろう。"
  },
  {
    "start": 3132544,
    "end": 3137496,
    "text": "それでも歪んだ列がいくつかあるが、一般的には対数変換を一度適用すれば十分である。"
  },
  {
    "start": 3137600,
    "end": 3139084,
    "text": "その心配はない。"
  },
  {
    "start": 3141024,
    "end": 3149184,
    "text": "さて、フューチャー・トランスフォーメーションが終わったところで、実はもうひとつある。"
  },
  {
    "start": 3150124,
    "end": 3157224,
    "text": "今月のコラムは、これは面白いのだが、実はここで一種の創造的な機能変換を適用することができる。"
  },
  {
    "start": 3158124,
    "end": 3161172,
    "text": "ヶ月前のこのコラムを見て、偏りがないことに気づこう。"
  },
  {
    "start": 3161188,
    "end": 3162612,
    "text": "実際にログに記録したわけではない。"
  },
  {
    "start": 3162628,
    "end": 3167396,
    "text": "まだ原型のままだから、何カ月も前のものなんだ。"
  },
  {
    "start": 3167540,
    "end": 3168980,
    "text": "今月でしょ？"
  },
  {
    "start": 3169172,
    "end": 3172216,
    "text": "これは整数カラムである。"
  },
  {
    "start": 3172280,
    "end": 3174764,
    "text": "それはまだ数字であり、進歩している。"
  },
  {
    "start": 3175064,
    "end": 3179368,
    "text": "問題は、それが本当は何を言っているのかということだ。"
  },
  {
    "start": 3179456,
    "end": 3180844,
    "text": "月の意味は？"
  },
  {
    "start": 3181184,
    "end": 3186072,
    "text": "モデルはこれを見て、1の値は12の値より小さいと考えるだろう。"
  },
  {
    "start": 3186248,
    "end": 3189352,
    "text": "考えてみれば、これはサイクルなのだ。"
  },
  {
    "start": 3189488,
    "end": 3192204,
    "text": "一人と十二人は非常に密接に結びついている。"
  },
  {
    "start": 3193744,
    "end": 3206924,
    "text": "気温や時期で考えるなら、北半球にいる人なら、1か12は本当に寒い時期で、6か周期の真ん中なら本当に暑い時期になる。"
  },
  {
    "start": 3207264,
    "end": 3213784,
    "text": "この変数の値が低いか高ければ冷たいことを意味し、中程度であれば熱いことを意味する。"
  },
  {
    "start": 3213904,
    "end": 3218564,
    "text": "このような複雑な関係は、多くのモデルにとってそう簡単には理解できない。"
  },
  {
    "start": 3219464,
    "end": 3224156,
    "text": "それを補うような変換を施せば、もっと簡単になるだろう。"
  },
  {
    "start": 3224340,
    "end": 3230864,
    "text": "私たちがやろうとしているのは、実際に変数のサイン変換、またはコサイン変換を使うことです。"
  },
  {
    "start": 3231804,
    "end": 3243064,
    "text": "私たちが望むのは、この正弦変換を使って、1の値と12の値が非常に密接にリンクするように設定することだ。"
  },
  {
    "start": 3244444,
    "end": 3248792,
    "text": "これは1から12までの値を取る。"
  },
  {
    "start": 3248948,
    "end": 3254484,
    "text": "ゼロが12に相当するような、余分なゼロの値を想像することができる。"
  },
  {
    "start": 3255344,
    "end": 3264416,
    "text": "グラフで正弦波を見てみると、我々が望んでいることが再現されているのがわかるだろう？"
  },
  {
    "start": 3264440,
    "end": 3270124,
    "text": "ゼロから2PIまでが1ピリオドであることがお分かりいただけるだろう。"
  },
  {
    "start": 3270504,
    "end": 3280530,
    "text": "ここでcという小さな変数を加えれば、正弦波の周波数を伸ばすことができる。"
  },
  {
    "start": 3280642,
    "end": 3288074,
    "text": "これを引き伸ばして、1ピリオドが12ピリオドに並ぶようにする。"
  },
  {
    "start": 3288114,
    "end": 3288434,
    "text": "そうだね。"
  },
  {
    "start": 3288514,
    "end": 3293654,
    "text": "ピリオドを12に揃えるまで伸ばし続けるなら、もう少し細かくしよう。"
  },
  {
    "start": 3294634,
    "end": 3296026,
    "text": "いい値を見つけよう。"
  },
  {
    "start": 3296170,
    "end": 3302334,
    "text": "最も近い値は0.5のようなので、わずかな差で0.4から0.67の範囲となる。"
  },
  {
    "start": 3303614,
    "end": 3307434,
    "text": "このように12点で並ぶように調整できるのがわかるだろう。"
  },
  {
    "start": 3308174,
    "end": 3313194,
    "text": "無理のない範囲で、できるだけ12本に近づけたい。"
  },
  {
    "start": 3313494,
    "end": 3320914,
    "text": "あと一歩のところまで来ていると思う。"
  },
  {
    "start": 3321454,
    "end": 3329122,
    "text": "0.35が本当に近いなら、さらに良さそうだ。"
  },
  {
    "start": 3329218,
    "end": 3331770,
    "text": "よし、これで本当に12に近づいたな。"
  },
  {
    "start": 3331962,
    "end": 3341214,
    "text": "今作ったこの関数を使うと、この関数がすることは、ゼロから12の間の値を取り、それをこの正弦波にマッピングすることだ。"
  },
  {
    "start": 3342634,
    "end": 3348934,
    "text": "つまり、ゼロの値と12の値は非常に近いということだ。"
  },
  {
    "start": 3352034,
    "end": 3363540,
    "text": "しかし、6という値も実に近い。6が熱く、0か12が冷たいという意味にしたいからだ。"
  },
  {
    "start": 3363692,
    "end": 3366864,
    "text": "ここで実際に欲しいのは、その代わりにコサイン波である。"
  },
  {
    "start": 3367204,
    "end": 3373180,
    "text": "コサイン波は0と12を互いに等しく写すが、6は反対側の極にある。"
  },
  {
    "start": 3373252,
    "end": 3373864,
    "text": "そうだね。"
  },
  {
    "start": 3374244,
    "end": 3377244,
    "text": "ここで言う \"コールド \"とは \"コールド \"のことで、申し訳ないが \"ホット \"だ。"
  },
  {
    "start": 3377284,
    "end": 3378356,
    "text": "この2つは冷たいという意味だ。"
  },
  {
    "start": 3378460,
    "end": 3381556,
    "text": "私たちのために、負の余弦にしておこう。"
  },
  {
    "start": 3381660,
    "end": 3384278,
    "text": "マイナスは冷たく、プラスは熱いことを意味する。"
  },
  {
    "start": 3384406,
    "end": 3401834,
    "text": "この機能は、月の特徴をこのような周期的な特徴にマッピングするのに非常に適しています。この特徴の値が低ければ寒く、高ければ暑いことを意味します。"
  },
  {
    "start": 3402254,
    "end": 3408634,
    "text": "このような正弦波変換を使えば、特徴に含まれる有用な情報をより多く捉えることができる。"
  },
  {
    "start": 3409464,
    "end": 3413584,
    "text": "基本的には、ここにこれを差し込もう。"
  },
  {
    "start": 3413744,
    "end": 3417216,
    "text": "これが今回使う関数になるよね？"
  },
  {
    "start": 3417360,
    "end": 3419164,
    "text": "これをノートに戻そう。"
  },
  {
    "start": 3421544,
    "end": 3423564,
    "text": "というわけで、これが我々が望む関数である。"
  },
  {
    "start": 3423944,
    "end": 3425724,
    "text": "少し整理しよう。"
  },
  {
    "start": 3428064,
    "end": 3433444,
    "text": "これは、この月の列のすべての値に適用したい関数である。"
  },
  {
    "start": 3435004,
    "end": 3443580,
    "text": "列を取り出し、numpyの余弦を使って要素ごとに適用することができます。"
  },
  {
    "start": 3443692,
    "end": 3445784,
    "text": "これは単なるコサイン変換だ。"
  },
  {
    "start": 3446244,
    "end": 3454464,
    "text": "この値だけずらして、マイナスにしよう。"
  },
  {
    "start": 3455404,
    "end": 3458420,
    "text": "これが探している機能だ。"
  },
  {
    "start": 3458572,
    "end": 3463564,
    "text": "この最小値を見ると、numpyのminを使うことになる。"
  },
  {
    "start": 3464864,
    "end": 3468024,
    "text": "最小値はマイナスに近いはずだよね？"
  },
  {
    "start": 3468064,
    "end": 3479924,
    "text": "というのも、ここではマイナス1が最小値であり、元のデータの両側に存在するはずであり、最大値は1であるべきで、それは1に非常に近いからである。"
  },
  {
    "start": 3480944,
    "end": 3485952,
    "text": "平均値は、まあ、若干高い。"
  },
  {
    "start": 3486008,
    "end": 3495064,
    "text": "しかし、この関数が本質的に何をするのか、この関数をここに置いてみよう。"
  },
  {
    "start": 3495484,
    "end": 3498836,
    "text": "カラム全体を渡す代わりに、単一の値だけを渡してみよう。"
  },
  {
    "start": 3498940,
    "end": 3505444,
    "text": "月、つまり1月の値が1であれば、その月は寒かったことを意味する負の値が得られる。"
  },
  {
    "start": 3505564,
    "end": 3512288,
    "text": "例えば、12月という年末を意味する高い値があれば、寒いことを意味するマイナスの値も得られるはずだ。"
  },
  {
    "start": 3512436,
    "end": 3520800,
    "text": "例えば、6月の気温を6とすると、プラスの値が高い、つまり暖かいということになる。"
  },
  {
    "start": 3520992,
    "end": 3536324,
    "text": ""
  },
  {
    "start": 3537264,
    "end": 3538084,
    "text": "分かった。"
  },
  {
    "start": 3540064,
    "end": 3540440,
    "text": "そうだね。"
  },
  {
    "start": 3540472,
    "end": 3541724,
    "text": "これを使おう。"
  },
  {
    "start": 3542224,
    "end": 3545084,
    "text": "変形した機能はこんな感じ。"
  },
  {
    "start": 3545504,
    "end": 3550524,
    "text": "このように、新機能と等しい値を設定するだけだ。"
  },
  {
    "start": 3553584,
    "end": 3554364,
    "text": "そうだね。"
  },
  {
    "start": 3556184,
    "end": 3565864,
    "text": "では、この対数変換は、歪んだ特徴量に対して行うことができます。"
  },
  {
    "start": 3568964,
    "end": 3577024,
    "text": "ここでは、周期的な特徴のためのコサイン変換がある。"
  },
  {
    "start": 3578924,
    "end": 3580264,
    "text": "でも、一つだけある。"
  },
  {
    "start": 3581764,
    "end": 3582868,
    "text": "よし、これを実行しよう。"
  },
  {
    "start": 3582956,
    "end": 3587284,
    "text": "今、私たちは、それが適用されていることを確認するために、ソル、サブの月のデータを見ます。"
  },
  {
    "start": 3587324,
    "end": 3590804,
    "text": "の間の値を取ることがわかる。"
  },
  {
    "start": 3591944,
    "end": 3598924,
    "text": "さて、最後にデータ5という新しいデータセットを作り、データ4をコピーします。"
  },
  {
    "start": 3600224,
    "end": 3602444,
    "text": "さて、フィーチャートランスフォームは終わった。"
  },
  {
    "start": 3604384,
    "end": 3605616,
    "text": "今度はエンコーディングだ。"
  },
  {
    "start": 3605760,
    "end": 3615016,
    "text": "エンコーディングはとても簡単で、早い段階で適切なデータ型を設定したからだ。"
  },
  {
    "start": 3615040,
    "end": 3618958,
    "text": "すべてのカテゴリーが文字列としてエンコードされていることを確認した。"
  },
  {
    "start": 3619126,
    "end": 3625954,
    "text": "そうすることで、カテゴリカルなものを、ただ見ることができる。"
  },
  {
    "start": 3628574,
    "end": 3640710,
    "text": "これにより、5を指定するだけで、データセット全体に対してパンダのダミー取得を呼び出すことができる。"
  },
  {
    "start": 3640782,
    "end": 3648790,
    "text": "これは、数値カラムはそのままに、すべてのカテゴリーカラムまたは文字列カラムに対して1つのホットカラムを作成するものである。"
  },
  {
    "start": 3648942,
    "end": 3652462,
    "text": "これは、エンコード全体の面倒を見てくれるようなものだ。"
  },
  {
    "start": 3652598,
    "end": 3664114,
    "text": "これは、訓練セットとテストセットを組み合わせて行っているので、列が一方のセットにあって他方のセットにないことを心配する必要はない。"
  },
  {
    "start": 3664774,
    "end": 3675444,
    "text": "このテストセットはコンペティション用に提供されたものだから、事前処理に使える情報を追加してくれるのはありがたい。"
  },
  {
    "start": 3678144,
    "end": 3681616,
    "text": "私はそうは思わない。"
  },
  {
    "start": 3681640,
    "end": 3685924,
    "text": "データ5がこれに等しいと言うだけで、エンコーディングはすべてやってくれると思う。"
  },
  {
    "start": 3687144,
    "end": 3689960,
    "text": "そう、もう序列のようなものはなかったよね。"
  },
  {
    "start": 3690032,
    "end": 3691360,
    "text": "すべてが適切にエンコードされていた。"
  },
  {
    "start": 3691432,
    "end": 3694204,
    "text": "すべてのカテゴリーが自分のコラムを持つようになった。"
  },
  {
    "start": 3695184,
    "end": 3698960,
    "text": "これでエンコーディングは完璧だ。"
  },
  {
    "start": 3699032,
    "end": 3703894,
    "text": "今のデータ6はデータ5のコピーで、エンコードされたバージョンだ。"
  },
  {
    "start": 3705274,
    "end": 3705666,
    "text": "分かった。"
  },
  {
    "start": 3705690,
    "end": 3707294,
    "text": "今はスケーリングをすることになると思う。"
  },
  {
    "start": 3708634,
    "end": 3711094,
    "text": "標準的なスケーラーをインポートしてみよう。"
  },
  {
    "start": 3712154,
    "end": 3718174,
    "text": "sklearnの前処理から標準的なスケーラーの方が良い傾向にあると思う。"
  },
  {
    "start": 3718514,
    "end": 3734134,
    "text": "標準的なスカラーをインポートすることで、データの中心をゼロにすることができる。"
  },
  {
    "start": 3734174,
    "end": 3738374,
    "text": "それはデータセットによると思う。"
  },
  {
    "start": 3738534,
    "end": 3742334,
    "text": "それを変えてみて、どちらがいいか考えてみるのもいいかもしれない。"
  },
  {
    "start": 3742494,
    "end": 3744234,
    "text": "まずは標準的なスカラーから。"
  },
  {
    "start": 3745014,
    "end": 3756660,
    "text": "各列に同じ値の範囲を与えて、データ6すべてにこれを当てはめ、スカラーを使ってデータ6を適宜変換しよう。"
  },
  {
    "start": 3756732,
    "end": 3757544,
    "text": "変身する。"
  },
  {
    "start": 3758924,
    "end": 3766572,
    "text": "つまり、訓練セットとテストセットもスケーリングに使っていると言おうとしたんだ。"
  },
  {
    "start": 3766668,
    "end": 3771664,
    "text": "テストセットを含めることで、スケーラーに多くの情報を与えている。"
  },
  {
    "start": 3772124,
    "end": 3780604,
    "text": "さて、これは自然な生産モデルではなく、競争モデルであるため、モデルへの入力を気にすることなく、このようなエンコーディングを行うことができる。"
  },
  {
    "start": 3780644,
    "end": 3782860,
    "text": "ここでは入力パイプラインのようなものは使っていない。"
  },
  {
    "start": 3783052,
    "end": 3784380,
    "text": "スケーリングも同じだ。"
  },
  {
    "start": 3784532,
    "end": 3787624,
    "text": "スケーリングされたデータに完全に変換すればいいのだ。"
  },
  {
    "start": 3788124,
    "end": 3792624,
    "text": "人間が読める入力をモデルに入力するようなことを考える必要はない。"
  },
  {
    "start": 3793604,
    "end": 3802264,
    "text": "将来のビデオで取り上げる予定だが、もしあなたがプロダクション・モデルをやっているのであれば、このエンコードとスケーリング・プロセスにはまったく違った方法で取り組みたい。"
  },
  {
    "start": 3803164,
    "end": 3803556,
    "text": "オーケー。"
  },
  {
    "start": 3803580,
    "end": 3807596,
    "text": "標準的なスカラーを使って変換しており、これはnumpyの配列を返す。"
  },
  {
    "start": 3807620,
    "end": 3816214,
    "text": "インデックスを以前と同じにし、カラムも以前と同じにしてから、データフレームに戻すつもりだ。"
  },
  {
    "start": 3818714,
    "end": 3819810,
    "text": "データ6を見てみよう。"
  },
  {
    "start": 3819842,
    "end": 3821154,
    "text": "これでスケールアップしたはずだ。"
  },
  {
    "start": 3821274,
    "end": 3821546,
    "text": "そうだね。"
  },
  {
    "start": 3821570,
    "end": 3825974,
    "text": "すべての列はゼロを中心とし、分散は1である。"
  },
  {
    "start": 3826354,
    "end": 3836654,
    "text": "というのも、1つの訓練セットに適合させてからテストセットを変換したわけではないからだ。"
  },
  {
    "start": 3838154,
    "end": 3838610,
    "text": "オーケー。"
  },
  {
    "start": 3838642,
    "end": 3847306,
    "text": "スケーリングが終わった今、この2つを目標から外すだけだと思う。"
  },
  {
    "start": 3847370,
    "end": 3848794,
    "text": "これは興味深い。"
  },
  {
    "start": 3848834,
    "end": 3849854,
    "text": "これを見てみよう。"
  },
  {
    "start": 3853234,
    "end": 3870830,
    "text": "ターゲットの変換は、特徴の変換とは別に行われます。ターゲットの変換を行う場合、モデルを評価する際に非常に注意しなければならないからです。ターゲットを変換すると、本質的にモデルが予測を行う単位を変更することになるからです。"
  },
  {
    "start": 3871022,
    "end": 3877914,
    "text": "もしモデルの予測を分析したいのであれば、予測後に変換を元に戻さなければならない。"
  },
  {
    "start": 3879014,
    "end": 3882494,
    "text": "ターゲットの分布を見てみよう。"
  },
  {
    "start": 3882654,
    "end": 3891920,
    "text": "しかし、プロットしたり、ヒストグラムを取得して、どのように見えるかを確認することができます。"
  },
  {
    "start": 3892032,
    "end": 3893736,
    "text": "ちょっと歪んで見える"
  },
  {
    "start": 3893840,
    "end": 3894128,
    "text": "そうだね。"
  },
  {
    "start": 3894176,
    "end": 3897524,
    "text": "これは対数変換が有効かもしれない。"
  },
  {
    "start": 3900744,
    "end": 3902624,
    "text": "私たちはもっとうまくやれると思う。"
  },
  {
    "start": 3902704,
    "end": 3912804,
    "text": "実際にmatplotlib、PLTとしてpyplot、snsとしてseabornをインポートしてみよう。"
  },
  {
    "start": 3913504,
    "end": 3921530,
    "text": "Seabornのdistplotは廃止されましたが、とても便利な機能でした。"
  },
  {
    "start": 3921562,
    "end": 3922774,
    "text": "まだ使うつもりだよ。"
  },
  {
    "start": 3923394,
    "end": 3925054,
    "text": "新しい数字を設定する"
  },
  {
    "start": 3925794,
    "end": 3927514,
    "text": "実際には2つのサブプロットをやろうと思う。"
  },
  {
    "start": 3927554,
    "end": 3929854,
    "text": "20×10の数字を作るよ。"
  },
  {
    "start": 3930634,
    "end": 3941202,
    "text": "SNSのdistplotを使おう。これは、言ったように非推奨の関数だが、fitという素晴らしいパラメータが使える。"
  },
  {
    "start": 3941298,
    "end": 3946164,
    "text": "ターゲットをプロットし、これを表示する。"
  },
  {
    "start": 3946544,
    "end": 3950324,
    "text": "非推奨というだけだ。"
  },
  {
    "start": 3951184,
    "end": 3952884,
    "text": "ターゲットはこんな感じだ。"
  },
  {
    "start": 3953744,
    "end": 3962724,
    "text": "これはカーネル密度推定であり、ヒストグラムの密度を推定するものである。"
  },
  {
    "start": 3963584,
    "end": 3965096,
    "text": "歪んでいるのがわかるだろう。"
  },
  {
    "start": 3965120,
    "end": 3965936,
    "text": "その通り、歪んでいる。"
  },
  {
    "start": 3966000,
    "end": 3970364,
    "text": "左側よりも右側の方がデータが多いことがおわかりいただけるだろう。"
  },
  {
    "start": 3972034,
    "end": 3974442,
    "text": "対数変換ができる。"
  },
  {
    "start": 3974498,
    "end": 3978214,
    "text": "このグラフで、それがどのようなものかを示したい。"
  },
  {
    "start": 3978674,
    "end": 3984854,
    "text": "シーボーンのセットスタイルでダークグリッドにすると、見た目がすっきりする。"
  },
  {
    "start": 3988794,
    "end": 3989722,
    "text": "その方が素敵だ。"
  },
  {
    "start": 3989778,
    "end": 3993214,
    "text": "では、2つのサブプロットを作ろう。"
  },
  {
    "start": 3994754,
    "end": 3997992,
    "text": "サブプロットを1×2のグリッドにプロットする。"
  },
  {
    "start": 3998048,
    "end": 4001324,
    "text": "これが1つ目で、2つ目はこの下にある。"
  },
  {
    "start": 4003304,
    "end": 4007216,
    "text": "このフィット・パラメーターも含めることができる。"
  },
  {
    "start": 4007400,
    "end": 4008684,
    "text": "つ目だよ。"
  },
  {
    "start": 4009064,
    "end": 4015964,
    "text": "ここでランダム変数を渡すと、そのランダム変数をヒストグラムに当てはめようとしてくれる。"
  },
  {
    "start": 4016584,
    "end": 4023096,
    "text": "これは、新しいヒストプロット関数に置き換えられていないように、非推奨とされた部分であり、この機能はありません。"
  },
  {
    "start": 4023160,
    "end": 4027352,
    "text": "だから、だから、まだこれを使っているんだ。"
  },
  {
    "start": 4027368,
    "end": 4040832,
    "text": "対数変換のポイントは、データを正規化すること、つまり正規分布から来たように見せることです。"
  },
  {
    "start": 4040928,
    "end": 4051704,
    "text": "黒い線が正規分布で、正規分布をデータに当てはめるとこのようになります。"
  },
  {
    "start": 4051784,
    "end": 4053884,
    "text": "うまく並んでいないのがわかるだろう。"
  },
  {
    "start": 4054264,
    "end": 4056164,
    "text": "データとあまり一致していない。"
  },
  {
    "start": 4056864,
    "end": 4071528,
    "text": "これは対数変換なしで、次に対数変換で同じことをします。"
  },
  {
    "start": 4071576,
    "end": 4076804,
    "text": "ただし、ターゲットを渡す代わりに、ターゲットのnumpyログを渡す。"
  },
  {
    "start": 4077704,
    "end": 4085364,
    "text": "numpy logを渡す前に、この最小値がゼロ以上でないことをもう一度確認したい。"
  },
  {
    "start": 4088224,
    "end": 4089832,
    "text": "よし、最低気温はゼロ以上だ。"
  },
  {
    "start": 4089888,
    "end": 4094124,
    "text": "ゼロの時点で未定義であることを心配する必要はない。"
  },
  {
    "start": 4095264,
    "end": 4099256,
    "text": "もし最小値がゼロであれば、対数1pのトリックをもう一度使いたい。"
  },
  {
    "start": 4099320,
    "end": 4100684,
    "text": "そんなことはしない。"
  },
  {
    "start": 4101664,
    "end": 4107204,
    "text": "それでは、対数変換なしと対数変換ありの場合を見てみよう。"
  },
  {
    "start": 4107784,
    "end": 4114752,
    "text": "データに対数変換を適用すると、正規適合がよりデータに近くなることがわかる。"
  },
  {
    "start": 4114928,
    "end": 4118584,
    "text": "販売価格の規模が変更されているのがわかるだろう。"
  },
  {
    "start": 4118664,
    "end": 4120324,
    "text": "現在、ログセール価格となっている。"
  },
  {
    "start": 4120624,
    "end": 4123524,
    "text": "実は、おそらくここで変更させてほしい。"
  },
  {
    "start": 4124584,
    "end": 4129714,
    "text": "プロットの y ラベルまたは x ラベルは販売価格の対数である。"
  },
  {
    "start": 4131894,
    "end": 4136382,
    "text": "これは現在、別のユニットだが、より正規分布している。"
  },
  {
    "start": 4136478,
    "end": 4145034,
    "text": "このモデルは、常にではないが、通常はこのように見ることを好む。"
  },
  {
    "start": 4147294,
    "end": 4150914,
    "text": "さて、では実際に変形を適用してみよう。"
  },
  {
    "start": 4151294,
    "end": 4155444,
    "text": "ターゲットにnumpyログを使う。"
  },
  {
    "start": 4156544,
    "end": 4158112,
    "text": "このログをターゲットと呼ぶことにする。"
  },
  {
    "start": 4158168,
    "end": 4162648,
    "text": "上書きするつもりはない。"
  },
  {
    "start": 4162776,
    "end": 4166864,
    "text": "現在、ログターゲットは正規分布している。"
  },
  {
    "start": 4166904,
    "end": 4167844,
    "text": "こんな感じだ。"
  },
  {
    "start": 4168904,
    "end": 4172152,
    "text": "さて、次はログターゲットの予想だ。"
  },
  {
    "start": 4172328,
    "end": 4182012,
    "text": "RMSEを取り戻すとすれば、ログ販売価格を単位とすることになるだろう。"
  },
  {
    "start": 4182108,
    "end": 4195424,
    "text": "つまり、元の販売価格（ドルだったと思う）を元に戻すには、指数関数でeのべき乗をする必要があるんだ。"
  },
  {
    "start": 4197484,
    "end": 4208314,
    "text": "対数ターゲットで予測を行った後、Numpy Xを使って指数計算をし直さなければならない。"
  },
  {
    "start": 4209214,
    "end": 4214514,
    "text": "よし、これで目標達成だ。"
  },
  {
    "start": 4215694,
    "end": 4218782,
    "text": "さて、次は実際にモデルを使って仕事をしよう。"
  },
  {
    "start": 4218918,
    "end": 4220318,
    "text": "データはいいところにある。"
  },
  {
    "start": 4220366,
    "end": 4226758,
    "text": "我々はそれをクリーニングし、処理し、エンコードし、スケーリングし、作業し、特徴変換を行った。"
  },
  {
    "start": 4226886,
    "end": 4231858,
    "text": "フィーチャー・エンジニアリングはまだやっていない。"
  },
  {
    "start": 4232026,
    "end": 4237014,
    "text": "とはいえ、あまり多くの機能を扱うわけではないので、ここでどの程度の機能選択が役に立つかはわからない。"
  },
  {
    "start": 4237354,
    "end": 4239298,
    "text": "317のコラムがある。"
  },
  {
    "start": 4239426,
    "end": 4241774,
    "text": "それでも妥当な機能の数だ。"
  },
  {
    "start": 4242114,
    "end": 4249014,
    "text": "特徴選択は、本当に高次元のデータで、必要のない冗長な情報がたくさんある場合に有効だ。"
  },
  {
    "start": 4249434,
    "end": 4253454,
    "text": "モデルのパフォーマンスに悪影響を及ぼしている。"
  },
  {
    "start": 4253794,
    "end": 4257134,
    "text": "機能選択はあまり必要ないと思う。"
  },
  {
    "start": 4257844,
    "end": 4258876,
    "text": "これを見てみよう。"
  },
  {
    "start": 4258940,
    "end": 4260464,
    "text": "では、モデルの選択だ。"
  },
  {
    "start": 4261084,
    "end": 4265036,
    "text": "私がモデル選びに愛用しているツールのひとつがピカラットだ。"
  },
  {
    "start": 4265140,
    "end": 4267544,
    "text": "だから、ここに設置しなければならないと思う。"
  },
  {
    "start": 4268084,
    "end": 4271644,
    "text": "pip、インストール、静かにしておくこと。"
  },
  {
    "start": 4271804,
    "end": 4272904,
    "text": "ピカラット"
  },
  {
    "start": 4274084,
    "end": 4277556,
    "text": "Pycaratは基本的にローコードのモデル選択ライブラリである。"
  },
  {
    "start": 4277620,
    "end": 4279388,
    "text": "他にもたくさんの機能がある。"
  },
  {
    "start": 4279556,
    "end": 4282100,
    "text": "データを自動的に前処理したりできるんだ。"
  },
  {
    "start": 4282172,
    "end": 4286554,
    "text": "私が気に入っているのは、モデル選択機能だ。"
  },
  {
    "start": 4286854,
    "end": 4295806,
    "text": "例えば、すべての異なるモデルをインポートして、ロードして、手作業でやるのが嫌だったら、Pycaratが勝手にやってくれる。"
  },
  {
    "start": 4295990,
    "end": 4309314,
    "text": "回帰モジュールは今回のような回帰タスクのためのもので、setupとcompare modelsという2つの関数をインポートします。"
  },
  {
    "start": 4311054,
    "end": 4324342,
    "text": "これが終了したら、すぐにこれをインポートして、基本的には、クロス検証を使って、トレーニング・セットやどんなセットを渡したとしても、たくさんの異なるモデルを生成して実行する。"
  },
  {
    "start": 4324438,
    "end": 4331114,
    "text": "デフォルトでは10倍のcvになっていると思う。"
  },
  {
    "start": 4331934,
    "end": 4338554,
    "text": "そして、それぞれのモデルについて、どのモデルがこのデータセットに最適なのか、大まかな感覚を与えてくれるメトリックスを返してくれる。"
  },
  {
    "start": 4339414,
    "end": 4347834,
    "text": "これを実行してインポートし、モデル選択を行う。"
  },
  {
    "start": 4349774,
    "end": 4356358,
    "text": "Pycaratからこのセットアップ関数を呼び出して、使いたいデータを渡す。"
  },
  {
    "start": 4356446,
    "end": 4359034,
    "text": "データと目標を取り込むのだと思う。"
  },
  {
    "start": 4360214,
    "end": 4363234,
    "text": "私たちはそれらを別の変数、データとして保存している。"
  },
  {
    "start": 4364224,
    "end": 4369604,
    "text": "ああ、本当は今、データを分けるべきなんだよね？"
  },
  {
    "start": 4370464,
    "end": 4376324,
    "text": "というのも、前処理が終わったので、訓練セットとテストセットを取り出し、再び別々にする必要があるからだ。"
  },
  {
    "start": 4376664,
    "end": 4381444,
    "text": "データを分割する。"
  },
  {
    "start": 4383504,
    "end": 4385776,
    "text": "データをシャッフルしたことはない。"
  },
  {
    "start": 4385920,
    "end": 4388344,
    "text": "テストセットはまだ最下位だ。"
  },
  {
    "start": 4388504,
    "end": 4389032,
    "text": "どうする？"
  },
  {
    "start": 4389048,
    "end": 4391154,
    "text": "データ5、データ6"
  },
  {
    "start": 4391894,
    "end": 4399318,
    "text": "テスト・セットはまだ最後の数列なので、データ・ゼロと呼ばれた生データを振り返ることができる。"
  },
  {
    "start": 4399486,
    "end": 4402674,
    "text": "実際には、トレインゼロとテストゼロとして保存していた。"
  },
  {
    "start": 4403134,
    "end": 4412926,
    "text": "したがって、最初の1460行は訓練セットに属し、最後の1459行はテストセットに属する。"
  },
  {
    "start": 4413070,
    "end": 4438776,
    "text": "もし、ここでターゲットとするようなことをすれば、ゼロのインデックスを最大に訓練して、この最大値のインデックスを得ることができる。"
  },
  {
    "start": 4438920,
    "end": 4442564,
    "text": "これがデータ6のトレーニングセットとなる。"
  },
  {
    "start": 4443824,
    "end": 4452404,
    "text": "一方、これを切り替えると、最大プラス1から最後までやると、ああ、問題が起きたとなる。"
  },
  {
    "start": 4454824,
    "end": 4460364,
    "text": "ああ、そうか。"
  },
  {
    "start": 4461744,
    "end": 4466056,
    "text": "ここでの問題は、テストセットの指数をリセットしていないことだ。"
  },
  {
    "start": 4466200,
    "end": 4468192,
    "text": "ここには重複したインデックスがある。"
  },
  {
    "start": 4468288,
    "end": 4473072,
    "text": "これは1460まで上がり、ゼロから再スタートして1459まで上がる。"
  },
  {
    "start": 4473208,
    "end": 4475404,
    "text": "ここで指標をリセットしよう。"
  },
  {
    "start": 4477504,
    "end": 4506304,
    "text": "元々分割していたものを結合した後、reset、index drop trueと入力し、これより下をすべて実行する。"
  },
  {
    "start": 4507084,
    "end": 4513344,
    "text": "同じ数の列があり、これが列車ゼロと一致する列車セットであることがわかる。"
  },
  {
    "start": 4515444,
    "end": 4521184,
    "text": "テストセットには1460行、1460、そして1459と1450がある。"
  },
  {
    "start": 4521744,
    "end": 4526884,
    "text": "これらを削除して、自分のブロックに入れて見よう。"
  },
  {
    "start": 4527784,
    "end": 4534924,
    "text": "この列車をファイナルと呼ぶことにしよう。"
  },
  {
    "start": 4535504,
    "end": 4539204,
    "text": "テストファイナルはこんなことになりそうだ。"
  },
  {
    "start": 4540824,
    "end": 4541724,
    "text": "了解。"
  },
  {
    "start": 4543144,
    "end": 4551544,
    "text": "それじゃ、スケーリングが終わったら、データ7と呼んで、データ6のコピーにしよう。"
  },
  {
    "start": 4553404,
    "end": 4557424,
    "text": "我々は新しいコピーで作業している。"
  },
  {
    "start": 4559804,
    "end": 4560204,
    "text": "分かった。"
  },
  {
    "start": 4560244,
    "end": 4562244,
    "text": "現在、トレーニングファイナルとテストファイナルが行われている。"
  },
  {
    "start": 4562404,
    "end": 4572024,
    "text": "そうだ、もう一度インデックスをリセットしてみよう。"
  },
  {
    "start": 4573144,
    "end": 4579564,
    "text": "リセット、インデックス、ドロップ、トゥルーコピー。"
  },
  {
    "start": 4582344,
    "end": 4582792,
    "text": "そうだね。"
  },
  {
    "start": 4582848,
    "end": 4584124,
    "text": "よし、これだ。"
  },
  {
    "start": 4587944,
    "end": 4590896,
    "text": "よし、これでモデル選択ができる。"
  },
  {
    "start": 4590960,
    "end": 4594684,
    "text": "訓練セットで訓練し、テストセットで評価する。"
  },
  {
    "start": 4596464,
    "end": 4601464,
    "text": "データを渡すのは列車最終便だ。"
  },
  {
    "start": 4602804,
    "end": 4607904,
    "text": "ここで訓練セットだけを使わなければならない理由は、テストセットに関連する目標値がないからだ。"
  },
  {
    "start": 4609404,
    "end": 4616220,
    "text": "さて、ではこのターゲットは......ターゲットが列車セットに取り付けられていることを想定していますね。"
  },
  {
    "start": 4616252,
    "end": 4620864,
    "text": "ここで一時的に、列車の最終とターゲットを連結してみよう。"
  },
  {
    "start": 4621364,
    "end": 4625904,
    "text": "ターゲット変数で対数変換を行ったからだ。"
  },
  {
    "start": 4627304,
    "end": 4630124,
    "text": "私たちはこれらを並べて追加している。"
  },
  {
    "start": 4631264,
    "end": 4638484,
    "text": "としてターゲットを渡す。"
  },
  {
    "start": 4639344,
    "end": 4641604,
    "text": "ログターゲットのシリーズ名とは？"
  },
  {
    "start": 4643224,
    "end": 4644344,
    "text": "それは販売価格と呼ばれるものだ。"
  },
  {
    "start": 4644424,
    "end": 4645844,
    "text": "目標は販売価格である。"
  },
  {
    "start": 4647224,
    "end": 4651256,
    "text": "よし、このデータでセットアップしよう。"
  },
  {
    "start": 4651320,
    "end": 4656460,
    "text": "今はただ、すべてのデータ型が同じであることを確認している。"
  },
  {
    "start": 4656532,
    "end": 4657956,
    "text": "ちゃんと推論しているのは間違いない。"
  },
  {
    "start": 4657980,
    "end": 4659584,
    "text": "エンターキーを押すよ"
  },
  {
    "start": 4660004,
    "end": 4661916,
    "text": "ああ、実はこれをキャンセルさせてくれ。"
  },
  {
    "start": 4661940,
    "end": 4666476,
    "text": "出力が本当に大きいので、これを偽の変数に格納したい。"
  },
  {
    "start": 4666580,
    "end": 4674744,
    "text": "どのモデルがベストなのか、大まかな感覚を得ることができる。"
  },
  {
    "start": 4676204,
    "end": 4683888,
    "text": "サティアム、会えて嬉しいよ。"
  },
  {
    "start": 4683936,
    "end": 4684724,
    "text": "ありがとう。"
  },
  {
    "start": 4686264,
    "end": 4688872,
    "text": "わかった。"
  },
  {
    "start": 4688928,
    "end": 4691844,
    "text": "オーケー、それは時々あるエラーだと思うよ。"
  },
  {
    "start": 4692224,
    "end": 4698904,
    "text": "ノートブックを再起動して、Qフラグなしでインストールしてみます。"
  },
  {
    "start": 4698944,
    "end": 4701224,
    "text": "なぜか以前にもこのエラーが出たことがあるような気がする。"
  },
  {
    "start": 4701264,
    "end": 4703844,
    "text": "再インストールしたらうまくいったようだ。"
  },
  {
    "start": 4705364,
    "end": 4707904,
    "text": "もう一度、ノートを全部見直すことにしよう。"
  },
  {
    "start": 4711604,
    "end": 4714580,
    "text": "その間に、すぐ戻るよ。"
  },
  {
    "start": 4714612,
    "end": 4720704,
    "text": "トイレは済ませたから、これが始まったらすぐに全部走ってすぐに戻るよ。"
  },
  {
    "start": 4755564,
    "end": 4756304,
    "text": "それだ。"
  },
  {
    "start": 4826204,
    "end": 4828984,
    "text": "よし、戻ってきた。"
  },
  {
    "start": 4831924,
    "end": 4835064,
    "text": "エンターキーを押して確認しよう。"
  },
  {
    "start": 4836804,
    "end": 4838244,
    "text": "セットアップが終わったところだ。"
  },
  {
    "start": 4838364,
    "end": 4844824,
    "text": "これが終わったら、あとはモデルを比較するだけだ。"
  },
  {
    "start": 4845724,
    "end": 4859048,
    "text": "つまり、10重クロスバリデーションを使って評価し、スコアの高い順にランキングする。"
  },
  {
    "start": 4859236,
    "end": 4862724,
    "text": "Kフォールドをうまく使っている。"
  },
  {
    "start": 4863704,
    "end": 4880684,
    "text": "線形回帰モデルがうまくいっているように、正則化されていない線形回帰は非常にうまくいっていません。"
  },
  {
    "start": 4882944,
    "end": 4884296,
    "text": "ああ、待つだけだ。"
  },
  {
    "start": 4884360,
    "end": 4890804,
    "text": "あまり時間はかからないと思うが、最終的にはアンサンブルのようなモデルになると思う。"
  },
  {
    "start": 4892024,
    "end": 4894484,
    "text": "ランダムフォレストはあまりうまくいっていないようだ。"
  },
  {
    "start": 4895344,
    "end": 4897432,
    "text": "グラディエント・ブースト、調子は悪くない。"
  },
  {
    "start": 4897568,
    "end": 4904724,
    "text": "直交マッチング追求も面白い。今は極端な勾配ブースティングをやっている。"
  },
  {
    "start": 4907224,
    "end": 4908884,
    "text": "ああ、これが終わるのを待とう。"
  },
  {
    "start": 4913404,
    "end": 4914984,
    "text": "何か質問はあるかい？"
  },
  {
    "start": 4934724,
    "end": 4938664,
    "text": "おそらく30秒から1分くらいだろう。"
  },
  {
    "start": 4939294,
    "end": 4941114,
    "text": "その間に何ができるかわからない。"
  },
  {
    "start": 4950934,
    "end": 4954714,
    "text": "ああ、これは確実にライブが終わった後に使えるようになる。"
  },
  {
    "start": 4965634,
    "end": 4970454,
    "text": "また、ノートブックも公開しておくので、コードを見てほしい。"
  },
  {
    "start": 4975114,
    "end": 4975498,
    "text": "オーケー。"
  },
  {
    "start": 4975506,
    "end": 4980362,
    "text": "複雑なモデルのトレーニングには、思ったより時間がかかるんだ。"
  },
  {
    "start": 4980458,
    "end": 4993842,
    "text": "モデルの最適化、特にハイパーパラメーターの最適化に関しては、さまざまなハイパーパラメーターの組み合わせについて研究を行う予定だからだ。"
  },
  {
    "start": 4994018,
    "end": 4998374,
    "text": "時間がかかることもあれば、数分かかることもある。"
  },
  {
    "start": 4999834,
    "end": 5009694,
    "text": "サーフィンでごまかし、以前見つけた研究を使うかもしれないが、少なくとも1つはやって、その過程を知ってもらいたい。"
  },
  {
    "start": 5013354,
    "end": 5016174,
    "text": "うわぁ、このXGBOOSTは時間がかかるなぁ。"
  },
  {
    "start": 5022364,
    "end": 5029504,
    "text": "今のところ、上位3つのモデルはどれもとてもシンプルだからだ。"
  },
  {
    "start": 5035404,
    "end": 5044804,
    "text": "さてと、その間に何ができるかな。よかったらグラフでも見てください。"
  },
  {
    "start": 5050344,
    "end": 5053044,
    "text": "ログロスの仕組みを知っているか？"
  },
  {
    "start": 5053744,
    "end": 5068120,
    "text": "これは、yをytと呼ぶことにしよう。"
  },
  {
    "start": 5068152,
    "end": 5068884,
    "text": "その通りだ。"
  },
  {
    "start": 5072414,
    "end": 5077594,
    "text": "つまり、これは完全にトピックから外れているんだけど、この列車が走っている間の時間つぶしに使えると思うんだ。"
  },
  {
    "start": 5079334,
    "end": 5090394,
    "text": "基本的に、2値分類のための損失関数が必要な場合、これは最も一般的に使用されるもので、対数損失または2値クロスエントロピー損失と呼ばれるものです。"
  },
  {
    "start": 5090854,
    "end": 5097524,
    "text": "基本的に、この値は0か1のどちらかで、正のラベルに対応しますよね？"
  },
  {
    "start": 5098064,
    "end": 5104084,
    "text": "yがゼロの場合と1の場合の両方を考慮した関数が欲しい。"
  },
  {
    "start": 5104704,
    "end": 5110928,
    "text": "ここでxは予測値である。"
  },
  {
    "start": 5111016,
    "end": 5114728,
    "text": "ゼロに近い予測値で、Y値を得る。"
  },
  {
    "start": 5114776,
    "end": 5117680,
    "text": "予測値が1に近い場合、Y値がいくらか得られる。"
  },
  {
    "start": 5117832,
    "end": 5120044,
    "text": "我々はこの範囲にしか関心がない。"
  },
  {
    "start": 5120544,
    "end": 5137794,
    "text": "実際に使われる関数は、ytプラス1マイナスytに1マイナスxのlnをかけたものだ。"
  },
  {
    "start": 5138454,
    "end": 5140234,
    "text": "それなら、このすべてを否定的にしてしまえ。"
  },
  {
    "start": 5142654,
    "end": 5148458,
    "text": "これは本当にクールな損失関数で、yがゼロに等しいときに前後に切り替わるからだ。"
  },
  {
    "start": 5148606,
    "end": 5152054,
    "text": "そして、予想がゼロに近づくにつれて、損失が減っていく。"
  },
  {
    "start": 5152474,
    "end": 5157294,
    "text": "yが1に等しい場合、予想が1に等しくなるにつれて損失は減少する。"
  },
  {
    "start": 5157594,
    "end": 5164854,
    "text": "yの実際の値に基づいて損失関数が変化するので、これは非常にクールだ。"
  },
  {
    "start": 5166354,
    "end": 5168090,
    "text": "キャップブーストについて見てみよう。"
  },
  {
    "start": 5168122,
    "end": 5169854,
    "text": "これが最後のリグレッサーだと思う。"
  },
  {
    "start": 5174174,
    "end": 5183234,
    "text": "回帰タスクでは、平均二乗誤差を使うだけだ。"
  },
  {
    "start": 5189294,
    "end": 5190190,
    "text": "LinkedInを見たよ。"
  },
  {
    "start": 5190222,
    "end": 5196434,
    "text": "芸大生がいるとおっしゃいましたが、私が機械学習を始めてエキスパートになったきっかけは何ですか？"
  },
  {
    "start": 5198894,
    "end": 5200354,
    "text": "美大生とはどういう意味ですか？"
  },
  {
    "start": 5201664,
    "end": 5204844,
    "text": "そういうことなら、私は美大生ではなかった。"
  },
  {
    "start": 5207104,
    "end": 5208408,
    "text": "私はコンピューター・サイエンスを専攻していた。"
  },
  {
    "start": 5208496,
    "end": 5216004,
    "text": "専攻はコンピューター・サイエンスで、応用数学に転向したのは、その方が自分を引き寄せてくれると感じたからだ。"
  },
  {
    "start": 5216584,
    "end": 5223124,
    "text": "応用数学に進むと、機械学習は本当に役に立つ。"
  },
  {
    "start": 5226884,
    "end": 5227972,
    "text": "はい、ほぼ終わりました。"
  },
  {
    "start": 5228028,
    "end": 5229104,
    "text": "ああ、終わった。"
  },
  {
    "start": 5229844,
    "end": 5231020,
    "text": "よし、これを見てみよう。"
  },
  {
    "start": 5231132,
    "end": 5237796,
    "text": "基本的に、平均二乗誤差は放物線のように見えます。"
  },
  {
    "start": 5237980,
    "end": 5238744,
    "text": "そうだ。"
  },
  {
    "start": 5241004,
    "end": 5241740,
    "text": "いや、心配ないよ。"
  },
  {
    "start": 5241772,
    "end": 5242464,
    "text": "心配ないよ。"
  },
  {
    "start": 5244564,
    "end": 5248428,
    "text": "これは平均二乗誤差であり、最小値は誤差がゼロであることを意味する。"
  },
  {
    "start": 5248476,
    "end": 5260728,
    "text": "つまり、最小値に近づくにつれて、予測値が等しくなり、実際にはゼロになる。"
  },
  {
    "start": 5260856,
    "end": 5267764,
    "text": "遠ざかるにつれて、放物線とは対照的に直線的に上昇していく。"
  },
  {
    "start": 5268064,
    "end": 5269896,
    "text": "さて、話を戻そう。"
  },
  {
    "start": 5270040,
    "end": 5277204,
    "text": "キャットブーストでは、キャットブーストが他を圧倒している。"
  },
  {
    "start": 5278204,
    "end": 5285708,
    "text": "これからやることは、基本的に上位5人くらいのモデルを選んで、一緒にバッグに入れることだ。"
  },
  {
    "start": 5285876,
    "end": 5301784,
    "text": "これは、モデルのスコアを向上させるために本当に便利な方法だ。これが機能する理由は、これらのモデルがそれぞれ、異なる方法で問題を見ているからだろう？"
  },
  {
    "start": 5303134,
    "end": 5307526,
    "text": "キャットブーストはあることをやっているが、ベイジアン・リッジはまったく違うことをやっている。"
  },
  {
    "start": 5307710,
    "end": 5314474,
    "text": "3つの適切な線形回帰モデルがあって、一番上にこの大きなアンサンブル・ブーストツリーモデルがある。"
  },
  {
    "start": 5315294,
    "end": 5319314,
    "text": "つまり、両者はまったく異なるアプローチで問題を見ているようなものだ。"
  },
  {
    "start": 5319774,
    "end": 5328398,
    "text": "もしかしたら、ある例ではcatboostがとてもうまくいっているかもしれないが、他の例ではベイジアン・リッジのほうがうまくいっているかもしれない。"
  },
  {
    "start": 5328486,
    "end": 5337700,
    "text": "ある特定のタイプの例では、あるモデルが成功しているが、別のタイプでは別のモデルが成功している、みたいな。"
  },
  {
    "start": 5337772,
    "end": 5342988,
    "text": "私たちが行っているのは、これらすべてのモデルを使って予測を行い、その結果を平均化することです。"
  },
  {
    "start": 5343156,
    "end": 5353384,
    "text": "だから、最終的に得られる予測は、問題に対するさまざまな見方を反映したものになる。"
  },
  {
    "start": 5354204,
    "end": 5360474,
    "text": "これからやろうとしているのは、キャット・ブースト・ワンだから、一番上にキャット・ブーストをインポートすることだ。"
  },
  {
    "start": 5362694,
    "end": 5371062,
    "text": "さて、この直交マッチング追求モデルが5位に入っていることに気づいた。"
  },
  {
    "start": 5371238,
    "end": 5373874,
    "text": "実は、私はこのモデルについてほとんど知らない。"
  },
  {
    "start": 5374614,
    "end": 5376654,
    "text": "直交マッチング追求。"
  },
  {
    "start": 5376814,
    "end": 5378434,
    "text": "ちょっと調べてみよう。"
  },
  {
    "start": 5382354,
    "end": 5386746,
    "text": "これを理解するには時間がかかる。"
  },
  {
    "start": 5386850,
    "end": 5390134,
    "text": "ここではリニアモデルとしているようだ。"
  },
  {
    "start": 5390874,
    "end": 5394294,
    "text": "それを装着して、どうなるか見てみよう。"
  },
  {
    "start": 5395554,
    "end": 5398934,
    "text": "軽いGBMも来ている。"
  },
  {
    "start": 5400314,
    "end": 5412584,
    "text": "だから、そうだね、そうだね、これらの上位6つ、たぶん123-4568の上位8つを全部、書き出してみよう。"
  },
  {
    "start": 5412704,
    "end": 5415992,
    "text": "ああ、神よ、私がそれらをタイプしてあげましょう。"
  },
  {
    "start": 5416168,
    "end": 5421284,
    "text": "1位はCatboost、2位はBayesian ridge、3位はHuberだ。"
  },
  {
    "start": 5421944,
    "end": 5424432,
    "text": "リッジは単なるリッジ回帰が4番手。"
  },
  {
    "start": 5424568,
    "end": 5426832,
    "text": "そして、この直交マッチングの追求は5番目となる。"
  },
  {
    "start": 5426888,
    "end": 5431568,
    "text": "その後、ライトGBMで6人だったかな？"
  },
  {
    "start": 5431696,
    "end": 5437984,
    "text": "そう、7番はラジアントブースト、8番はエックスブーストだ。"
  },
  {
    "start": 5439244,
    "end": 5440484,
    "text": "よし、そのままにしておこう。"
  },
  {
    "start": 5440524,
    "end": 5441948,
    "text": "私たちはもうこれを見る必要はない。"
  },
  {
    "start": 5442036,
    "end": 5444104,
    "text": "時間がかかるから、もう二度とやりたくない。"
  },
  {
    "start": 5446884,
    "end": 5449116,
    "text": "これは、どのモデルが機能するかを大まかに把握するためのものだ。"
  },
  {
    "start": 5449140,
    "end": 5452144,
    "text": "さて、これからすることは、これらのすべてを一番上にインポートすることだ。"
  },
  {
    "start": 5458724,
    "end": 5475884,
    "text": "Catboostから、catboost regressorをインポート Sklearn線形モデルから、Bayesian Ridge、Huber regressorをインポート。"
  },
  {
    "start": 5476784,
    "end": 5478124,
    "text": "スペルを間違えた。"
  },
  {
    "start": 5480664,
    "end": 5482552,
    "text": "ただ、ロジスティックなんだ。"
  },
  {
    "start": 5482648,
    "end": 5484424,
    "text": "いやいや、単なるリッジ回帰だよ。"
  },
  {
    "start": 5484464,
    "end": 5485044,
    "text": "そうだろう？"
  },
  {
    "start": 5485804,
    "end": 5493304,
    "text": "それから、直交マッチングの追求もある。"
  },
  {
    "start": 5495204,
    "end": 5511544,
    "text": "次に、SKから、light GBM import LGBM regressorから学習する。"
  },
  {
    "start": 5513994,
    "end": 5518986,
    "text": "from Xgboost import XGbregressor."
  },
  {
    "start": 5519130,
    "end": 5524610,
    "text": "これが、これから使うすべてのモデルだ。"
  },
  {
    "start": 5524802,
    "end": 5527570,
    "text": "実際にいくつ使うべきなのかはわからない。"
  },
  {
    "start": 5527682,
    "end": 5534654,
    "text": "いろいろ試してみるのもいいけれど、キャットブーストの予想をして、リーダーボードでスコアを確認してみよう。"
  },
  {
    "start": 5535754,
    "end": 5537894,
    "text": "これがベースラインモデルのようなものになるだろう。"
  },
  {
    "start": 5543484,
    "end": 5546344,
    "text": "ベースラインモデルはcatboostリグレッサーとなる。"
  },
  {
    "start": 5549684,
    "end": 5553224,
    "text": "かなり出力されるので、verboseを0に設定するつもりだ。"
  },
  {
    "start": 5555964,
    "end": 5557388,
    "text": "そうだね、儀式。"
  },
  {
    "start": 5557436,
    "end": 5564024,
    "text": "PIキャロットは非常に便利で、特にどのモデルが機能するのかを素早く確認したいときに役立つ。"
  },
  {
    "start": 5565584,
    "end": 5572524,
    "text": "さっき言ったように、PIカラットにはいろいろな機能があるんだけど、僕は主にこの機能のために使っているんだ。"
  },
  {
    "start": 5574824,
    "end": 5583456,
    "text": "このモデルを、トレーニングセットであるトレインファイナルに当てはめ、ログターゲットで予測する。"
  },
  {
    "start": 5583520,
    "end": 5585764,
    "text": "このログ変換をターゲットに適用したことを思い出してほしい。"
  },
  {
    "start": 5586544,
    "end": 5588044,
    "text": "申し訳ない。"
  },
  {
    "start": 5591444,
    "end": 5594476,
    "text": "それが終わり次第、評価する。"
  },
  {
    "start": 5594620,
    "end": 5607788,
    "text": "しかし、ここでモデルを評価するためには、テストセットがありませんし、どのテストセットを使うかによってパフォーマンスに大きなばらつきが出るので、1つの訓練テスト分割だけを行うことはしたくありません。"
  },
  {
    "start": 5607876,
    "end": 5610228,
    "text": "そのためにクロスバリデーションを使うつもりだ。"
  },
  {
    "start": 5610356,
    "end": 5626894,
    "text": "Sklearn modelselection import kfoldとCrossvalscoreをインポートする。"
  },
  {
    "start": 5628274,
    "end": 5629974,
    "text": "実にクールな機能だ。"
  },
  {
    "start": 5631074,
    "end": 5632574,
    "text": "その方法をお見せしよう。"
  },
  {
    "start": 5635034,
    "end": 5646914,
    "text": "基本的に、私たちが評価するためにできることは、私たちのモデルを使って、クロスバールスコアを呼び出すことです。"
  },
  {
    "start": 5648494,
    "end": 5655554,
    "text": "クロスバールスコアは推定量とデータを取り込み、yも取り込む必要がある。"
  },
  {
    "start": 5656054,
    "end": 5667954,
    "text": "推定量はベースラインモデル、xはtrain final、targetはlog targetとする。"
  },
  {
    "start": 5669344,
    "end": 5680164,
    "text": "それから、スコアリング・メソッドも渡します。この場合、Sklearnのスコアラーを見てみましょう。"
  },
  {
    "start": 5682064,
    "end": 5684216,
    "text": "使える得点はたくさんある。"
  },
  {
    "start": 5684360,
    "end": 5685764,
    "text": "MSEを使うつもりだ。"
  },
  {
    "start": 5687344,
    "end": 5695444,
    "text": "平均二乗誤差を使いたい場合は、実際には負の平均二乗誤差を使う。"
  },
  {
    "start": 5695484,
    "end": 5709244,
    "text": "その理由は、デフォルトでは常に誤差を最小化することで機能するが、申し訳ないが、常にメトリックを最大化することで機能するからだ。"
  },
  {
    "start": 5709284,
    "end": 5710064,
    "text": "私たちはそれを使っている。"
  },
  {
    "start": 5710444,
    "end": 5718544,
    "text": "というのも、平均二乗誤差は最小化すべき指標であるため、代わりに最大化できるようにマイナスを適用しているだけなのだ。"
  },
  {
    "start": 5719344,
    "end": 5723204,
    "text": "負の平均二乗誤差は、私たちがここで求めているものだ。"
  },
  {
    "start": 5725224,
    "end": 5729784,
    "text": "スコアは負の平均二乗誤差となる。"
  },
  {
    "start": 5729864,
    "end": 5732644,
    "text": "の場合、使用するクロスバリデーションも指定する。"
  },
  {
    "start": 5733064,
    "end": 5739280,
    "text": "ここで新しいk foldオブジェクトを作成し、10倍のクロスバリデーションにする。"
  },
  {
    "start": 5739352,
    "end": 5747324,
    "text": "n分割は10に等しいので、kfをクロス検証オブジェクトとして渡す。"
  },
  {
    "start": 5747794,
    "end": 5754654,
    "text": "つまり、これは基本的に列車の決勝にクロス・バリデーションを適用するということだ。"
  },
  {
    "start": 5756074,
    "end": 5763410,
    "text": "各スプリットをテストセットとして使用し、残りの9スプリットをトレインセットとして使用する。"
  },
  {
    "start": 5763522,
    "end": 5769034,
    "text": "このクロスバールスコアでは、それぞれの実行結果を返す。"
  },
  {
    "start": 5769194,
    "end": 5774982,
    "text": "これを結果に保存してから実行しよう。"
  },
  {
    "start": 5775078,
    "end": 5788434,
    "text": "したがって、最後のresultsには、クロスバリデーションの各実行における負の平均2乗誤差のリストが含まれることになる。"
  },
  {
    "start": 5790654,
    "end": 5800774,
    "text": "ただ、10種類のモデルを10回、折り目ごとに作り直さなければならないので、時間がかかっているだけなんだ。"
  },
  {
    "start": 5801674,
    "end": 5807218,
    "text": "最後にできることは、結果の平均をとり、平均をプロットすることだ。"
  },
  {
    "start": 5807266,
    "end": 5812094,
    "text": "結果をヒストグラムのようにプロットすることもできるだろう。"
  },
  {
    "start": 5813474,
    "end": 5814614,
    "text": "そうしよう。"
  },
  {
    "start": 5815914,
    "end": 5817854,
    "text": "新しいpyplot図を作ります。"
  },
  {
    "start": 5819714,
    "end": 5821218,
    "text": "plt図。"
  },
  {
    "start": 5821306,
    "end": 5822306,
    "text": "ああ、完成したのを見ることができる。"
  },
  {
    "start": 5822330,
    "end": 5823294,
    "text": "それを見てみよう。"
  },
  {
    "start": 5823854,
    "end": 5825238,
    "text": "ここに結果がある。"
  },
  {
    "start": 5825286,
    "end": 5828686,
    "text": "10回実行するごとに、負の平均二乗誤差が得られる。"
  },
  {
    "start": 5828790,
    "end": 5832326,
    "text": "実際には、平均二乗誤差として見ることができるように、これをマイナスにすべきなのだ。"
  },
  {
    "start": 5832470,
    "end": 5835234,
    "text": "それぞれの平均二乗誤差は異なる。"
  },
  {
    "start": 5836294,
    "end": 5837550,
    "text": "これを評価したい。"
  },
  {
    "start": 5837582,
    "end": 5843674,
    "text": "これをヒストグラムにプロットして、よりきれいに視覚化してみよう。"
  },
  {
    "start": 5844334,
    "end": 5847474,
    "text": "サイズ16×10の新しいフィギュアを作る。"
  },
  {
    "start": 5849514,
    "end": 5853914,
    "text": "じゃあ、こうしよう。"
  },
  {
    "start": 5854074,
    "end": 5856454,
    "text": "名前と。"
  },
  {
    "start": 5860674,
    "end": 5865426,
    "text": "じゃあ、snsのdistplotはやらないことにしよう。"
  },
  {
    "start": 5865450,
    "end": 5865754,
    "text": "もう一度言う。"
  },
  {
    "start": 5865834,
    "end": 5867334,
    "text": "またディストプロットしよう。"
  },
  {
    "start": 5867714,
    "end": 5872614,
    "text": "ただし、これからやることは、その結果をプロットすることだ。"
  },
  {
    "start": 5874154,
    "end": 5878730,
    "text": "これは現在考えようとしているヒストグラムに過ぎない。"
  },
  {
    "start": 5878802,
    "end": 5880186,
    "text": "よし、こうしよう。"
  },
  {
    "start": 5880290,
    "end": 5881934,
    "text": "クデは真に等しい。"
  },
  {
    "start": 5887594,
    "end": 5895770,
    "text": "つまり、これは基本的に各走行の平均二乗誤差を示しているだけなんだ。"
  },
  {
    "start": 5895802,
    "end": 5898534,
    "text": "ビンの幅を変更してみよう。"
  },
  {
    "start": 5904694,
    "end": 5906154,
    "text": "それはダメだ。"
  },
  {
    "start": 5906534,
    "end": 5907914,
    "text": "ああ、ゴミ箱の数か。"
  },
  {
    "start": 5909334,
    "end": 5910634,
    "text": "10ビンにしよう。"
  },
  {
    "start": 5911534,
    "end": 5912510,
    "text": "オーケー。"
  },
  {
    "start": 5912702,
    "end": 5913470,
    "text": "分かった。"
  },
  {
    "start": 5913622,
    "end": 5914518,
    "text": "これは少し奇妙だ。"
  },
  {
    "start": 5914566,
    "end": 5917238,
    "text": "これが何でもいいのかどうかは分からない。"
  },
  {
    "start": 5917326,
    "end": 5921342,
    "text": "とにかく、結果はさまざまだということがおわかりいただけるだろう。"
  },
  {
    "start": 5921518,
    "end": 5930298,
    "text": "私がしたいことは、平均二乗誤差を得るために負の結果のnumpy平均を使用することです。"
  },
  {
    "start": 5930346,
    "end": 5933894,
    "text": "これはクロスバリデーションのすべてのフォールドにわたる平均二乗誤差である。"
  },
  {
    "start": 5935154,
    "end": 5935546,
    "text": "分かった。"
  },
  {
    "start": 5935570,
    "end": 5954074,
    "text": "なぜなら、まず第一に、これはすでに元の目標変数の2乗単位であることを忘れてはならないからだ。"
  },
  {
    "start": 5954234,
    "end": 5958498,
    "text": "この誤差を二乗平均平方根まで下げることができる。"
  },
  {
    "start": 5958666,
    "end": 5960254,
    "text": "これがRMSEだ。"
  },
  {
    "start": 5960634,
    "end": 5964774,
    "text": "しかし、これも元の販売価格の欄にはない。"
  },
  {
    "start": 5965274,
    "end": 5972854,
    "text": "その理由は、私たちの目標を見て、ログターゲットで予測を立てたからです。"
  },
  {
    "start": 5973514,
    "end": 5976694,
    "text": "これは元のターゲットの対数変換である。"
  },
  {
    "start": 5977114,
    "end": 5982824,
    "text": "これは、ログの目標範囲内で予測される値として出てきている。"
  },
  {
    "start": 5984164,
    "end": 5989988,
    "text": "その代わりに私たちが望むのは、それを元の目標値に戻すことである。"
  },
  {
    "start": 5990076,
    "end": 5991700,
    "text": "それを指数化する。"
  },
  {
    "start": 5991812,
    "end": 5997304,
    "text": "それをNumpyでExpすることで、元のターゲットに引き上げることができる。"
  },
  {
    "start": 5997724,
    "end": 5999636,
    "text": "これは本当にめちゃくちゃいい。"
  },
  {
    "start": 5999700,
    "end": 6010024,
    "text": "RMSE（平均誤差）が1.12であることがおわかりいただけるだろう。"
  },
  {
    "start": 6010804,
    "end": 6014348,
    "text": "最低額が39,000ドルであることがわかるだろう。"
  },
  {
    "start": 6014516,
    "end": 6018612,
    "text": "最大値は755,000人、中央値は163,000人。"
  },
  {
    "start": 6018668,
    "end": 6020524,
    "text": "ここはかなり大きな範囲だ。"
  },
  {
    "start": 6020604,
    "end": 6025024,
    "text": "平均エラーは約1。"
  },
  {
    "start": 6026804,
    "end": 6028148,
    "text": "我々はもっとうまくやれる。"
  },
  {
    "start": 6028236,
    "end": 6028984,
    "text": "私はそう思う。"
  },
  {
    "start": 6032264,
    "end": 6033968,
    "text": "提出すればいいと思う。"
  },
  {
    "start": 6034056,
    "end": 6035244,
    "text": "様子を見よう。"
  },
  {
    "start": 6036624,
    "end": 6038736,
    "text": "では、提出手続きをしよう。"
  },
  {
    "start": 6038920,
    "end": 6042844,
    "text": "提出物を作りたい。"
  },
  {
    "start": 6044744,
    "end": 6049084,
    "text": "提出書類を作成する際には、提出書類のサンプルを参考にして、どのような書式にすべきかを確認する必要がある。"
  },
  {
    "start": 6050464,
    "end": 6051992,
    "text": "このようになるはずだ。"
  },
  {
    "start": 6052168,
    "end": 6062428,
    "text": "先ほどテストIDをテストIDに保存しましたが、この予測値も欲しいのです。"
  },
  {
    "start": 6062476,
    "end": 6063344,
    "text": "最終テスト。"
  },
  {
    "start": 6064444,
    "end": 6066384,
    "text": "申し訳ないが、それはベースラインモデルと呼ばれるものだ。"
  },
  {
    "start": 6068524,
    "end": 6069624,
    "text": "これだ。"
  },
  {
    "start": 6070604,
    "end": 6075468,
    "text": "では、ベースライン・モデルだ。"
  },
  {
    "start": 6075556,
    "end": 6081224,
    "text": "これらの予測は、元のユニットの対数で再度行われる。"
  },
  {
    "start": 6081604,
    "end": 6088406,
    "text": "それを指数化して、適切な単位に戻す。"
  },
  {
    "start": 6088590,
    "end": 6093354,
    "text": "これを予想と呼ぶことにする。"
  },
  {
    "start": 6096534,
    "end": 6100714,
    "text": "さて、テストIDと予測を組み合わせてみよう。"
  },
  {
    "start": 6103494,
    "end": 6112274,
    "text": "pandasはテストIDと予測を軸1に沿って連結する。"
  },
  {
    "start": 6114214,
    "end": 6115926,
    "text": "シリーズ化する必要がある。"
  },
  {
    "start": 6115990,
    "end": 6117594,
    "text": "これをシリーズ化しよう。"
  },
  {
    "start": 6118494,
    "end": 6120630,
    "text": "カラム名が正しいことを確認しなければならない。"
  },
  {
    "start": 6120782,
    "end": 6123354,
    "text": "この列の名前は販売価格でなければならない。"
  },
  {
    "start": 6127134,
    "end": 6127806,
    "text": "これだ。"
  },
  {
    "start": 6127830,
    "end": 6129678,
    "text": "今はこんな感じだ。"
  },
  {
    "start": 6129766,
    "end": 6130134,
    "text": "そうだね。"
  },
  {
    "start": 6130214,
    "end": 6134510,
    "text": "100の1459を214、59を2。"
  },
  {
    "start": 6134622,
    "end": 6137354,
    "text": "それぞれのIDについて予測を立てた。"
  },
  {
    "start": 6138504,
    "end": 6149764,
    "text": "よし、では最終予想ということで、これを提出としよう。"
  },
  {
    "start": 6153664,
    "end": 6155004,
    "text": "提出物を見てみよう。"
  },
  {
    "start": 6155584,
    "end": 6159924,
    "text": "実際に大会に提出するには、submissionと入力するだけだ。"
  },
  {
    "start": 6161024,
    "end": 6168264,
    "text": "2つのCSVは、私たちが望むファイル・パスで渡される。"
  },
  {
    "start": 6171084,
    "end": 6178540,
    "text": "の場合、これらのインデックスが新しいカラムにならないように、index equals falseを含めることにする。"
  },
  {
    "start": 6178692,
    "end": 6185500,
    "text": "headerはtrueに等しい。"
  },
  {
    "start": 6185692,
    "end": 6186588,
    "text": "よし、これを実行しよう。"
  },
  {
    "start": 6186636,
    "end": 6200914,
    "text": "作業ディレクトリにsubmission CSVというものがあるので、これをダウンロードし、ここに新しいフォルダを作ってstreamと呼んで保存する。"
  },
  {
    "start": 6202814,
    "end": 6208594,
    "text": "ここで、このOOoサブミッションをベースラインサブミッションと呼ぶことにしよう。"
  },
  {
    "start": 6209894,
    "end": 6212954,
    "text": "よし、提出物は受け取った。"
  },
  {
    "start": 6213334,
    "end": 6222504,
    "text": "実際のリーダーボードに戻り、予測の送信を押して、その送信をここにドラッグしよう。"
  },
  {
    "start": 6223364,
    "end": 6225544,
    "text": "これはあくまでもベースライン・モデルである。"
  },
  {
    "start": 6226804,
    "end": 6229744,
    "text": "提出して、何が出てくるか見てみよう。"
  },
  {
    "start": 6230244,
    "end": 6233564,
    "text": "で、スコアは0.1254となった。"
  },
  {
    "start": 6233724,
    "end": 6241428,
    "text": "さて、リーダーボードの順位に飛んでみよう。"
  },
  {
    "start": 6241476,
    "end": 6242372,
    "text": "見ちゃダメだよ。"
  },
  {
    "start": 6242468,
    "end": 6247224,
    "text": "1254を見るのであれば、それがどこに来るのかを見てみたい。"
  },
  {
    "start": 6249364,
    "end": 6256732,
    "text": "それを読み込んで、それが表示されるところまでスクロールするんだ。"
  },
  {
    "start": 6256868,
    "end": 6260224,
    "text": "ちょうどこの辺りのようだ。"
  },
  {
    "start": 6261884,
    "end": 6263024,
    "text": "ちょうどこの辺りだ。"
  },
  {
    "start": 6264204,
    "end": 6265704,
    "text": "1254."
  },
  {
    "start": 6266004,
    "end": 6273616,
    "text": "今は1700位くらいだけど、もっと上に行きたいし、できれば1000位以内に入りたいね。"
  },
  {
    "start": 6273800,
    "end": 6279684,
    "text": "これを改善する大きな方法は、アンサンブルを使うことだ。"
  },
  {
    "start": 6280424,
    "end": 6282776,
    "text": "だから、今は1つのモデルしか使っていない。"
  },
  {
    "start": 6282800,
    "end": 6283952,
    "text": "キャットブーストモデルだ。"
  },
  {
    "start": 6284048,
    "end": 6286600,
    "text": "その中で最高のモデルであることは間違いない。"
  },
  {
    "start": 6286792,
    "end": 6293044,
    "text": "他のトップモデルを使って予測に影響を与えれば、より良い結果が得られるだろう。"
  },
  {
    "start": 6294524,
    "end": 6296596,
    "text": "そうしよう"
  },
  {
    "start": 6296780,
    "end": 6302304,
    "text": "ベースライン・モデルの代わりに、このベースライン・モデルを保存しておこう。"
  },
  {
    "start": 6303204,
    "end": 6304424,
    "text": "そんなことはしたくない。"
  },
  {
    "start": 6304724,
    "end": 6306148,
    "text": "実は、クイックバージョンとしてならできるんだ。"
  },
  {
    "start": 6306196,
    "end": 6307064,
    "text": "そうしよう。"
  },
  {
    "start": 6309964,
    "end": 6328324,
    "text": "バギング・アンサンブルとは、たくさんのモデルを並列に平均化し、並列にトレーニングし、予測値を組み合わせることです。"
  },
  {
    "start": 6329864,
    "end": 6332728,
    "text": "これからやることは、たくさんのモデルを作ることだ。"
  },
  {
    "start": 6332816,
    "end": 6340124,
    "text": "いつもやっているように、モデル名と実際のモデルを対応させる辞書を作ろう。"
  },
  {
    "start": 6341584,
    "end": 6342976,
    "text": "この場合"
  },
  {
    "start": 6343120,
    "end": 6344240,
    "text": "ここに保存したっけ？"
  },
  {
    "start": 6344272,
    "end": 6344844,
    "text": "いや。"
  },
  {
    "start": 6345764,
    "end": 6349452,
    "text": "さて、ここからの値はまだある。"
  },
  {
    "start": 6349548,
    "end": 6359384,
    "text": "catboost、Bayesian ridge、hubregression ridge regression、この直交マッチング追求、IgBM gradient boosting、extreme gradient boostingがある。"
  },
  {
    "start": 6359804,
    "end": 6361904,
    "text": "その中から5人を選ぶことになると思う。"
  },
  {
    "start": 6363964,
    "end": 6368864,
    "text": "私がやりたいことは、これを省くことだと思う。"
  },
  {
    "start": 6370384,
    "end": 6371008,
    "text": "分からないよ。"
  },
  {
    "start": 6371056,
    "end": 6372644,
    "text": "実際、このままにしておいた方がいいかもしれない。"
  },
  {
    "start": 6373144,
    "end": 6377336,
    "text": "両方試してみるつもりだけどね。"
  },
  {
    "start": 6377520,
    "end": 6379248,
    "text": "ええ、ではまずトップ5から始めましょう。"
  },
  {
    "start": 6379296,
    "end": 6380164,
    "text": "これをやろう。"
  },
  {
    "start": 6380544,
    "end": 6381764,
    "text": "ここに"
  },
  {
    "start": 6384264,
    "end": 6387484,
    "text": "ああ、これだけコピーしておこう。"
  },
  {
    "start": 6390384,
    "end": 6399324,
    "text": "catboostがあるので、Boseのcatboostリグレッサーをゼロに設定する。"
  },
  {
    "start": 6399364,
    "end": 6424724,
    "text": "Brと呼ぶベイズ・リッジ・モデル、Huberと呼ぶフーバー回帰リッジ・モデル、OMPと呼ぶ直交マッチング追求モデルがある。"
  },
  {
    "start": 6427304,
    "end": 6438804,
    "text": "さて、モデルの辞書ができたので、モデルの項目で名前とモデルについてトレーニングすることができる。"
  },
  {
    "start": 6440784,
    "end": 6453864,
    "text": "まずモデルをトレーニングし、train finalでモデルフィットを行い、ターゲットとしてlog targetを渡す。"
  },
  {
    "start": 6456524,
    "end": 6465544,
    "text": "よし、全員トレーニングが終わったら、それぞれの選手を評価して、比較してみよう。"
  },
  {
    "start": 6467964,
    "end": 6469584,
    "text": "そうだな。"
  },
  {
    "start": 6471124,
    "end": 6492554,
    "text": "これから行うのは、resultsという空のディクショナリを作成することです。これは、各モデルの結果に対応するディクショナリで、最初は空で始めます。そして、modelsの各項目にある名前とモデルについて、ベースラインモデルの代わりに渡したモデルを使用してクロスバリデーションのスコアを計算します。"
  },
  {
    "start": 6493654,
    "end": 6502274,
    "text": "そして、resultsの要素に、キーとなる名前を設定する。"
  },
  {
    "start": 6503874,
    "end": 6504498,
    "text": "ああ、申し訳ない。"
  },
  {
    "start": 6504546,
    "end": 6515014,
    "text": "この結果をresultと呼び、その名前をインデックスとして辞書にセットする。"
  },
  {
    "start": 6515594,
    "end": 6516754,
    "text": "よし、これでいいと思う。"
  },
  {
    "start": 6516834,
    "end": 6517410,
    "text": "これを実行しよう。"
  },
  {
    "start": 6517442,
    "end": 6522814,
    "text": "すべてのモデルを調べて、それぞれに10倍のトレーニングをしなければならないからだ。"
  },
  {
    "start": 6523434,
    "end": 6528694,
    "text": "そうなればいいんだけど......。"
  },
  {
    "start": 6529524,
    "end": 6533744,
    "text": "ええ、適正な価値という点では欲しいですから。"
  },
  {
    "start": 6534444,
    "end": 6546504,
    "text": "負の符号を反転させた後に平方根をとり、指数化して元のターゲット変数に換算する。"
  },
  {
    "start": 6547604,
    "end": 6556404,
    "text": "よし、それを実行して、並行して分布を見てみよう。"
  },
  {
    "start": 6556864,
    "end": 6561004,
    "text": "私たちはこんなことをやっていたんだ。"
  },
  {
    "start": 6562424,
    "end": 6568600,
    "text": "これからやることは、名前とモデルについて、すべてのモデルを反復処理することだ。"
  },
  {
    "start": 6568792,
    "end": 6579244,
    "text": "それぞれの分布をプロットし、最後に \"プロット・ショー \"と呼ぶことにする。"
  },
  {
    "start": 6580204,
    "end": 6584664,
    "text": "cvエラー分布というタイトルをつけよう。"
  },
  {
    "start": 6587684,
    "end": 6598344,
    "text": "分布を見ることは、すべてのクロス検証フォールドの平均を取るよりも有用である。"
  },
  {
    "start": 6599604,
    "end": 6609424,
    "text": "さて、では結果の代わりにこの辞書を使おう。"
  },
  {
    "start": 6610724,
    "end": 6622524,
    "text": "Results には、各モデルと、元のターゲット変数の単位でのクロスバリデーションの rms の配列が含まれます。"
  },
  {
    "start": 6622684,
    "end": 6640324,
    "text": "このディクショナリを取り出し、その名前をインデクサーとして取り出し、その名前に関連する値を結果にプロットします。"
  },
  {
    "start": 6642584,
    "end": 6645084,
    "text": "どう見えるかな"
  },
  {
    "start": 6647224,
    "end": 6649404,
    "text": "ああ、別々にプロットしているんだ。"
  },
  {
    "start": 6654744,
    "end": 6656164,
    "text": "なぜそうなるのか？"
  },
  {
    "start": 6661684,
    "end": 6663584,
    "text": "ラベルを貼ってみたらどうだろう？"
  },
  {
    "start": 6665684,
    "end": 6667784,
    "text": "私たちはそれを名前としてラベルをつけることができる。"
  },
  {
    "start": 6669964,
    "end": 6671004,
    "text": "うわぁ、変だ。"
  },
  {
    "start": 6671164,
    "end": 6673304,
    "text": "なぜこのようなことになるのか、実はよくわからない。"
  },
  {
    "start": 6674644,
    "end": 6676424,
    "text": "二人が一緒にいるところを見たい。"
  },
  {
    "start": 6680124,
    "end": 6681140,
    "text": "試してみよう。"
  },
  {
    "start": 6681252,
    "end": 6685294,
    "text": "前に書いたコードがあるんだ。"
  },
  {
    "start": 6686834,
    "end": 6688494,
    "text": "ああ、これはめちゃくちゃだ。"
  },
  {
    "start": 6689474,
    "end": 6690734,
    "text": "ちょっと待って。"
  },
  {
    "start": 6693154,
    "end": 6697154,
    "text": "私たちはお互いを見ることができる。"
  },
  {
    "start": 6697234,
    "end": 6698586,
    "text": "よし、この件は忘れよう。"
  },
  {
    "start": 6698730,
    "end": 6699946,
    "text": "このことは忘れよう。"
  },
  {
    "start": 6699970,
    "end": 6701130,
    "text": "視覚化は忘れた。"
  },
  {
    "start": 6701282,
    "end": 6704578,
    "text": "実際には、代わりに要約統計で見ることができる。"
  },
  {
    "start": 6704746,
    "end": 6736674,
    "text": "resultsでやりたいことは、resultsのgetitemsのnameとmodelについて、つまりitemsについて、それぞれの平均をプリントアウトする。"
  },
  {
    "start": 6737494,
    "end": 6741314,
    "text": "numpy 平均結果。"
  },
  {
    "start": 6743454,
    "end": 6748194,
    "text": "標準偏差も出力する。"
  },
  {
    "start": 6753814,
    "end": 6754674,
    "text": "分かった。"
  },
  {
    "start": 6762954,
    "end": 6765054,
    "text": "よし、最初にこれをやっておこう。"
  },
  {
    "start": 6772994,
    "end": 6773802,
    "text": "よし、いくぞ。"
  },
  {
    "start": 6773858,
    "end": 6779538,
    "text": "catboostの平均は1.12、標準偏差の分散は0.02である。"
  },
  {
    "start": 6779706,
    "end": 6784294,
    "text": "Huber回帰が他のものに比べて非常に分散が大きいことに気づくだろう。"
  },
  {
    "start": 6785854,
    "end": 6788958,
    "text": "どうやらフーバーはあまり調子が良くないようだ。"
  },
  {
    "start": 6789006,
    "end": 6790754,
    "text": "平均値もかなり高い。"
  },
  {
    "start": 6791094,
    "end": 6796074,
    "text": "しかし、他の選手たちはなかなか健闘しており、特に平均値が最も低いcatboostは好調だ。"
  },
  {
    "start": 6796494,
    "end": 6799514,
    "text": "これは、すべてのフォールドにわたる平均誤差である。"
  },
  {
    "start": 6800254,
    "end": 6801714,
    "text": "よし、では見てみよう。"
  },
  {
    "start": 6802774,
    "end": 6807846,
    "text": "フーバーの成績があまりに悪いので、代わりに別のモデルを使うことを検討するかもしれない。"
  },
  {
    "start": 6808030,
    "end": 6813212,
    "text": "次に選んだのはライトGBMだった。"
  },
  {
    "start": 6813348,
    "end": 6816980,
    "text": "それがうまくいったかどうか、その方がうまくいくかどうか、行ってみるつもりだ。"
  },
  {
    "start": 6817172,
    "end": 6823624,
    "text": "これをLGBMに置き換えて、LGBMリグレッサーとする。"
  },
  {
    "start": 6825524,
    "end": 6827064,
    "text": "lightgbmと呼ぼう。"
  },
  {
    "start": 6828924,
    "end": 6835624,
    "text": "これらを再フィッティングして、結果を再計算してみるつもりだ。"
  },
  {
    "start": 6838304,
    "end": 6840284,
    "text": "これはもっとゆっくりとしたプロセスだ。"
  },
  {
    "start": 6840584,
    "end": 6849084,
    "text": "この作業を徹底するため、時間がかかると思うが、どのようにアンサンブルを行うのかお見せしよう。"
  },
  {
    "start": 6849904,
    "end": 6852764,
    "text": "ここで、予測を組み合わせる。"
  },
  {
    "start": 6855144,
    "end": 6858764,
    "text": "これからやることは、それぞれのモデルを取り上げることだ。"
  },
  {
    "start": 6859664,
    "end": 6873624,
    "text": "モデル辞書には、名前とフィット後のモデルが格納される。"
  },
  {
    "start": 6873964,
    "end": 6879424,
    "text": "これは実際のcatboostモデルを参照し、testfinalでpredictを呼び出すことができる。"
  },
  {
    "start": 6880164,
    "end": 6884836,
    "text": "これは、catboostモデルを使ったテスト・セットの予測値である。"
  },
  {
    "start": 6884980,
    "end": 6890324,
    "text": "そしてまた、前にやったように、予測値を指数化して元の単位に戻さなければならない。"
  },
  {
    "start": 6892024,
    "end": 6894764,
    "text": "それなら、僕らがやることはウェイトをつけることだ。"
  },
  {
    "start": 6895824,
    "end": 6900324,
    "text": "今は1.0を掛けるだけですが、これから足します。"
  },
  {
    "start": 6901264,
    "end": 6910404,
    "text": "これを最終的な予想と呼んで、ここに入れよう。"
  },
  {
    "start": 6910984,
    "end": 6918704,
    "text": "次のモデルはベイズリッジだ。"
  },
  {
    "start": 6919604,
    "end": 6922184,
    "text": "これらを0.5で加重するとしよう。"
  },
  {
    "start": 6923564,
    "end": 6929684,
    "text": "つまり、予測の半分はcatboostによるもので、半分はベイズリッジによるものだ。"
  },
  {
    "start": 6929804,
    "end": 6932860,
    "text": "他のモデルもたくさん追加するつもりだ。"
  },
  {
    "start": 6933012,
    "end": 6936464,
    "text": "5つやって、これらをすべて0.2に設定する。"
  },
  {
    "start": 6937044,
    "end": 6942744,
    "text": "ベイズ・リッジもあるし、巨大なユーバーもある。"
  },
  {
    "start": 6945284,
    "end": 6951224,
    "text": "次に通常のリッジ回帰を行い、最後にOMPを行います。"
  },
  {
    "start": 6953204,
    "end": 6962740,
    "text": "これは、5つの異なるモデルからの予測を組み合わせ、それぞれに20％の重み付けをし、それらを組み合わせて最終的な予測を作っている。"
  },
  {
    "start": 6962892,
    "end": 6967290,
    "text": "これらの予測は、問題に対するさまざまな見方によって左右される。"
  },
  {
    "start": 6967452,
    "end": 6973714,
    "text": "以前は1つのキャップ・ブースト・モデルだけで、問題を見る方法は1つに限られていた。"
  },
  {
    "start": 6974454,
    "end": 6976234,
    "text": "さて、結果が出た。"
  },
  {
    "start": 6977534,
    "end": 6978834,
    "text": "もう一度見てみよう。"
  },
  {
    "start": 6979494,
    "end": 6983870,
    "text": "オーケー、それじゃあ、軽いGBMは実際、我々のヒューバーがやっていたことよりずっとうまくいっているようだね。"
  },
  {
    "start": 6984062,
    "end": 6986674,
    "text": "分散ははるかに小さく、平均ははるかに小さい。"
  },
  {
    "start": 6987574,
    "end": 6989874,
    "text": "この5人である程度満足している。"
  },
  {
    "start": 6990654,
    "end": 6991582,
    "text": "そうしよう"
  },
  {
    "start": 6991678,
    "end": 6993394,
    "text": "最終的な予想はこれからだ。"
  },
  {
    "start": 7000944,
    "end": 7003800,
    "text": "以前と比べると、かなり良くなっているのがわかるだろう。"
  },
  {
    "start": 7003872,
    "end": 7005324,
    "text": "かなり似ている。"
  },
  {
    "start": 7006344,
    "end": 7007764,
    "text": "こっちの方がいいのかな"
  },
  {
    "start": 7011744,
    "end": 7013604,
    "text": "よし、やろう。"
  },
  {
    "start": 7016944,
    "end": 7021876,
    "text": "今回は別の最終予想を使って、提出されたものを再現する。"
  },
  {
    "start": 7022060,
    "end": 7024904,
    "text": "ああ、ここでこのように指数化する必要はない。"
  },
  {
    "start": 7025524,
    "end": 7026940,
    "text": "実は、私たちがすでに作ったんだ。"
  },
  {
    "start": 7027052,
    "end": 7029104,
    "text": "さて、これが新しい提出書類だ。"
  },
  {
    "start": 7029404,
    "end": 7039744,
    "text": "では、これを実行し、新しい投稿ファイルをダウンロードしよう。これを「0、0、1投稿」と呼ぶことにして、この投稿がどうなるか見てみよう。"
  },
  {
    "start": 7042644,
    "end": 7046952,
    "text": "予想を提出し、このまま引き延ばすつもりだ。"
  },
  {
    "start": 7047008,
    "end": 7048044,
    "text": "ゼロ、ゼロ、1"
  },
  {
    "start": 7048944,
    "end": 7052624,
    "text": "これはアンサンブルになるのか、それともバギングになるのか？"
  },
  {
    "start": 7052784,
    "end": 7056524,
    "text": "5つのモデルによるアンサンブルモデル。"
  },
  {
    "start": 7058104,
    "end": 7059724,
    "text": "これでうまくいくかどうか見てみよう。"
  },
  {
    "start": 7061184,
    "end": 7068856,
    "text": "さて、以前は1254点か1245点だったが、今は1236点だ。"
  },
  {
    "start": 7069040,
    "end": 7071444,
    "text": "なんでノートに書かないんだろう？"
  },
  {
    "start": 7072074,
    "end": 7073734,
    "text": "我々はこれを記録しておくべきだ。"
  },
  {
    "start": 7074514,
    "end": 7081454,
    "text": "最初の提出は0.1245だったかな？"
  },
  {
    "start": 7083034,
    "end": 7084494,
    "text": "それとも5、4人かな。"
  },
  {
    "start": 7085274,
    "end": 7093386,
    "text": "今、私たちの2回目の提出は1236点を得ている。"
  },
  {
    "start": 7093490,
    "end": 7101834,
    "text": "もう一度、リーダーボードの順位を見てみよう。"
  },
  {
    "start": 7103134,
    "end": 7104714,
    "text": "12、3、6、1"
  },
  {
    "start": 7119574,
    "end": 7122102,
    "text": "まだ1000位以内には入っていない。"
  },
  {
    "start": 7122278,
    "end": 7128502,
    "text": "この辺りだと1300くらいで、前より何か良くなっている。"
  },
  {
    "start": 7128678,
    "end": 7130314,
    "text": "我々はもっとうまくやれると思う。"
  },
  {
    "start": 7131294,
    "end": 7132870,
    "text": "ここでチェックリストを見てみよう。"
  },
  {
    "start": 7132942,
    "end": 7136606,
    "text": "我々はモデル選択を行い、アンサンブルを行った。"
  },
  {
    "start": 7136790,
    "end": 7138182,
    "text": "機能選択はしていない。"
  },
  {
    "start": 7138278,
    "end": 7141954,
    "text": "今日のモデルには、それほど多くの機能がないので、そうはしないと思う。"
  },
  {
    "start": 7143014,
    "end": 7147394,
    "text": "しかし、フィーチャーエンジニアリングやハイパーパラメーターの最適化を行うことはできる。"
  },
  {
    "start": 7149474,
    "end": 7150974,
    "text": "フィーチャーエンジニアリングをやろう。"
  },
  {
    "start": 7151634,
    "end": 7153134,
    "text": "上にスクロールしてみよう。"
  },
  {
    "start": 7154434,
    "end": 7161094,
    "text": "ここで、前処理をしていたときに戻ってみよう。"
  },
  {
    "start": 7162034,
    "end": 7165734,
    "text": "トランスフォームを適用する直前だと思う。"
  },
  {
    "start": 7167954,
    "end": 7172774,
    "text": "欠損値を埋め、変換を適用する前に、フィーチャーエンジニアリングを行う。"
  },
  {
    "start": 7174894,
    "end": 7179914,
    "text": "えーと、既存の機能を使って新しい機能を作ることはできるかな？"
  },
  {
    "start": 7180254,
    "end": 7182714,
    "text": "この時点では、4つのデータを使っている。"
  },
  {
    "start": 7187054,
    "end": 7188038,
    "text": "ありがとう、サディウム。"
  },
  {
    "start": 7188086,
    "end": 7189034,
    "text": "とてもいいね。"
  },
  {
    "start": 7191374,
    "end": 7191734,
    "text": "でもね。"
  },
  {
    "start": 7191774,
    "end": 7192006,
    "text": "オーケー。"
  },
  {
    "start": 7192030,
    "end": 7208814,
    "text": "フィーチャー・エンジニアリングに関しては、どんな機能を使うべきかを考えるために、他の人がやったことを見るのはいいアイデアかもしれない。"
  },
  {
    "start": 7209434,
    "end": 7212094,
    "text": "他のノートも見てみようかな。"
  },
  {
    "start": 7214554,
    "end": 7222570,
    "text": "リーダーボードにアクセスして、上位のノートブックを見てみようかな。"
  },
  {
    "start": 7222762,
    "end": 7230838,
    "text": "というのも、ズルをしている連中が嘘をついている場所だからだ。"
  },
  {
    "start": 7231006,
    "end": 7240274,
    "text": "実際のモデルを見てみようと思っている。"
  },
  {
    "start": 7241574,
    "end": 7243874,
    "text": "この中に、かなりいいものがあったんだ。"
  },
  {
    "start": 7244454,
    "end": 7246194,
    "text": "まだここにあるかどうか、ちょっと見てみるよ。"
  },
  {
    "start": 7246974,
    "end": 7248022,
    "text": "これは良かった。"
  },
  {
    "start": 7248118,
    "end": 7257204,
    "text": "さて、これも実は外部データを使っているのだが、彼は非常に興味深いフィーチャー・エンジニアリングを行っていた。"
  },
  {
    "start": 7257664,
    "end": 7259484,
    "text": "これはマルトからだ。"
  },
  {
    "start": 7260744,
    "end": 7265484,
    "text": "彼がいつフィーチャーエンジニアリングをするのか、見下ろしてみよう。"
  },
  {
    "start": 7274064,
    "end": 7275536,
    "text": "さあ、フィーチャー・エンジニアリングだ。"
  },
  {
    "start": 7275680,
    "end": 7279288,
    "text": "彼は以前の特徴を基に新しい特徴を作り出す。"
  },
  {
    "start": 7279336,
    "end": 7281164,
    "text": "私は彼の真似をするだけだ。"
  },
  {
    "start": 7281674,
    "end": 7283934,
    "text": "多分、こっちで打ち直すと思う。"
  },
  {
    "start": 7285234,
    "end": 7286574,
    "text": "これが彼が持っていたものだ。"
  },
  {
    "start": 7286994,
    "end": 7294634,
    "text": "基本的に彼がやっているのは、1部屋あたりの面積を計算することだ。"
  },
  {
    "start": 7294794,
    "end": 7303530,
    "text": "これはどういう意味なのかわからない。"
  },
  {
    "start": 7303562,
    "end": 7305654,
    "text": "データの説明をもう一度見てみよう。"
  },
  {
    "start": 7306654,
    "end": 7308074,
    "text": "グルリブ"
  },
  {
    "start": 7308974,
    "end": 7313246,
    "text": "地上リビングエリア。"
  },
  {
    "start": 7313390,
    "end": 7317670,
    "text": "これは全体の居住面積を平方フィートで表したもので、部屋の数で割っている。"
  },
  {
    "start": 7317742,
    "end": 7324758,
    "text": "彼は部屋の総数を計算し、それをつまり総面積で割っているんだ。"
  },
  {
    "start": 7324846,
    "end": 7328662,
    "text": "これは非常に便利な機能だが、その関係はより複雑だ。"
  },
  {
    "start": 7328718,
    "end": 7331354,
    "text": "モデルはおそらく、それをつなぎ合わせることはできないだろう。"
  },
  {
    "start": 7332394,
    "end": 7357934,
    "text": "彼はまた、品質とコンディションを変数とし、それらを足し合わせることで総合的な住宅の品質を算出し、フルバスを算出し、ハーフバスを0.5倍して2分の1にカウントし、それを地下室のフルバスに加え、さらにそれを地下室のハーフバスの0.5倍に加えることで、総バスルーム数を算出している。"
  },
  {
    "start": 7358114,
    "end": 7362474,
    "text": "これも面白いアイデアだ。"
  },
  {
    "start": 7362974,
    "end": 7370274,
    "text": "この場合、ハイクオリティ・スクエア・エフィージは、1階のスクエア・エフィージと2階のスクエア・エフィージとを足し合わせる。"
  },
  {
    "start": 7370614,
    "end": 7372834,
    "text": "これを何時間も続けよう。"
  },
  {
    "start": 7373934,
    "end": 7383660,
    "text": "トレインテストをデータ4に変更するだけで、もっと深く掘り下げることができるだろう。"
  },
  {
    "start": 7383782,
    "end": 7390936,
    "text": "実際、私はさまざまな機能を思いついたが、それらはモデルをあまり改善しないように見えた。"
  },
  {
    "start": 7391000,
    "end": 7394696,
    "text": "これには良い効果があるようだ。"
  },
  {
    "start": 7394840,
    "end": 7398324,
    "text": "データ4、そんな感じ。"
  },
  {
    "start": 7399144,
    "end": 7401524,
    "text": "うまくいくかどうか見てみよう。"
  },
  {
    "start": 7403624,
    "end": 7404924,
    "text": "よし、うまくいった。"
  },
  {
    "start": 7406664,
    "end": 7413490,
    "text": "さて、データ4は以前より列数が増えたので、このままにしておこうと思う。"
  },
  {
    "start": 7413522,
    "end": 7415014,
    "text": "クレイジーなことをするつもりはない。"
  },
  {
    "start": 7415794,
    "end": 7417394,
    "text": "非常に長い時間がかかるかもしれない。"
  },
  {
    "start": 7417514,
    "end": 7418970,
    "text": "これにはいくらでも時間がかかる。"
  },
  {
    "start": 7419002,
    "end": 7423774,
    "text": "新しい機能を作るために使える、あらゆる種類の創造的な機能の組み合わせを見つけることができるだろう。"
  },
  {
    "start": 7424954,
    "end": 7428694,
    "text": "データ5、データ4、コピー。"
  },
  {
    "start": 7431514,
    "end": 7435474,
    "text": "それを実行し、その後、これらすべてを変更しなければならない。"
  },
  {
    "start": 7435514,
    "end": 7437044,
    "text": "これが今のデータ5だ。"
  },
  {
    "start": 7437904,
    "end": 7442112,
    "text": "データ5、スクロールダウン"
  },
  {
    "start": 7442168,
    "end": 7446032,
    "text": "これがデータ5、データ5、データになる。"
  },
  {
    "start": 7446128,
    "end": 7447136,
    "text": "ああ、これは必要ない。"
  },
  {
    "start": 7447240,
    "end": 7451528,
    "text": "ああ、そうだ、データ5、これは今データ6だ。"
  },
  {
    "start": 7451576,
    "end": 7454512,
    "text": "こちらはデータ5。"
  },
  {
    "start": 7454608,
    "end": 7456364,
    "text": "データ6"
  },
  {
    "start": 7457504,
    "end": 7458844,
    "text": "データ7"
  },
  {
    "start": 7459464,
    "end": 7462500,
    "text": "データ6はこちら"
  },
  {
    "start": 7462572,
    "end": 7471984,
    "text": "データ7、データ7、データ7、データ7、データ7、データ8。"
  },
  {
    "start": 7475164,
    "end": 7490404,
    "text": "よし、ではこれより前のデータ、データ8まで全部調べてみよう。"
  },
  {
    "start": 7492464,
    "end": 7500312,
    "text": "対数変換はデータの影響を受けないが、これは8つのデータでなければならない。"
  },
  {
    "start": 7500368,
    "end": 7501564,
    "text": "それだけだと思う。"
  },
  {
    "start": 7503664,
    "end": 7507120,
    "text": "さて、以前は317列だったのが、今は321列になった。"
  },
  {
    "start": 7507312,
    "end": 7510044,
    "text": "それは、私たちが作った新しい数値機能によるものだ。"
  },
  {
    "start": 7510984,
    "end": 7514364,
    "text": "それでは、この方法でパフォーマンスが上がるかどうか見てみよう。"
  },
  {
    "start": 7514664,
    "end": 7518104,
    "text": "モデルの再作成、モデルの再フィット、そして評価については省略する。"
  },
  {
    "start": 7518184,
    "end": 7525204,
    "text": "私はただ、予想を組み合わせて、最終的な予想を出して、提出物を作って、提出するだけだ。"
  },
  {
    "start": 7526144,
    "end": 7528576,
    "text": "これを見てみよう。"
  },
  {
    "start": 7528760,
    "end": 7529924,
    "text": "これをダウンロードする。"
  },
  {
    "start": 7531184,
    "end": 7533484,
    "text": "これをゼロ・ゼロ・ツー・サブミッションと呼ぶことにする。"
  },
  {
    "start": 7535584,
    "end": 7540504,
    "text": "彼が複数のデータソースを使っているのがわかるだろう。"
  },
  {
    "start": 7540544,
    "end": 7544314,
    "text": "彼はこのコンペティションのために別の住宅データを使用した。"
  },
  {
    "start": 7545414,
    "end": 7547074,
    "text": "さて、いくつか予想してみよう。"
  },
  {
    "start": 7548374,
    "end": 7550674,
    "text": "1日に10本の応募が許されている。"
  },
  {
    "start": 7552814,
    "end": 7557034,
    "text": "それを受けて、フィーチャーエンジニアリングとのアンサンブルとなる。"
  },
  {
    "start": 7563214,
    "end": 7572818,
    "text": "スコアが下がる前と比較してみよう。"
  },
  {
    "start": 7572906,
    "end": 7575282,
    "text": "実際、スコアは向上した。"
  },
  {
    "start": 7575458,
    "end": 7577614,
    "text": "よし、では他に何ができる？"
  },
  {
    "start": 7579074,
    "end": 7585058,
    "text": "その前に、もうひとつ試してみたいことがある。"
  },
  {
    "start": 7585226,
    "end": 7592694,
    "text": "これを見ると、キャットブースト・モデルが他のすべてのモデルをかなり上回っていることがわかる。"
  },
  {
    "start": 7593524,
    "end": 7606100,
    "text": "リッジは1.46と悪く、OMPがその次で、ベイジアンリッジ、ライトGBM、そしてCatboostが1.12とトップだ。"
  },
  {
    "start": 7606132,
    "end": 7609860,
    "text": "ライトGBMからキャットブーストまで、かなりのジャンプがあるのがわかるだろう。"
  },
  {
    "start": 7610012,
    "end": 7617164,
    "text": "キャットブーストは他のすべてのプレーヤーを凌駕している。"
  },
  {
    "start": 7617204,
    "end": 7622696,
    "text": "私はこれを0.4とし、最悪のモデルから1つずつ取り上げていくつもりだ。"
  },
  {
    "start": 7622880,
    "end": 7625324,
    "text": "それは我々のリッジとOMPだろう。"
  },
  {
    "start": 7625864,
    "end": 7635576,
    "text": "リッジを0.1、OMPを0.1に下げて、キャットブーストに重点を置くつもりだ。"
  },
  {
    "start": 7635760,
    "end": 7636656,
    "text": "これを走らせるよ。"
  },
  {
    "start": 7636680,
    "end": 7640520,
    "text": "これはウェイトのセットが違うだけで、新しい予想だ。"
  },
  {
    "start": 7640632,
    "end": 7642644,
    "text": "これを使って何ができるか見てみよう。"
  },
  {
    "start": 7645344,
    "end": 7647160,
    "text": "オーケー、ではこれが新しい提出物だ。"
  },
  {
    "start": 7647232,
    "end": 7648364,
    "text": "これをダウンロードしよう。"
  },
  {
    "start": 7649024,
    "end": 7654924,
    "text": "これはゼロ、ゼロ、3、提出となる。"
  },
  {
    "start": 7655824,
    "end": 7666924,
    "text": "これはカスタムウエイトを使ったアンサンブルモデルになる。"
  },
  {
    "start": 7667944,
    "end": 7669832,
    "text": "1.176."
  },
  {
    "start": 7669928,
    "end": 7671164,
    "text": "比較してみよう。"
  },
  {
    "start": 7676244,
    "end": 7677556,
    "text": "またしても、我々は沈んでいく。"
  },
  {
    "start": 7677580,
    "end": 7679504,
    "text": "実際、かなり改善された。"
  },
  {
    "start": 7680124,
    "end": 7684304,
    "text": "カスタムウエイトを試してみるのは、実はいいアイデアだということがおわかりいただけるだろう。"
  },
  {
    "start": 7685084,
    "end": 7687664,
    "text": "現時点では、かなりうまくいっている。"
  },
  {
    "start": 7688124,
    "end": 7690544,
    "text": "おそらくトップ1000に近いだろう。"
  },
  {
    "start": 7691604,
    "end": 7696424,
    "text": "最後に、ハイパーパラメーターの最適化を試してみたい。"
  },
  {
    "start": 7696824,
    "end": 7701444,
    "text": "ハイパーパラメーターの最適化には、さまざまな方法がある。"
  },
  {
    "start": 7702344,
    "end": 7710884,
    "text": "例えば、最も基本的なものは、グリッド検索相互情報回帰選択パーセンタイルです。"
  },
  {
    "start": 7712064,
    "end": 7714112,
    "text": "ああ、相互情報を使えばいい。"
  },
  {
    "start": 7714248,
    "end": 7715912,
    "text": "特徴選択をするとき。"
  },
  {
    "start": 7715968,
    "end": 7725626,
    "text": "これは、どの特徴が最も原因となっているか、あるいはどの特徴が最もターゲット変数に関係しているかを知る良い方法である。"
  },
  {
    "start": 7725770,
    "end": 7728202,
    "text": "唯一のものはデータセットだ。"
  },
  {
    "start": 7728298,
    "end": 7734706,
    "text": "見てみると、私たちは300の機能、321の機能しか持っていない。"
  },
  {
    "start": 7734890,
    "end": 7757400,
    "text": "なぜなら、特徴数が多いことが本当に問題になるのは、私の経験では、特徴数が1000を超え、数千になったときだけだからです。"
  },
  {
    "start": 7757432,
    "end": 7761960,
    "text": "機能の数が多いと、問題が山積みだ。"
  },
  {
    "start": 7762072,
    "end": 7764448,
    "text": "ひとつは、モデルがオーバーフィットしやすくなることだ。"
  },
  {
    "start": 7764576,
    "end": 7766684,
    "text": "2つ目は、トレーニングに時間がかかることだ。"
  },
  {
    "start": 7767944,
    "end": 7770884,
    "text": "3つ目は、より多くのデータを保存することだ。"
  },
  {
    "start": 7771424,
    "end": 7792624,
    "text": "一般的に、特徴数が数千から数万のデータセットがある場合、特徴選択によるものであれ、PCA主成分分析によるものであれ、次元削減をしたくなるものです。"
  },
  {
    "start": 7793644,
    "end": 7796344,
    "text": "今回は機能選択をするつもりはない。"
  },
  {
    "start": 7797044,
    "end": 7804162,
    "text": "オーケー、でもオプトゥーナをインポートするつもりだったから、グリッド検索ができるよ。"
  },
  {
    "start": 7804268,
    "end": 7820222,
    "text": "例えば、ハイパーパラメータ最適化の1つの方法として、グリッドサーチがある。グリッドサーチでは、試すべきハイパーパラメータ値のセットを定義するだけで、そこに入れたハイパーパラメータのすべての組み合わせを試すことができる。"
  },
  {
    "start": 7820358,
    "end": 7822286,
    "text": "ただ、グリッド検索は本当に高い。"
  },
  {
    "start": 7822350,
    "end": 7828034,
    "text": "特に異なるハイパーパラメーターをたくさん試したい場合は、時間がかかる。"
  },
  {
    "start": 7828774,
    "end": 7835272,
    "text": "もうひとつの方法はランダム探索で、グリッドからランダムにハイパーパラメータを選ぶ。"
  },
  {
    "start": 7835368,
    "end": 7843864,
    "text": "ランダムサーチの問題は、ハイパーパラメータをすべてカバーできないことだ。"
  },
  {
    "start": 7843904,
    "end": 7845568,
    "text": "何か見落としがあるかもしれない。"
  },
  {
    "start": 7845696,
    "end": 7850784,
    "text": "僕はオプトゥーナが好きなんだ。"
  },
  {
    "start": 7850904,
    "end": 7857144,
    "text": "Optunaはベイジアンハイパーパラメーター最適化を採用しているので、ある意味スマートな方法でそれを実現している。"
  },
  {
    "start": 7857184,
    "end": 7862972,
    "text": "どのハイパーパラメータを次に試すか決定するために、収集した情報を使っているのだ。"
  },
  {
    "start": 7863148,
    "end": 7866668,
    "text": "素晴らしいライブラリーを使うのはとても簡単だ。"
  },
  {
    "start": 7866716,
    "end": 7868224,
    "text": "絶対にお勧めだ。"
  },
  {
    "start": 7869244,
    "end": 7870984,
    "text": "オプトゥーナを輸入するつもりだ。"
  },
  {
    "start": 7872804,
    "end": 7874516,
    "text": "これらのタブをいくつか閉じておこう。"
  },
  {
    "start": 7874660,
    "end": 7875864,
    "text": "散らかっている。"
  },
  {
    "start": 7881684,
    "end": 7885984,
    "text": "よし、ここでオプトーナをインポートしよう。"
  },
  {
    "start": 7890474,
    "end": 7895254,
    "text": "ここで再帰的特徴除去を使用し、選択された特徴に対してグリッドサーチcvを使用することはできますか？"
  },
  {
    "start": 7896714,
    "end": 7902974,
    "text": "グリッド検索とはどういう意味ですか？"
  },
  {
    "start": 7908314,
    "end": 7912790,
    "text": "あまりに多くの特徴を扱う場合、再帰的特徴除去を使うことができるのは間違いない。"
  },
  {
    "start": 7912822,
    "end": 7914806,
    "text": "また、フィーチャーセレクションを使うのにも最適だ。"
  },
  {
    "start": 7914870,
    "end": 7919194,
    "text": "さっきも言ったように、私たちはただ \"だから \"という理由で機能選択をするつもりはない。"
  },
  {
    "start": 7920214,
    "end": 7925910,
    "text": "実際に、Catboostの特徴重要度関数を使って、特徴の重要度を計算してみたんだ。"
  },
  {
    "start": 7926102,
    "end": 7933594,
    "text": "重要度の低い機能はすべて削除したし、モデルのパフォーマンスにはほとんど変化はないと思う。"
  },
  {
    "start": 7934134,
    "end": 7938434,
    "text": "この文脈では、その価値を感じない。"
  },
  {
    "start": 7939694,
    "end": 7943314,
    "text": "でも、オプトゥーナを使ってハイパーパラメーターの最適化を行おうと思っているんだ。"
  },
  {
    "start": 7944814,
    "end": 7953822,
    "text": "実際にモデルを作成する前に、このベースラインモデルを削除しよう。"
  },
  {
    "start": 7953838,
    "end": 7955114,
    "text": "それはもう使わない。"
  },
  {
    "start": 7957774,
    "end": 7960874,
    "text": "ハイパーパラメータの最適化。"
  },
  {
    "start": 7963214,
    "end": 7965742,
    "text": "日和見主義者の医師を見てみよう。"
  },
  {
    "start": 7965878,
    "end": 7967598,
    "text": "これが私たちが使っているフォーマットです。"
  },
  {
    "start": 7967766,
    "end": 7968854,
    "text": "ちょっと小さいね。"
  },
  {
    "start": 7968894,
    "end": 7969934,
    "text": "拡大してみよう。"
  },
  {
    "start": 7970094,
    "end": 7974314,
    "text": "基本的には研究というものがある。"
  },
  {
    "start": 7974734,
    "end": 7980318,
    "text": "研究は基本的に、あなたが指定した目的関数に注目する。"
  },
  {
    "start": 7980366,
    "end": 7989074,
    "text": "目的関数を作成し、設定された試行回数で目的関数を最適化、最小化、最大化しようとします。"
  },
  {
    "start": 7989734,
    "end": 7998264,
    "text": "最終的に、最適なパラメーター、あるいは目的関数で最も良い結果をもたらすパラメーターが得られます。"
  },
  {
    "start": 7999644,
    "end": 8001212,
    "text": "これを見てみよう。"
  },
  {
    "start": 8001308,
    "end": 8005308,
    "text": "これをコピーして、ここに再現しよう。"
  },
  {
    "start": 8005436,
    "end": 8007744,
    "text": "独自の目的関数を作成する。"
  },
  {
    "start": 8008244,
    "end": 8010824,
    "text": "実際には、モデルごとに別々のものを作りたいんだ。"
  },
  {
    "start": 8011724,
    "end": 8017584,
    "text": "とりあえずこのままにしておいて、スタディoptune createstudyを作成する。"
  },
  {
    "start": 8019584,
    "end": 8022032,
    "text": "実はこれを別々にやろう。"
  },
  {
    "start": 8022128,
    "end": 8023804,
    "text": "目的関数から始めよう。"
  },
  {
    "start": 8024624,
    "end": 8031364,
    "text": "目的関数は基本的に、モデルの予測がどれだけ優れているかの尺度である。"
  },
  {
    "start": 8032944,
    "end": 8034880,
    "text": "これが最小化したい関数である。"
  },
  {
    "start": 8035032,
    "end": 8036724,
    "text": "まずはキャットブーストをやろう。"
  },
  {
    "start": 8038064,
    "end": 8039844,
    "text": "これは裁判にかかる。"
  },
  {
    "start": 8040384,
    "end": 8048404,
    "text": "つまり、トライアルとは、このオプティマイズ関数を呼び出したときに、自動的に目的フィールド関数に渡される日和見オブジェクトのことである。"
  },
  {
    "start": 8048564,
    "end": 8057984,
    "text": "トライアルは基本的にただのものだが、このトライアル・サジェストユニフォームのような便利な機能もある。"
  },
  {
    "start": 8058324,
    "end": 8066444,
    "text": "これは基本的に、可能なハイパーパラメータを引き出すための値の範囲を指定するものだ。"
  },
  {
    "start": 8066524,
    "end": 8071408,
    "text": "ランダム変数のような確率的なものを使う。"
  },
  {
    "start": 8071556,
    "end": 8083632,
    "text": "一様分布が示唆するのは、この変数xが、負の10から10をサポートとする一様分布から来ているということだ。"
  },
  {
    "start": 8083808,
    "end": 8090324,
    "text": "これは一様分布からマイナス10と10の間の値をランダムに引く。"
  },
  {
    "start": 8090984,
    "end": 8094312,
    "text": "ここでは、ハイパーパラメーターをすべて指定したい。"
  },
  {
    "start": 8094488,
    "end": 8095844,
    "text": "キャットブーストをやろう。"
  },
  {
    "start": 8096144,
    "end": 8100034,
    "text": "実際、キャットブーストは時間がかかりそうだから、リッジにしないか？"
  },
  {
    "start": 8100734,
    "end": 8102874,
    "text": "ベイジアンリッジをやってみよう。"
  },
  {
    "start": 8105254,
    "end": 8109994,
    "text": "ベイズリッジにはいくつかのハイパーパラメータがある。"
  },
  {
    "start": 8110734,
    "end": 8114714,
    "text": "iterは反復回数であり、許容値である。"
  },
  {
    "start": 8115134,
    "end": 8121790,
    "text": "アルファ1、アルファ2、ラムダ1、ラムダ2である。"
  },
  {
    "start": 8121982,
    "end": 8123714,
    "text": "彼らの活動についてはこちらをご覧いただきたい。"
  },
  {
    "start": 8124814,
    "end": 8132192,
    "text": "これらのハイパーパラメーターにはいくつかの初期値があり、それ以外はそれほど重要ではない。"
  },
  {
    "start": 8132288,
    "end": 8144040,
    "text": "繰り返しの回数と、おそらく許容範囲も試してみることになると思う。"
  },
  {
    "start": 8144192,
    "end": 8145560,
    "text": "では、この4つだ。"
  },
  {
    "start": 8145752,
    "end": 8147044,
    "text": "これを使うつもりだ。"
  },
  {
    "start": 8149904,
    "end": 8155104,
    "text": "よし、これが欲しい値だ。"
  },
  {
    "start": 8158804,
    "end": 8167972,
    "text": "我々はニッターのタルα1、α2、ラムダ1とラムダ2を持っている。"
  },
  {
    "start": 8168108,
    "end": 8172548,
    "text": "ここで、これらの値を許容範囲にするんだ。"
  },
  {
    "start": 8172716,
    "end": 8180404,
    "text": "アルファ1、アルファ2、ラムダ1、ラムダ2。"
  },
  {
    "start": 8180824,
    "end": 8185824,
    "text": "これらのハイパーパラメータの値を引くための分布を提案する。"
  },
  {
    "start": 8185944,
    "end": 8187080,
    "text": "それが何なのかを見てみたい。"
  },
  {
    "start": 8187112,
    "end": 8190124,
    "text": "デフォルトの反復回数は300回である。"
  },
  {
    "start": 8190424,
    "end": 8191896,
    "text": "これは整数でなければなりませんね？"
  },
  {
    "start": 8191920,
    "end": 8193152,
    "text": "フロートは使えない。"
  },
  {
    "start": 8193288,
    "end": 8202352,
    "text": "つまり、オプテューナのドキュメントは、「Read the docs」にあるはずだ。"
  },
  {
    "start": 8202408,
    "end": 8203668,
    "text": "ちょっと教えてくれ。"
  },
  {
    "start": 8203856,
    "end": 8205104,
    "text": "マグロのドキュメント"
  },
  {
    "start": 8207244,
    "end": 8208224,
    "text": "これだ。"
  },
  {
    "start": 8209684,
    "end": 8218708,
    "text": "APIリファレンスを見て、トライアルオブジェクトを見てみる。"
  },
  {
    "start": 8218876,
    "end": 8227104,
    "text": "トライアル・オブジェクトはこれらすべてのサジェスト関数を持っているので、与えられた範囲から整数をサジェストするサジェストintが欲しい。"
  },
  {
    "start": 8228084,
    "end": 8233244,
    "text": "これは、ハイパーパラメータの名前、低い値、高い値を取る。"
  },
  {
    "start": 8235384,
    "end": 8249840,
    "text": "ここでは、iterがint型で、デフォルト値は300であることを示唆している。"
  },
  {
    "start": 8249912,
    "end": 8257414,
    "text": "50から600まで、何かやってはどうだろう。"
  },
  {
    "start": 8260074,
    "end": 8265974,
    "text": "そこでだが、n回の反復で5600の間から整数を取り出してみよう。"
  },
  {
    "start": 8266274,
    "end": 8267106,
    "text": "寛容のために。"
  },
  {
    "start": 8267170,
    "end": 8280814,
    "text": "これは浮動小数点数で、デフォルト値は0.001である。"
  },
  {
    "start": 8281573,
    "end": 8294405,
    "text": "これは一様分布であるが対数スケールである。"
  },
  {
    "start": 8294469,
    "end": 8299713,
    "text": "の場合、大きな値よりもゼロに近い値を選ぶ可能性が高くなる。"
  },
  {
    "start": 8301413,
    "end": 8303933,
    "text": "その名前でもログユニフォームを提案する。"
  },
  {
    "start": 8303973,
    "end": 8305593,
    "text": "ローハイがフォーマットだ。"
  },
  {
    "start": 8306213,
    "end": 8312013,
    "text": "トライアルドットはログユニフォームを示唆している。"
  },
  {
    "start": 8313993,
    "end": 8320209,
    "text": "ここでの名前はtoleranceで、デフォルト値は1～マイナス3である。"
  },
  {
    "start": 8320401,
    "end": 8334464,
    "text": "低いほうの値をマイナス6か7にして、高いほうを10にするのはどうだろう。"
  },
  {
    "start": 8335524,
    "end": 8339184,
    "text": "さて、アルファ1だ。"
  },
  {
    "start": 8340124,
    "end": 8341564,
    "text": "これは高すぎるよ。"
  },
  {
    "start": 8341604,
    "end": 8343624,
    "text": "0.1くらいにしよう。"
  },
  {
    "start": 8344924,
    "end": 8346124,
    "text": "よし、アルファ1だ。"
  },
  {
    "start": 8346204,
    "end": 8352024,
    "text": "この値も非常に低いので、最後のラムダ2もそうだと思う。"
  },
  {
    "start": 8352324,
    "end": 8354944,
    "text": "ええ、すべてデフォルトで1Eマイナス6になっています。"
  },
  {
    "start": 8355444,
    "end": 8358184,
    "text": "そのために同じログユニフォームを使用する。"
  },
  {
    "start": 8360224,
    "end": 8361924,
    "text": "これはアルファ1になる。"
  },
  {
    "start": 8363424,
    "end": 8369204,
    "text": "これはアルファ2、ラムダ1、ラムダ2だ。"
  },
  {
    "start": 8371224,
    "end": 8374644,
    "text": "では、これを1Eマイナス8にしてみよう。"
  },
  {
    "start": 8375144,
    "end": 8380176,
    "text": "それぞれについて、そして多分、これを10個くらいに増やすだろう。"
  },
  {
    "start": 8380320,
    "end": 8382244,
    "text": "私は、これらはより高い値を取ることができると思う。"
  },
  {
    "start": 8388443,
    "end": 8400503,
    "text": "それでは、それぞれのハイパーパラメータがどこから引き出されるかを定義し、次にこれらのハイパーパラメータを使ってモデルをトレーニングします。"
  },
  {
    "start": 8401243,
    "end": 8406811,
    "text": "研究中に目的関数が呼び出されたとき、これらはすべて実際に実現される。"
  },
  {
    "start": 8406907,
    "end": 8410743,
    "text": "これらの値は、この分布から実際の値を取る。"
  },
  {
    "start": 8413034,
    "end": 8414634,
    "text": "今のところは曖昧だ。"
  },
  {
    "start": 8414674,
    "end": 8416974,
    "text": "確率分布を定義しているだけだ。"
  },
  {
    "start": 8417914,
    "end": 8424338,
    "text": "では、新しいモデルを作成しましょう。これはベイジアン・リッジ・モデルになります。"
  },
  {
    "start": 8424386,
    "end": 8425674,
    "text": "それが私たちの目標である。"
  },
  {
    "start": 8425794,
    "end": 8435402,
    "text": "これはベイジアン・リッジ・モデルで、ハイパーパラメータを渡す。"
  },
  {
    "start": 8435538,
    "end": 8441864,
    "text": "n iterはn iter tall alpha oneに等しい。"
  },
  {
    "start": 8443644,
    "end": 8444988,
    "text": "アルファ2はアルファ2に等しい。"
  },
  {
    "start": 8445036,
    "end": 8445804,
    "text": "ラムダも同じだ。"
  },
  {
    "start": 8445844,
    "end": 8454264,
    "text": "これらはラムダであり、これらはラムダである。"
  },
  {
    "start": 8458804,
    "end": 8470004,
    "text": "さて、モデルを作成したので、次はそのモデルをtrain finalとlog targetにフィットさせます。"
  },
  {
    "start": 8473744,
    "end": 8475984,
    "text": "それからクロスバルのスコアを出す。"
  },
  {
    "start": 8476144,
    "end": 8478644,
    "text": "これはすべて目的関数の中で起こっている。"
  },
  {
    "start": 8479544,
    "end": 8485884,
    "text": "CVスコアはもしかしたらクロスバルのスコアになるかもしれない。"
  },
  {
    "start": 8489124,
    "end": 8491580,
    "text": "ここで評価したときに戻ろう。"
  },
  {
    "start": 8491692,
    "end": 8494364,
    "text": "クロスバリデーションのスコアを取っている。"
  },
  {
    "start": 8494524,
    "end": 8495824,
    "text": "これをコピーしよう。"
  },
  {
    "start": 8496644,
    "end": 8500052,
    "text": "ええ、私たちが最小限にしようとしているのはこういうことなので、全部コピーしておきます。"
  },
  {
    "start": 8500108,
    "end": 8500704,
    "text": "そうだね。"
  },
  {
    "start": 8503124,
    "end": 8504824,
    "text": "こっちだ。"
  },
  {
    "start": 8506764,
    "end": 8511292,
    "text": "よし、これはいい感じだ。"
  },
  {
    "start": 8511428,
    "end": 8515088,
    "text": "これをコピーして、ここに置いてくれ。"
  },
  {
    "start": 8515136,
    "end": 8521320,
    "text": "これが私たちが得ているスコアであり、私は今、その平均を取りたい。"
  },
  {
    "start": 8521352,
    "end": 8524968,
    "text": "実は、ここで平方根を取りたいとは思わないんだ。"
  },
  {
    "start": 8525016,
    "end": 8526152,
    "text": "ああ、平方根を取るよ。"
  },
  {
    "start": 8526208,
    "end": 8527644,
    "text": "僕はこれを全部持っていくよ。"
  },
  {
    "start": 8528704,
    "end": 8531044,
    "text": "この全部をCVのスコアとして使うよ。"
  },
  {
    "start": 8531504,
    "end": 8534284,
    "text": "ここで渡したモデルを使うんだろ？"
  },
  {
    "start": 8534744,
    "end": 8541772,
    "text": "モデルをフィットさせ、モデルを作成し、モデルをフィットさせ、CVスコアを計算し、それが実際に最小化したい値である。"
  },
  {
    "start": 8541968,
    "end": 8545224,
    "text": "これは実際には、各フォールドに対して1つの値を返す。"
  },
  {
    "start": 8546124,
    "end": 8551864,
    "text": "CVスコアと呼ばれるもののnumpy平均を返そうとしている。"
  },
  {
    "start": 8552804,
    "end": 8555460,
    "text": "私たちが最小化しようとしているのはCVスコアの平均値である。"
  },
  {
    "start": 8555572,
    "end": 8572666,
    "text": "この目的関数は、ハイパーパラメータを作成し、ハイパーパラメータを使ってモデルを作成し、フィッティングを行い、スコアを計算し、平均スコアを返す。"
  },
  {
    "start": 8572770,
    "end": 8573854,
    "text": "それが返ってきた。"
  },
  {
    "start": 8575314,
    "end": 8580574,
    "text": "よし、じゃあこうしよう。"
  },
  {
    "start": 8583034,
    "end": 8583690,
    "text": "それはどこですか？"
  },
  {
    "start": 8583722,
    "end": 8587534,
    "text": "では、スタディ・オプティマイズに電話しよう。"
  },
  {
    "start": 8590114,
    "end": 8596134,
    "text": "スタディーはオプトン・グリッドのスタディー、そしてスタディー・オプティマイズだ。"
  },
  {
    "start": 8598204,
    "end": 8602464,
    "text": "optimizeには目的関数と試行回数を渡す。"
  },
  {
    "start": 8603524,
    "end": 8606156,
    "text": "を目的関数とする。"
  },
  {
    "start": 8606340,
    "end": 8608164,
    "text": "これが最小化したい関数だ。"
  },
  {
    "start": 8608324,
    "end": 8614300,
    "text": "最終的なトライアルは100のままで、最小化する方向を指定することもできる。"
  },
  {
    "start": 8614452,
    "end": 8617504,
    "text": "これにより、方向によって最大化または最小化することができる。"
  },
  {
    "start": 8618884,
    "end": 8621104,
    "text": "実際、この方向は上に行くと思う。"
  },
  {
    "start": 8623704,
    "end": 8634344,
    "text": "トライアルゼロ、トライアル1、さまざまなハイパーパラメーターの組み合わせを試しているのがわかるだろう。"
  },
  {
    "start": 8634504,
    "end": 8639644,
    "text": "そうすると、各走行の値が返ってくる。"
  },
  {
    "start": 8640464,
    "end": 8641464,
    "text": "これが価値だ。"
  },
  {
    "start": 8641624,
    "end": 8647808,
    "text": "これは、ハイパーパラメータの各組み合わせに対するRMSeである。"
  },
  {
    "start": 8647936,
    "end": 8655160,
    "text": "いろいろ試した結果、基本的にこの値を下げようとし続ける。"
  },
  {
    "start": 8655312,
    "end": 8661444,
    "text": "最後に、最適なパラメーターが返される。それは、ここで最も低い値を示したパラメーターとなる。"
  },
  {
    "start": 8663464,
    "end": 8671640,
    "text": "よし、ではベストトライアルはというと、これまでのところベストはトライアル16だ。"
  },
  {
    "start": 8671752,
    "end": 8677164,
    "text": "最もrmse値が低かったトライアル16はこちら。"
  },
  {
    "start": 8678384,
    "end": 8680044,
    "text": "ちょっとお待ちください。"
  },
  {
    "start": 8681944,
    "end": 8683328,
    "text": "水を汲んでくるよ。"
  },
  {
    "start": 8683376,
    "end": 8684564,
    "text": "すぐに戻るよ"
  },
  {
    "start": 8699244,
    "end": 8699984,
    "text": "それだ。"
  },
  {
    "start": 8743064,
    "end": 8744244,
    "text": "よし、ここはどこだ？"
  },
  {
    "start": 8744584,
    "end": 8745544,
    "text": "トライアル56"
  },
  {
    "start": 8745584,
    "end": 8746924,
    "text": "あと半分くらいだ。"
  },
  {
    "start": 8748664,
    "end": 8750604,
    "text": "もう少し時間がかかりそうだ。"
  },
  {
    "start": 8751444,
    "end": 8753024,
    "text": "その間に何ができるのか？"
  },
  {
    "start": 8756124,
    "end": 8757824,
    "text": "ただ座って待っていればいい。"
  },
  {
    "start": 8759844,
    "end": 8767060,
    "text": "実際、すべてのモデルでこれをやるつもりはないので、その間に他のノートに戻ろうと思う。"
  },
  {
    "start": 8767092,
    "end": 8768316,
    "text": "一日中かかりそうなんだ。"
  },
  {
    "start": 8768420,
    "end": 8770984,
    "text": "数日前にもやったよ。"
  },
  {
    "start": 8771404,
    "end": 8781804,
    "text": "もうひとつのノートブックに行き、異なるモデルのハイパーパラメーターを取ってくる。"
  },
  {
    "start": 8783224,
    "end": 8788244,
    "text": "ただ、前回はOMPモデルをやっていなかったので、OMPモデルでやるべきだった。"
  },
  {
    "start": 8788704,
    "end": 8790324,
    "text": "以下は私が見つけたパラメータである。"
  },
  {
    "start": 8791544,
    "end": 8799284,
    "text": "ここにコピーしておくよ。"
  },
  {
    "start": 8804044,
    "end": 8806704,
    "text": "各モデルのパラメーターは以下の通り。"
  },
  {
    "start": 8807884,
    "end": 8810824,
    "text": "フーバーは今回は使わない。"
  },
  {
    "start": 8811404,
    "end": 8816184,
    "text": "私たちができることは、これらをモデル定義にそのまま渡すことだ。"
  },
  {
    "start": 8817044,
    "end": 8831084,
    "text": "ダブルスターを使えば、辞書の各要素をこの引数リストにアンパックすることができる。"
  },
  {
    "start": 8831424,
    "end": 8833712,
    "text": "さて、BRはBr paramsだ。"
  },
  {
    "start": 8833808,
    "end": 8836644,
    "text": "そこでブラムスの梱包を解こう。"
  },
  {
    "start": 8837744,
    "end": 8843844,
    "text": "LGBm、これはLGBMのパラメーターをアンパックしたものだ。"
  },
  {
    "start": 8844624,
    "end": 8849564,
    "text": "こちらにもリッジパラメータがある。"
  },
  {
    "start": 8851384,
    "end": 8855124,
    "text": "リッジ・パラメータを解凍し、次にOMPを解凍する。"
  },
  {
    "start": 8855284,
    "end": 8860904,
    "text": "実は、この回帰モデルについてはよく知らないので、調べなければならない。"
  },
  {
    "start": 8861524,
    "end": 8862824,
    "text": "これを見てみよう。"
  },
  {
    "start": 8864164,
    "end": 8865544,
    "text": "実はよくわからない。"
  },
  {
    "start": 8866724,
    "end": 8869024,
    "text": "直交マッチング追求。"
  },
  {
    "start": 8870844,
    "end": 8871744,
    "text": "オーケー。"
  },
  {
    "start": 8873164,
    "end": 8877384,
    "text": "実際、ハイパーパラメーターはそれほど多くないようだ。"
  },
  {
    "start": 8880384,
    "end": 8882432,
    "text": "そうか、心配する必要はないのかもしれない。"
  },
  {
    "start": 8882568,
    "end": 8884472,
    "text": "実はここにはハイパーパラメーターはない。"
  },
  {
    "start": 8884568,
    "end": 8893724,
    "text": "許容値があるから、インターセプトに合うようにこの両方を試すことができると思う。"
  },
  {
    "start": 8895144,
    "end": 8896512,
    "text": "いや、フィットのインターセプトはやらないよ。"
  },
  {
    "start": 8896568,
    "end": 8898004,
    "text": "それなら寛容になろう。"
  },
  {
    "start": 8899464,
    "end": 8900152,
    "text": "見てみよう。"
  },
  {
    "start": 8900248,
    "end": 8901364,
    "text": "これは完成したのか？"
  },
  {
    "start": 8904804,
    "end": 8905204,
    "text": "わかったよ。"
  },
  {
    "start": 8905244,
    "end": 8905852,
    "text": "終了した。"
  },
  {
    "start": 8905988,
    "end": 8906276,
    "text": "分かった。"
  },
  {
    "start": 8906300,
    "end": 8907908,
    "text": "裁判は完了した。"
  },
  {
    "start": 8908036,
    "end": 8918984,
    "text": "研究が完了したら、ここでstudy bestparamsと言えば、それが見つけた最高のパラメーターを返してくれる。"
  },
  {
    "start": 8919524,
    "end": 8920668,
    "text": "これがその結果だ。"
  },
  {
    "start": 8920716,
    "end": 8927252,
    "text": "おそらく、ここにあるものとは若干異なるだろうが、パラメーターの組み合わせとしてはほぼ間違いないだろう。"
  },
  {
    "start": 8927428,
    "end": 8934724,
    "text": "これはベイジアンリッジのためのもので、実際にはより長い反復でトレーニングされた。"
  },
  {
    "start": 8935704,
    "end": 8938524,
    "text": "前回はトレランスをしなかったからね。"
  },
  {
    "start": 8939584,
    "end": 8939984,
    "text": "ワオ。"
  },
  {
    "start": 8940024,
    "end": 8942936,
    "text": "貸し出しのほうは、ここよりもはるかに高い値を示した。"
  },
  {
    "start": 8943120,
    "end": 8944792,
    "text": "僕らが見つけたものを使うよ。"
  },
  {
    "start": 8944888,
    "end": 8952084,
    "text": "それを置き換えて、インデント（字下げ）する。"
  },
  {
    "start": 8953784,
    "end": 8954504,
    "text": "オーケー。"
  },
  {
    "start": 8954624,
    "end": 8957306,
    "text": "それなら、OMP研究をしよう。"
  },
  {
    "start": 8957400,
    "end": 8959394,
    "text": "こっちの方がずっとずっと早い。"
  },
  {
    "start": 8961934,
    "end": 8963686,
    "text": "これをコピーしよう。"
  },
  {
    "start": 8963870,
    "end": 8965874,
    "text": "これがOMPの目標となる。"
  },
  {
    "start": 8966694,
    "end": 8974634,
    "text": "唯一の違いは、これらのいずれも使用せず、トレランス（許容差）だけを使用することと、トレランスのデフォルト値が「なし」であることだ。"
  },
  {
    "start": 8977174,
    "end": 8978206,
    "text": "ああ、これは変だ。"
  },
  {
    "start": 8978270,
    "end": 8980662,
    "text": "わかったよ。"
  },
  {
    "start": 8980758,
    "end": 8981954,
    "text": "こんなことするつもりはない。"
  },
  {
    "start": 8982574,
    "end": 8983914,
    "text": "もう行くよ。"
  },
  {
    "start": 8985354,
    "end": 8987706,
    "text": "ハイパーパラメーターの最適化を1回行っただけだ。"
  },
  {
    "start": 8987850,
    "end": 8989934,
    "text": "残りは別のノートから取っているだけだ。"
  },
  {
    "start": 8990514,
    "end": 8996054,
    "text": "OMPについては、最適化するものがほとんどないため、気にするつもりはない。"
  },
  {
    "start": 8996754,
    "end": 9008722,
    "text": "よし、これを実行して、新しいパラメータをすべて使って新しいモデルを作成しよう。"
  },
  {
    "start": 9008898,
    "end": 9012404,
    "text": "では、予想を組み合わせてどうなるか見てみよう。"
  },
  {
    "start": 9013024,
    "end": 9023240,
    "text": "最適化されたモデルで最終的な予測を行い、CSVに提出する。"
  },
  {
    "start": 9023312,
    "end": 9024684,
    "text": "こちらへどうぞ。"
  },
  {
    "start": 9025784,
    "end": 9027964,
    "text": "これはゼロ4と呼ばれる。"
  },
  {
    "start": 9029864,
    "end": 9031324,
    "text": "見てみよう。"
  },
  {
    "start": 9031624,
    "end": 9033484,
    "text": "ここでコンペティションに戻る。"
  },
  {
    "start": 9034064,
    "end": 9037464,
    "text": "予想を提出し、それを引きずり込む。"
  },
  {
    "start": 9041724,
    "end": 9049584,
    "text": "これはハイパーパラメーター最適化によるアンサンブルである。"
  },
  {
    "start": 9050724,
    "end": 9052144,
    "text": "よし、これをミッションにしよう。"
  },
  {
    "start": 9053964,
    "end": 9055504,
    "text": "何が出てくるか見てみよう。"
  },
  {
    "start": 9056724,
    "end": 9059304,
    "text": "1.1208."
  },
  {
    "start": 9060924,
    "end": 9063144,
    "text": "これは大きな改善だ。"
  },
  {
    "start": 9064574,
    "end": 9066734,
    "text": "これまでで最高の点数だ。"
  },
  {
    "start": 9066854,
    "end": 9071674,
    "text": "ベースライン・モデルから始めて、それがだんだん良くなっていくのを見るのがいいのはこのためだ。"
  },
  {
    "start": 9072294,
    "end": 9076566,
    "text": "うまくいかなければ、最後のステップに戻るだけだ。"
  },
  {
    "start": 9076750,
    "end": 9079514,
    "text": "これは良い方法だ。"
  },
  {
    "start": 9079814,
    "end": 9080662,
    "text": "よし、確認しよう。"
  },
  {
    "start": 9080718,
    "end": 9081918,
    "text": "これが何をするのか調べてみよう。"
  },
  {
    "start": 9081966,
    "end": 9085594,
    "text": "リーダーボードの12108番。"
  },
  {
    "start": 9086574,
    "end": 9088914,
    "text": "我々はトップ1000に入っている。"
  },
  {
    "start": 9090884,
    "end": 9094468,
    "text": "ベストスコアではないと書かれているが、私はベストスコアだと思う。"
  },
  {
    "start": 9094516,
    "end": 9095444,
    "text": "これがベストスコアだ。"
  },
  {
    "start": 9095524,
    "end": 9096664,
    "text": "それは不具合だと思う。"
  },
  {
    "start": 9097484,
    "end": 9099308,
    "text": "これは今までやった中で一番いい。"
  },
  {
    "start": 9099476,
    "end": 9101104,
    "text": "ここでは本当にうまくいっている。"
  },
  {
    "start": 9101444,
    "end": 9105784,
    "text": "また、これらの多くが実際には有効ではないことも考慮する必要がある。"
  },
  {
    "start": 9107324,
    "end": 9113024,
    "text": "外部のデータソースを使用しているため、それほど有効ではない。"
  },
  {
    "start": 9113524,
    "end": 9115550,
    "text": "それがどこで起こるかは、なんとなくわかるだろう。"
  },
  {
    "start": 9115692,
    "end": 9122834,
    "text": "徐々に減少しているのがわかると思うが、突然、急降下するんだ。"
  },
  {
    "start": 9122994,
    "end": 9128578,
    "text": "それは、ここにいる人たちが、この人たちにはない不公平なアドバンテージを利用しているからだ。"
  },
  {
    "start": 9128746,
    "end": 9131690,
    "text": "このジャンプは、ここからここまでの間に起こるものだと思う。"
  },
  {
    "start": 9131842,
    "end": 9136162,
    "text": "最初の275の例から、私たちは除外する。"
  },
  {
    "start": 9136218,
    "end": 9138414,
    "text": "コンペティションでは検討すらしていない。"
  },
  {
    "start": 9139034,
    "end": 9148032,
    "text": "この9062を計算してみよう。"
  },
  {
    "start": 9148048,
    "end": 9155164,
    "text": "275を引いて、提出する。"
  },
  {
    "start": 9156184,
    "end": 9160364,
    "text": "Jupyterノートブックでモデルを作成する際のヒントやコツについてのビデオをお願いできますか？"
  },
  {
    "start": 9161304,
    "end": 9166192,
    "text": "Kaggleの良いところは、Jupyter notebookの上に構築されているところです。"
  },
  {
    "start": 9166288,
    "end": 9169518,
    "text": "私のビデオはすべてKaggleで撮影したものです。"
  },
  {
    "start": 9169686,
    "end": 9171182,
    "text": "ほとんど同じだよ。"
  },
  {
    "start": 9171318,
    "end": 9182326,
    "text": "キーボードのショートカットとか、ワークフローとか、ワークフローを改善する方法とか。"
  },
  {
    "start": 9182470,
    "end": 9183754,
    "text": "いいアイデアだと思うよ。"
  },
  {
    "start": 9186334,
    "end": 9191834,
    "text": "では、上位のズルい選手たちを除いてどうなっているのか、ちょっと見てみたい。"
  },
  {
    "start": 9192134,
    "end": 9195274,
    "text": "我々は839位だった。"
  },
  {
    "start": 9196374,
    "end": 9197214,
    "text": "839."
  },
  {
    "start": 9197254,
    "end": 9201714,
    "text": "さらに275を引く。"
  },
  {
    "start": 9205014,
    "end": 9212754,
    "text": "全体の成績をチェックしているところだが、上位7％に入っているようだ。"
  },
  {
    "start": 9213334,
    "end": 9215574,
    "text": "実際、かなりうまくいっている。"
  },
  {
    "start": 9215734,
    "end": 9218274,
    "text": "上の連中を除けばね。"
  },
  {
    "start": 9220014,
    "end": 9222160,
    "text": "そして、それは、競争なんだ。"
  },
  {
    "start": 9222232,
    "end": 9223568,
    "text": "これは知識競争のようなものだ。"
  },
  {
    "start": 9223616,
    "end": 9225164,
    "text": "報酬も何もない。"
  },
  {
    "start": 9226064,
    "end": 9229312,
    "text": "ああ、外部データを使ったから不正をしたんだ。"
  },
  {
    "start": 9229408,
    "end": 9233816,
    "text": "ここにトップがいる。"
  },
  {
    "start": 9233840,
    "end": 9234344,
    "text": "これを見てくれ。"
  },
  {
    "start": 9234424,
    "end": 9238728,
    "text": "これは、とてもとても低い点数で提出された上位選手のノートブックだ。"
  },
  {
    "start": 9238856,
    "end": 9249580,
    "text": "何をやっているかというと、実は外部のデータソースから答えを読み込んでいるだけなんだ。"
  },
  {
    "start": 9249692,
    "end": 9258628,
    "text": "このノートには、前処理とか、そういうものさえちゃんと書かれていない。"
  },
  {
    "start": 9258676,
    "end": 9260140,
    "text": "答えを読み込んでいるだけだ。"
  },
  {
    "start": 9260292,
    "end": 9265492,
    "text": "こいつらはみんな、高得点を取るために答えを読み込んでいるだけだ。"
  },
  {
    "start": 9265628,
    "end": 9268092,
    "text": "そしてこの下は、実際に有効なものだ。"
  },
  {
    "start": 9268148,
    "end": 9269664,
    "text": "この人たちは実際にそうだった。"
  },
  {
    "start": 9270684,
    "end": 9273564,
    "text": "さて、どこでいいものを見つけようかな。"
  },
  {
    "start": 9274264,
    "end": 9275040,
    "text": "この男のようにね。"
  },
  {
    "start": 9275072,
    "end": 9277144,
    "text": "彼は我々よりずっと高い、ずっと低いスコアを持っている。"
  },
  {
    "start": 9277224,
    "end": 9284712,
    "text": "彼がやっていることを見ると、別のデータソースからデータをロードしている。"
  },
  {
    "start": 9284888,
    "end": 9291176,
    "text": "彼は、コンペティションのデータソースから得られる情報よりも多くの情報を使っている。"
  },
  {
    "start": 9291320,
    "end": 9303174,
    "text": "上部にあるように、彼は複数のデータソースを使用している。コンペティションのデータを使用しているが、さらにこの拡張データセットも使用している。"
  },
  {
    "start": 9304474,
    "end": 9306494,
    "text": "だからズルだと言っているんだ。"
  },
  {
    "start": 9307154,
    "end": 9312178,
    "text": "つまり、知識を競うだけなんだ。"
  },
  {
    "start": 9312226,
    "end": 9314010,
    "text": "報酬も何もない。"
  },
  {
    "start": 9314042,
    "end": 9315694,
    "text": "ズルをしても大したことはない。"
  },
  {
    "start": 9316274,
    "end": 9324914,
    "text": "もし、自分たちに対して公平であるならば、私たちが得たデータと同じデータを使っている人たちとしか、私たちの結果を比較すべきではない。"
  },
  {
    "start": 9327974,
    "end": 9329438,
    "text": "パイプラインを使うことにしたのはいつですか？"
  },
  {
    "start": 9329486,
    "end": 9331134,
    "text": "そうしないと決めたのはいつですか？"
  },
  {
    "start": 9331294,
    "end": 9338006,
    "text": "パイプラインは、プロダクション・モデルを作るときに使います。"
  },
  {
    "start": 9338150,
    "end": 9342234,
    "text": "コンペティションモデルと市販モデルには大きな違いがある。"
  },
  {
    "start": 9342894,
    "end": 9350264,
    "text": "プロダクション・モデルとは、リアルタイム環境で顧客などに使用されるモデルのことだ。"
  },
  {
    "start": 9350454,
    "end": 9353348,
    "text": "そう、つまり、生産モデルは非常にクリーンでなければならない。"
  },
  {
    "start": 9353516,
    "end": 9356224,
    "text": "人間が読める入力を可能にしなければならない。"
  },
  {
    "start": 9356804,
    "end": 9367668,
    "text": "ユーザーは、自分の住んでいる町の名前を入力し、それを手作業でエンコードし、コンペティション用のノートに渡すのではなく、自分の住んでいる町の名前を入力できるようにしたいと考えている。"
  },
  {
    "start": 9367716,
    "end": 9371944,
    "text": "私たちのモデルの入力は、train finalのように見える。"
  },
  {
    "start": 9374324,
    "end": 9376344,
    "text": "320の列がある。"
  },
  {
    "start": 9377304,
    "end": 9378364,
    "text": "ああ、問題ないよ。"
  },
  {
    "start": 9378824,
    "end": 9382304,
    "text": "すでにホットエンコードされ、スケーリングされているのがわかるだろう。"
  },
  {
    "start": 9382424,
    "end": 9390072,
    "text": "誰かがこのモデルを入力しようと思っても、現実的には入力できない。"
  },
  {
    "start": 9390128,
    "end": 9395204,
    "text": "それらはすべて変形され、いじられ、拡大縮小され、エンコードされている。"
  },
  {
    "start": 9396544,
    "end": 9403104,
    "text": "本番ではこんなことはできない。"
  },
  {
    "start": 9403144,
    "end": 9406728,
    "text": "人間が読みやすく、入力しやすい値が必要だ。"
  },
  {
    "start": 9406856,
    "end": 9408112,
    "text": "パイプラインの出番だ。"
  },
  {
    "start": 9408128,
    "end": 9416752,
    "text": "人間が読み取り可能な値を渡すことができ、入力が渡された後はすべての前処理が自動的に行われるため、非常に便利である。"
  },
  {
    "start": 9416928,
    "end": 9423352,
    "text": "一方、ここではそんなことはどうでもよくて、ただ単に競技のためだけのようなものだからだ。"
  },
  {
    "start": 9423408,
    "end": 9424004,
    "text": "そうだね。"
  },
  {
    "start": 9426184,
    "end": 9430980,
    "text": "よし、上位7％に入った。"
  },
  {
    "start": 9431052,
    "end": 9432764,
    "text": "それは本当にいいところだと思う。"
  },
  {
    "start": 9432924,
    "end": 9434372,
    "text": "他に質問はある？"
  },
  {
    "start": 9434428,
    "end": 9443824,
    "text": "ここからまた質問が続くようなら、少し待ってもいいよ。"
  },
  {
    "start": 9444124,
    "end": 9445184,
    "text": "私はそう思う。"
  },
  {
    "start": 9447044,
    "end": 9449784,
    "text": "ああ、説明は問題ない。"
  },
  {
    "start": 9450284,
    "end": 9454064,
    "text": "他にも試せることがあると思う。"
  },
  {
    "start": 9454834,
    "end": 9457546,
    "text": "つまり、一番いいのはコンペティションだと思う。"
  },
  {
    "start": 9457610,
    "end": 9462294,
    "text": "実用的なモデルができたら、他の人のノートブックを見て回り、彼らが何をしているのか試してみるべきだ。"
  },
  {
    "start": 9462954,
    "end": 9473410,
    "text": "特に、より高度なディープラーニングの競技会では、自分では思いつかないようなクレイジーな戦略を打ち出す人がいるからね。"
  },
  {
    "start": 9473562,
    "end": 9482014,
    "text": "実際の大会では、互いに学び合い、互いの戦略を実践し合うことが多い。"
  },
  {
    "start": 9483094,
    "end": 9492794,
    "text": "最終的に勝つのは、皆のテクニックをアンサンブル的にうまく使った人だ。"
  },
  {
    "start": 9495054,
    "end": 9504750,
    "text": "そうだね、つまり、僕の経験では、コンペティションにおける本当のコツはアンサンブルであり、パフォーマンス全般をモデル化することだと思う。"
  },
  {
    "start": 9504942,
    "end": 9517634,
    "text": "問題を見る多くの異なる方法を使い、それらを意味のある方法で組み合わせることで、1つのモデルを使うよりもはるかに優れた予測ができるようになる。"
  },
  {
    "start": 9518534,
    "end": 9523822,
    "text": "よし、これでライブストリームは終了だ。"
  },
  {
    "start": 9523958,
    "end": 9525606,
    "text": "ご視聴ありがとうございました。"
  },
  {
    "start": 9525710,
    "end": 9527994,
    "text": "これからも時々、このようなことをすると思う。"
  },
  {
    "start": 9528654,
    "end": 9535406,
    "text": "また、新しいライブラリーを探検するような、より深い内容のビデオも公開する予定だ。"
  },
  {
    "start": 9535510,
    "end": 9538114,
    "text": "市販モデルでもやってみようと思う。"
  },
  {
    "start": 9539014,
    "end": 9543314,
    "text": "このチャンネルへの推薦があれば、下のコメント欄に書き込んでください。"
  },
  {
    "start": 9544694,
    "end": 9547114,
    "text": "見てくれてありがとう。"
  },
  {
    "start": 9548494,
    "end": 9549234,
    "text": "そうだ。"
  },
  {
    "start": 9549894,
    "end": 9551126,
    "text": "あ、もうひとつ質問があります。"
  },
  {
    "start": 9551190,
    "end": 9558070,
    "text": "では、コードを複数のファイル、例えば前処理とモデル作成に分ける際のベストプラクティスは何でしょうか？"
  },
  {
    "start": 9558182,
    "end": 9561434,
    "text": "サイズが大きい場合は別のファイルに入れるべきですか？"
  },
  {
    "start": 9562604,
    "end": 9564584,
    "text": "ああ、いい質問だね。"
  },
  {
    "start": 9568244,
    "end": 9571304,
    "text": "私はビッグデータの経験があまりない。"
  },
  {
    "start": 9571764,
    "end": 9573424,
    "text": "一種の怪物だ。"
  },
  {
    "start": 9574044,
    "end": 9582356,
    "text": "Yamlは多くのデータを保存するのに適していると聞いている。"
  },
  {
    "start": 9582500,
    "end": 9583572,
    "text": "よくわからないけどね。"
  },
  {
    "start": 9583708,
    "end": 9587304,
    "text": "それについても調べて、ビデオを作るつもりだ。"
  },
  {
    "start": 9588634,
    "end": 9589370,
    "text": "オーケー、でもそうだね。"
  },
  {
    "start": 9589402,
    "end": 9591242,
    "text": "また後で会おう"
  },
  {
    "start": 9591418,
    "end": 9593754,
    "text": "平和を見てくれて本当にありがとう。"
  }
]