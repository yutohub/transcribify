[
  {
    "start": 240,
    "end": 1022,
    "text": "どうしたんだ、みんな？"
  },
  {
    "start": 1078,
    "end": 1694,
    "text": "お帰りなさい。"
  },
  {
    "start": 1734,
    "end": 4750,
    "text": "今日のビデオでは、データ・サイエンスの全プロセスを紹介する。"
  },
  {
    "start": 4822,
    "end": 7382,
    "text": "完全なデータ分析を完了させるつもりだ。"
  },
  {
    "start": 7478,
    "end": 9510,
    "text": "まずはデータセットを調べることから始めよう。"
  },
  {
    "start": 9542,
    "end": 18686,
    "text": "データを前処理し、カスタム機能を設計し、それらをすべてトレーニングし、そしてモデルのパフォーマンスを評価する。"
  },
  {
    "start": 18830,
    "end": 23270,
    "text": "ハイパー・パラメーター・チューニングなど、より高度なものも紹介するつもりだ。"
  },
  {
    "start": 23342,
    "end": 30996,
    "text": "このビデオはデータサイエンスと機械学習の初心者を対象にしているが、申し上げたように、より高度な概念も紹介する。"
  },
  {
    "start": 31060,
    "end": 35028,
    "text": "データサイエンスや機械学習に興味のある人なら誰でも楽しめると思う。"
  },
  {
    "start": 35076,
    "end": 36504,
    "text": "さっそく本題に入ろう。"
  },
  {
    "start": 45404,
    "end": 49220,
    "text": "さて、このビデオでは、事前に必要な前提条件がいくつかあるだけだ。"
  },
  {
    "start": 49292,
    "end": 52604,
    "text": "最初に必要なのは、ipythonノートブックが動く環境だ。"
  },
  {
    "start": 52684,
    "end": 59730,
    "text": "Jupyterノートブックでもいいし、Jupyterlabでもいいし、対コードやPycharmの中のipythonノートブックでもいい。"
  },
  {
    "start": 59762,
    "end": 73162,
    "text": "なぜなら、データサイエンスを行う場合、全プロセスを経て、探索を行い、前処理を行い、フィーチャーエンジニアリングを行い、すべてのことを分割して行いたいからです。"
  },
  {
    "start": 73298,
    "end": 77066,
    "text": "新しいものを追加するたびに、このような手順を踏むのは避けたい。"
  },
  {
    "start": 77090,
    "end": 79954,
    "text": "私たちが探検をしたいのなら、探検は終了だ。"
  },
  {
    "start": 79994,
    "end": 83418,
    "text": "私たちは、前処理でも何でもするために結果を続けたい。"
  },
  {
    "start": 83466,
    "end": 87346,
    "text": "私たちは、私たちがコード化した次のことをするためだけにすべてを実行したくない。"
  },
  {
    "start": 87370,
    "end": 91426,
    "text": "セルで作業したいのですが、これはipythonノートブックの中で可能です。"
  },
  {
    "start": 91450,
    "end": 94954,
    "text": "私はこのチャンネルで複数のビデオを持っていて、それらを使った方法を紹介している。"
  },
  {
    "start": 94994,
    "end": 96514,
    "text": "Jupyterlabについてのビデオがあります。"
  },
  {
    "start": 96554,
    "end": 98842,
    "text": "普通のJupyterノートブックについてのビデオがあります。"
  },
  {
    "start": 98938,
    "end": 101842,
    "text": "グーグル・コラボのビデオもあるので、そちらもチェックしてみてほしい。"
  },
  {
    "start": 101858,
    "end": 105974,
    "text": "そもそもJupyterノートブックやipythonノートブックが何なのかを知らないのであれば。"
  },
  {
    "start": 106434,
    "end": 110218,
    "text": "次に必要なのは、基本的なデータ・サイエンス・スタックだ。"
  },
  {
    "start": 110266,
    "end": 115290,
    "text": "基本的なデータ・サイエンス・ライブラリが必要で、コマンドラインのPiPからインストールできる。"
  },
  {
    "start": 115322,
    "end": 123970,
    "text": "これらはnumpyであり、pandasであり、Matplotlibであり、Seabournであり、Scikitであり、learnである。"
  },
  {
    "start": 124002,
    "end": 129294,
    "text": "今日はニューラルネットワークを使うつもりはないので、tensorflowやkerasなどは必要ない。"
  },
  {
    "start": 129994,
    "end": 133362,
    "text": "それだけで十分だ。"
  },
  {
    "start": 133418,
    "end": 136146,
    "text": "新しいモジュールが出てきたら、後で追加するつもりだ。"
  },
  {
    "start": 136170,
    "end": 143030,
    "text": "これらは、主要な機械学習、伝統的な機械学習、データサイエンスのライブラリであるモジュールだ。"
  },
  {
    "start": 143142,
    "end": 144710,
    "text": "それが基本的に必要なことだ。"
  },
  {
    "start": 144742,
    "end": 146110,
    "text": "これで終わりにしよう"
  },
  {
    "start": 146182,
    "end": 151886,
    "text": "このビデオで使用するデータセットは、Kaggleのカリフォルニア住宅価格データセットです。"
  },
  {
    "start": 152030,
    "end": 154446,
    "text": "下の説明にリンクがあります。"
  },
  {
    "start": 154510,
    "end": 158006,
    "text": "もし忘れなければ、もし忘れても、この上のURLを見てくれればいい。"
  },
  {
    "start": 158150,
    "end": 164902,
    "text": "座標、年齢の中央値、総部屋数、総寝室数、人口などだ。"
  },
  {
    "start": 164998,
    "end": 171776,
    "text": "基本的には、住宅のエリアがあり、そしてターゲット変数があり、それは住宅価格の中央値である。"
  },
  {
    "start": 171840,
    "end": 173536,
    "text": "これは後退作業になりそうだ。"
  },
  {
    "start": 173560,
    "end": 177256,
    "text": "私たちは、他のすべての特徴に基づいて家の価値を予測しようと思っています。"
  },
  {
    "start": 177280,
    "end": 182880,
    "text": "ベッドルームの総面積、コーディネートされた部屋の総面積、そういったものを、海に近いところで見るんだ。"
  },
  {
    "start": 182912,
    "end": 186804,
    "text": "そして、家の価値を予測する。"
  },
  {
    "start": 187224,
    "end": 188328,
    "text": "それが基本的な考え方だ。"
  },
  {
    "start": 188376,
    "end": 191800,
    "text": "そのためには、データセットをダウンロードする必要がある。"
  },
  {
    "start": 191952,
    "end": 198124,
    "text": "プログラミング・ニューラル9のPythonカレント・ディレクトリに保存する。"
  },
  {
    "start": 198204,
    "end": 200844,
    "text": "これはアーカイブZIPになる。"
  },
  {
    "start": 200884,
    "end": 206244,
    "text": "これを開いて、取り出すことができる。"
  },
  {
    "start": 206284,
    "end": 209184,
    "text": "7つのzipファイルをここに解凍する。"
  },
  {
    "start": 209724,
    "end": 212464,
    "text": "これがこの住宅CSVファイルです。"
  },
  {
    "start": 212844,
    "end": 218580,
    "text": "次にすることは、もう一度ターミナルを開き、このディレクトリに移動することだ。"
  },
  {
    "start": 218612,
    "end": 234296,
    "text": "デスクトップに移動して、Pythonのneural nineをプログラミングする。"
  },
  {
    "start": 234480,
    "end": 236912,
    "text": "ここではJupyterlabを起動してみる。"
  },
  {
    "start": 236968,
    "end": 240256,
    "text": "を使えば、ipythonノートブック環境を起動するだけでいい。"
  },
  {
    "start": 240360,
    "end": 241440,
    "text": "私はJupyterlabが好きだ。"
  },
  {
    "start": 241472,
    "end": 243004,
    "text": "これをここに走らせる。"
  },
  {
    "start": 243424,
    "end": 245136,
    "text": "これが地元で始まることになる。"
  },
  {
    "start": 245160,
    "end": 246736,
    "text": "ブラウザで開きます。"
  },
  {
    "start": 246800,
    "end": 251624,
    "text": "そうすれば、このディレクトリに新しいipythonノートブックを作ることができる。"
  },
  {
    "start": 251664,
    "end": 256136,
    "text": "ここをクリックすれば、データ分析を始めることができる。"
  },
  {
    "start": 256200,
    "end": 277924,
    "text": "まず最初に、pandas、SPD numpy S and P、matplotlib、Pyplot、splt seaborne s snsなどの基本的なライブラリをいくつかインポートします。"
  },
  {
    "start": 278764,
    "end": 285828,
    "text": "これから行うのは、data equals PDと言い、read underscore CSVとする。"
  },
  {
    "start": 285876,
    "end": 290540,
    "text": "をノートブックに読み込みます。"
  },
  {
    "start": 290612,
    "end": 294564,
    "text": "デフォルトのセパレーターはカンマだと思う。"
  },
  {
    "start": 294604,
    "end": 296076,
    "text": "もうコンマだと思う。"
  },
  {
    "start": 296140,
    "end": 296764,
    "text": "そうだね。"
  },
  {
    "start": 296924,
    "end": 300764,
    "text": "そうでなければ、おそらくsepかdelimiterのどちらかを指定しなければならないだろう。"
  },
  {
    "start": 300804,
    "end": 309380,
    "text": "pandasのキーワードが何なのかよくわからないが、カンマを使っているので、このまま読み込めば、dataと入力するだけですでにデータを見ることができる。"
  },
  {
    "start": 309452,
    "end": 311932,
    "text": "ここに座標があるのがわかるだろう。"
  },
  {
    "start": 311948,
    "end": 312756,
    "text": "終わりにしよう。"
  },
  {
    "start": 312780,
    "end": 316436,
    "text": "左側には座標、年齢の中央値、総部屋数がある。"
  },
  {
    "start": 316460,
    "end": 321964,
    "text": "機能についても、そうあるべきだと思う。"
  },
  {
    "start": 322004,
    "end": 323004,
    "text": "ああ、ありますよ。"
  },
  {
    "start": 323084,
    "end": 323804,
    "text": "そうだ。"
  },
  {
    "start": 323924,
    "end": 327084,
    "text": "ブロック内の総部屋数。"
  },
  {
    "start": 327124,
    "end": 328524,
    "text": "地図上にブロックがあるのか？"
  },
  {
    "start": 328564,
    "end": 330532,
    "text": "そうだと思う。"
  },
  {
    "start": 330588,
    "end": 334064,
    "text": "これはカリフォルニアの地図上のエリアだと思う。"
  },
  {
    "start": 334864,
    "end": 336976,
    "text": "これは全機能に当てはまるのか？"
  },
  {
    "start": 337000,
    "end": 337296,
    "text": "私はそう思う。"
  },
  {
    "start": 337320,
    "end": 339992,
    "text": "ブロック内の総人口。"
  },
  {
    "start": 340088,
    "end": 343484,
    "text": "ああ、それがここでやっていることの基本的な考え方だ。"
  },
  {
    "start": 344864,
    "end": 346256,
    "text": "ここに数字がある。"
  },
  {
    "start": 346280,
    "end": 349224,
    "text": "この数字を使って全員をトレーニングするんだ。"
  },
  {
    "start": 349264,
    "end": 351352,
    "text": "住宅価格の中央値を予測したい。"
  },
  {
    "start": 351408,
    "end": 353544,
    "text": "これがターゲット変数になる。"
  },
  {
    "start": 353704,
    "end": 356216,
    "text": "その他はすべて入力機能として使うつもりだ。"
  },
  {
    "start": 356240,
    "end": 358964,
    "text": "この値を予測するために、それらを使おうというわけだ。"
  },
  {
    "start": 360104,
    "end": 365376,
    "text": "そのため、ここで掲げている目標のために、すでにいくつかの問題が起きている。"
  },
  {
    "start": 365400,
    "end": 369984,
    "text": "まず第一に、この海の近さだ。"
  },
  {
    "start": 370024,
    "end": 374336,
    "text": "どんなモデルであれ、私たちはこれらの言葉をそのまま自分たちのモデルに取り入れることはできない。"
  },
  {
    "start": 374400,
    "end": 385688,
    "text": "サポートベクトル分類器、ランダムフォレスト分類器、決定木、ニューラルネットワークの場合、テキストをただカテゴリーとしてネットワークに送り込むことはできない。"
  },
  {
    "start": 385736,
    "end": 388248,
    "text": "少なくとも、この変数を前処理する必要がある。"
  },
  {
    "start": 388296,
    "end": 392184,
    "text": "他のものは、おそらく規模を拡大する必要があるようだ。"
  },
  {
    "start": 392564,
    "end": 395500,
    "text": "もう少し探索を続けよう。"
  },
  {
    "start": 395572,
    "end": 401156,
    "text": "また、nullでないか、実際にnull値があるかどうかを確認するために、データ情報を言うこともできる。"
  },
  {
    "start": 401180,
    "end": 409844,
    "text": "ほとんどのフィーチャーが20,640個のnullでない値を持っていることがわかる。"
  },
  {
    "start": 409924,
    "end": 413868,
    "text": "ここでやろうとしていることは、欠落している値がそれほど多くないからだ。"
  },
  {
    "start": 413916,
    "end": 417278,
    "text": "ここには200ほどの値が欠けている。"
  },
  {
    "start": 417366,
    "end": 420198,
    "text": "私たちはこのNANのエントリーを取り下げるだけだ。"
  },
  {
    "start": 420246,
    "end": 422474,
    "text": "NANはnot a number nanの略。"
  },
  {
    "start": 423014,
    "end": 427074,
    "text": "データ・ドット・ドロップと言えばいい。"
  },
  {
    "start": 427534,
    "end": 432510,
    "text": "これは、NULLでない値だけを含むデータフレームを返します。"
  },
  {
    "start": 432542,
    "end": 437446,
    "text": "これを保存し、実際に適用したい場合は、in place equals trueと言えばいい。"
  },
  {
    "start": 437550,
    "end": 443960,
    "text": "これは、データを \"not \"から \"nand \"に落とし、その結果を再びデータ・オブジェクトに保存する。"
  },
  {
    "start": 444152,
    "end": 454204,
    "text": "ここでもう一度data dot infoとすると、すべての異なるフィーチャーに同じ量のnullでない値があることがわかる。"
  },
  {
    "start": 454664,
    "end": 457024,
    "text": "それが次にやることだ。"
  },
  {
    "start": 457064,
    "end": 464296,
    "text": "これは重要だ。データをトレーニングデータとテストデータに分け、xデータとyデータに分ける。"
  },
  {
    "start": 464400,
    "end": 471920,
    "text": "というのも、ここでやりたいことは、あるデータ・セットですべてをトレーニングし、別のデータ・セットでそれを評価することだからだ。"
  },
  {
    "start": 471952,
    "end": 480840,
    "text": "というのも、モデルがこのデータでうまく機能するかどうかを確認するためには、見たことのないデータが必要だからだ。"
  },
  {
    "start": 480992,
    "end": 484592,
    "text": "我々はすべての値の結果を持っているが、モデルは結果を出す必要はない。"
  },
  {
    "start": 484648,
    "end": 497380,
    "text": "新しいセルを開き、sklearn dot model underscore selectionと入力し、train test splitをインポートする。"
  },
  {
    "start": 497532,
    "end": 503140,
    "text": "実際にトレインテストを行う前に、XとYを定義する必要がある。"
  },
  {
    "start": 503172,
    "end": 509700,
    "text": "なぜなら、train test splitは、XとYをとって、x train Y train X test Y testとするからだ。"
  },
  {
    "start": 509812,
    "end": 511500,
    "text": "まずXとYが必要だ。"
  },
  {
    "start": 511532,
    "end": 516852,
    "text": "つまり、Xはターゲット変数を除いたデータ・フレームであると言いたいのだ。"
  },
  {
    "start": 516908,
    "end": 524514,
    "text": "これはデータ・ドロップであり、ターゲット変数である住宅価格の中央値をドロップする。"
  },
  {
    "start": 525254,
    "end": 531494,
    "text": "列を落とすので、軸は1に等しく、Yは反対になる。"
  },
  {
    "start": 531534,
    "end": 538134,
    "text": "このように家の中央値にしかならない。"
  },
  {
    "start": 538254,
    "end": 544462,
    "text": "Xを表示すると、この1列がないデフォルトのデータフレームであることがわかる。"
  },
  {
    "start": 544598,
    "end": 547670,
    "text": "Yをプリントすると、この1列だけであることがわかる。"
  },
  {
    "start": 547702,
    "end": 570528,
    "text": "パンダシリーズ、この場合、X train X test、Y train y testは、XとYをテストサイズで分割した結果になります。"
  },
  {
    "start": 570696,
    "end": 573512,
    "text": "この値は0.2である。"
  },
  {
    "start": 573688,
    "end": 577000,
    "text": "データの20％は評価用に確保される。"
  },
  {
    "start": 577072,
    "end": 579384,
    "text": "このデータには一切触れない。"
  },
  {
    "start": 579424,
    "end": 581864,
    "text": "そのデータでハイパーパラメーターを調整するつもりはない。"
  },
  {
    "start": 581904,
    "end": 586520,
    "text": "すべてを打ち上げられると確信するまでは、何もするつもりはない。"
  },
  {
    "start": 586552,
    "end": 592856,
    "text": "テストセットは、トレーニングが終わってハイパーパラメーターのチューニングが終わったときに見るものだ。"
  },
  {
    "start": 592880,
    "end": 595960,
    "text": "私は自分のモデルを持っているし、今、自信を持ってモデルを発表している。"
  },
  {
    "start": 595992,
    "end": 597960,
    "text": "テストデータで評価したい。"
  },
  {
    "start": 598032,
    "end": 600288,
    "text": "そのためにテストデータを使うのだ。"
  },
  {
    "start": 600456,
    "end": 604784,
    "text": "全過程を終える前に、これ以上見るつもりはない。"
  },
  {
    "start": 604864,
    "end": 611530,
    "text": "今は訓練データだけを使うことにして、たぶんそれを検証用に、訓練セットと検証セットに分けることになるだろう。"
  },
  {
    "start": 611562,
    "end": 614618,
    "text": "これについては、もう少し後に見てみよう。"
  },
  {
    "start": 614746,
    "end": 625810,
    "text": "今やりたいことは、トレーニング・データ、xトレーニング・データ、yトレーニング・データを再び結合して、基本的な相関関係を分析することだ。"
  },
  {
    "start": 625882,
    "end": 630074,
    "text": "ここで私たちにできることは、xと言うこともできるし、実はxではない、申し訳ない。"
  },
  {
    "start": 630154,
    "end": 635068,
    "text": "アンダースコアのデータはx trainである。"
  },
  {
    "start": 635116,
    "end": 638664,
    "text": "Yトレインで合流できるようにすればいいと思う。"
  },
  {
    "start": 639404,
    "end": 647464,
    "text": "次に、再び結合されたデータ・フレームを持つが、これはテスト用、つまりトレーニング・データ用だけである。"
  },
  {
    "start": 647964,
    "end": 653516,
    "text": "これは、数値的な特徴の基本的な探索ができるということだ。"
  },
  {
    "start": 653540,
    "end": 655428,
    "text": "海の近さは含まれない。"
  },
  {
    "start": 655476,
    "end": 665614,
    "text": "例えば、データを訓練し、ドットヒストグラムを作成してヒストグラムを得るか、あるいは個々の特徴の分布について複数のヒストグラムを得ることができます。"
  },
  {
    "start": 665654,
    "end": 668954,
    "text": "固定サイズもパスできるようにすべきだと思う。"
  },
  {
    "start": 669814,
    "end": 671594,
    "text": "うまくいくかどうか見てみよう。"
  },
  {
    "start": 673014,
    "end": 673654,
    "text": "そうだ。"
  },
  {
    "start": 673694,
    "end": 677326,
    "text": "様々な機能の配分を見ることができる。"
  },
  {
    "start": 677390,
    "end": 681974,
    "text": "さらに興味深いのは、ターゲット変数との相関関係だろう。"
  },
  {
    "start": 682014,
    "end": 685430,
    "text": "これからSNSヒートマップと呼ぶ。"
  },
  {
    "start": 685462,
    "end": 688836,
    "text": "ヒートマップを使って相関行列を視覚化する。"
  },
  {
    "start": 688950,
    "end": 693824,
    "text": "実際には、train, underscore data dot coreと言えばいい。"
  },
  {
    "start": 693864,
    "end": 696696,
    "text": "これは相関ヒートマップを作成する関数である。"
  },
  {
    "start": 696720,
    "end": 699840,
    "text": "プロットする前に、これがどんなものかお見せしよう。"
  },
  {
    "start": 699872,
    "end": 702632,
    "text": "私たちはデータコアを鍛えることができる。"
  },
  {
    "start": 702768,
    "end": 712824,
    "text": "この相関行列を見ると、どの特徴もそれ自身との相関が1、つまり毎回まったく同じ値であることがわかる。"
  },
  {
    "start": 712904,
    "end": 716650,
    "text": "そうすれば、特徴の組み合わせに対する他の相関関係を見ることができる。"
  },
  {
    "start": 716832,
    "end": 721302,
    "text": "これをヒートマップにプロットする。"
  },
  {
    "start": 721358,
    "end": 726350,
    "text": "アノテーションをtrueに設定することで、実際の相関関係を見ることができる。"
  },
  {
    "start": 726462,
    "end": 739994,
    "text": "カラーマップは黄色、緑、青、そしてPLTのフィックスサイズは15、8とする。"
  },
  {
    "start": 740574,
    "end": 741594,
    "text": "そうだ。"
  },
  {
    "start": 742074,
    "end": 747874,
    "text": "興味深いのは、住宅価格の中央値との相関関係だ。"
  },
  {
    "start": 747954,
    "end": 754858,
    "text": "あるブロックの所得中央値と住宅価格の中央値には、かなり高い相関関係、あるいはかなり強い相関関係があることがわかる。"
  },
  {
    "start": 754906,
    "end": 757546,
    "text": "これは非常に興味深い変数だ。"
  },
  {
    "start": 757570,
    "end": 759974,
    "text": "これは家の価値を予測する大きな材料となる。"
  },
  {
    "start": 760314,
    "end": 767258,
    "text": "そうすると、たとえば緯度と住宅価格には負の相関があることがわかる。"
  },
  {
    "start": 767386,
    "end": 771154,
    "text": "これは座標の座標の一部分である。"
  },
  {
    "start": 771734,
    "end": 773878,
    "text": "探検はここまでだ。"
  },
  {
    "start": 773926,
    "end": 776070,
    "text": "その気になれば、もっと探検することもできる。"
  },
  {
    "start": 776102,
    "end": 778774,
    "text": "データを見て慣れておくだけでもいい。"
  },
  {
    "start": 778854,
    "end": 783686,
    "text": "さて、これから前処理に入りますが、先ほど見たように、ここにはたくさんの歪んだ特徴があります。"
  },
  {
    "start": 783710,
    "end": 789478,
    "text": "総部屋数、総寝室数、人口、世帯数はかなり偏っている。"
  },
  {
    "start": 789566,
    "end": 794654,
    "text": "統計学では、視覚的には左寄りだが、右寄りだと言うのだと思う。"
  },
  {
    "start": 794694,
    "end": 798952,
    "text": "適切な表現はライトスキューだと思うが、100％の確信があるわけではない。"
  },
  {
    "start": 799048,
    "end": 800600,
    "text": "データが偏っているのがわかるだろう。"
  },
  {
    "start": 800632,
    "end": 803400,
    "text": "きれいなガウス型のベルカーブではない。"
  },
  {
    "start": 803512,
    "end": 811824,
    "text": "これらの特徴量に対して何をするかというと、特徴量の対数を取って、それを使って分布がどうなっているかを見るのだ。"
  },
  {
    "start": 811864,
    "end": 819752,
    "text": "列車データ、総客室数はNPと同じになる。"
  },
  {
    "start": 819928,
    "end": 827216,
    "text": "numpyロックトレインのデータ、総客室数。"
  },
  {
    "start": 827240,
    "end": 832724,
    "text": "ゼロ値を防ぐために、1＋1にする。"
  },
  {
    "start": 833464,
    "end": 835336,
    "text": "これを4回コピーする。"
  },
  {
    "start": 835400,
    "end": 839444,
    "text": "これをトータルベッドルームに置き換えるんだ。"
  },
  {
    "start": 843224,
    "end": 854014,
    "text": "そして、人口があり、世帯がある。"
  },
  {
    "start": 858354,
    "end": 859338,
    "text": "そうだ。"
  },
  {
    "start": 859506,
    "end": 867854,
    "text": "これを実行し、再び訓練データ、ヒストグラムのサイズを15、8とすることができる。"
  },
  {
    "start": 868474,
    "end": 874554,
    "text": "これで、ガウス型のベルカーブのように見えるのがわかるだろう。"
  },
  {
    "start": 874594,
    "end": 879784,
    "text": "ロック正規分布は、この4つの特徴に当てはまるようだ。"
  },
  {
    "start": 881804,
    "end": 888020,
    "text": "今できること、そして今すべきことは、このオーシャン・プロキシミティ機能を使うことだ。"
  },
  {
    "start": 888132,
    "end": 901060,
    "text": "というのも、私は今、人間として、海岸に近いほうがより望ましい地域だから価格が高く、内陸に近いほうが価格が低いのだろうと思っている。"
  },
  {
    "start": 901092,
    "end": 902140,
    "text": "これは私の推測に過ぎない。"
  },
  {
    "start": 902172,
    "end": 905336,
    "text": "それが本当かどうかはわからないが、この機能が無関係だとは思わない。"
  },
  {
    "start": 905460,
    "end": 906496,
    "text": "我々はそれを使うつもりだ。"
  },
  {
    "start": 906520,
    "end": 909044,
    "text": "ここではこのような使い方はできない。"
  },
  {
    "start": 909504,
    "end": 910924,
    "text": "私たちはそれを使いたい。"
  },
  {
    "start": 911304,
    "end": 914440,
    "text": "まず数値にしなければならない。"
  },
  {
    "start": 914592,
    "end": 918896,
    "text": "カテゴリカルな特徴の場合、順序符号化しない方が理にかなっていることが多い。"
  },
  {
    "start": 918920,
    "end": 920408,
    "text": "ただ数字を与えるだけではいけない。"
  },
  {
    "start": 920496,
    "end": 927896,
    "text": "例えば、この値を1、この値を2、この値を3とするのではなく、ホットエンコードするのだ。"
  },
  {
    "start": 927920,
    "end": 937558,
    "text": "をカテゴリに変換し、個々のカテゴリ値をバイナリに設定し、0か1のバイナリ特徴量に変換する。"
  },
  {
    "start": 937606,
    "end": 938838,
    "text": "それはどういう意味だろう？"
  },
  {
    "start": 938886,
    "end": 944870,
    "text": "つまり、電車のデータ、ドット、何だっけ？"
  },
  {
    "start": 944902,
    "end": 970418,
    "text": "海洋、海洋近接、海洋近接、ドットの値カウント、値カウントと呼ぶことができます。ここにこれらのカテゴリがあるのがわかりますが、ただそれらを取り出して番号を割り当てるのではなく、これからやることは、それらの一つ一つに新しいフィーチャーを作成し、この値に1か0を与えることです。"
  },
  {
    "start": 970586,
    "end": 974786,
    "text": "これは機能であり、イエスかノーかのどちらかである。"
  },
  {
    "start": 974850,
    "end": 983894,
    "text": "これは、海から1時間以内の場所にある場合、「はい」は10、「いいえ」は10を表す機能である。"
  },
  {
    "start": 984674,
    "end": 988746,
    "text": "そのためには、PDがダミーを獲得すると言うだけだ。"
  },
  {
    "start": 988810,
    "end": 991974,
    "text": "これは、pandasから使用しているホットエンコーディングのひとつである。"
  },
  {
    "start": 992014,
    "end": 994046,
    "text": "scikitにはlearnというホットなエンコーディングもある。"
  },
  {
    "start": 994070,
    "end": 995310,
    "text": "これがパンダでのやり方だ。"
  },
  {
    "start": 995342,
    "end": 998262,
    "text": "ダミーを呼べと言うだけで、そのカテゴリーに合格するんだ。"
  },
  {
    "start": 998318,
    "end": 1006314,
    "text": "この場合、アンダースコアのデータとオーシャン・プロキシミティをトレーニングする。"
  },
  {
    "start": 1008654,
    "end": 1013542,
    "text": "そしてこれが今年も返され、我々の鉄道データと結合される。"
  },
  {
    "start": 1013598,
    "end": 1016934,
    "text": "ただ単に、トレインデータと言っていいと思う。"
  },
  {
    "start": 1017014,
    "end": 1017470,
    "text": "参加しよう。"
  },
  {
    "start": 1017502,
    "end": 1018074,
    "text": "十分だ。"
  },
  {
    "start": 1018924,
    "end": 1019500,
    "text": "そうだ。"
  },
  {
    "start": 1019532,
    "end": 1032404,
    "text": "今、私たちはこれらのカテゴリーを持っており、私たちはそれを複数の機能に変えたので、その後、ただ海に近づけるだけです。"
  },
  {
    "start": 1032564,
    "end": 1033684,
    "text": "ということだ。"
  },
  {
    "start": 1033764,
    "end": 1037784,
    "text": "もちろん、これを列車データに保存する必要がある。"
  },
  {
    "start": 1038324,
    "end": 1039092,
    "text": "そうだ。"
  },
  {
    "start": 1039188,
    "end": 1040544,
    "text": "また印刷すればいい"
  },
  {
    "start": 1040884,
    "end": 1044196,
    "text": "では、実際にこれらの値の相関関係を見ることもできる。"
  },
  {
    "start": 1044220,
    "end": 1054100,
    "text": "実際にこのヒートマップを使って、値がどのように相関しているか、これらの新しい特徴がターゲット変数とどのように相関しているかを見るために、もう一度やってみることができる。"
  },
  {
    "start": 1054132,
    "end": 1058140,
    "text": "例えば、これは何だろう？"
  },
  {
    "start": 1058172,
    "end": 1058988,
    "text": "住宅価格の中央値。"
  },
  {
    "start": 1059036,
    "end": 1060892,
    "text": "内陸とは負の相関がある。"
  },
  {
    "start": 1060948,
    "end": 1069628,
    "text": "内陸部であれば、家の値段はもっと安くなる。"
  },
  {
    "start": 1069796,
    "end": 1075514,
    "text": "海から1時間以内であれば、同じことが言える。"
  },
  {
    "start": 1075674,
    "end": 1078082,
    "text": "これは通常、高めの価格となる。"
  },
  {
    "start": 1078218,
    "end": 1081374,
    "text": "さらに便利な機能がたくさんある。"
  },
  {
    "start": 1083034,
    "end": 1088794,
    "text": "また、すでに持っている機能を組み合わせて新しい機能を作りたい場合もある。"
  },
  {
    "start": 1088914,
    "end": 1090738,
    "text": "だから、例えば、何かあるかもしれない。"
  },
  {
    "start": 1090786,
    "end": 1093890,
    "text": "これは、フィーチャー・エンジニアリングの部分まで私たちを導いてくれる。"
  },
  {
    "start": 1094042,
    "end": 1099842,
    "text": "あるいは、フィーチャー・エンジニアリングをする前に、非常に興味深いことをひとつお見せしましょう。"
  },
  {
    "start": 1099978,
    "end": 1101986,
    "text": "座標を視覚化してみよう。"
  },
  {
    "start": 1102010,
    "end": 1103778,
    "text": "次のように言おう。"
  },
  {
    "start": 1103826,
    "end": 1105954,
    "text": "Plt、dot、figure。"
  },
  {
    "start": 1105994,
    "end": 1122082,
    "text": "近接度や個々のブロックの位置が価格設定にどのような影響を与えるかを見ていただくために、15、8という固定サイズを割り当てます。"
  },
  {
    "start": 1122138,
    "end": 1124210,
    "text": "ここで言いたいのは、SNSだ。"
  },
  {
    "start": 1124242,
    "end": 1126074,
    "text": "我々は海上輸送を使うつもりだ。"
  },
  {
    "start": 1126154,
    "end": 1127894,
    "text": "散布図ということにしよう。"
  },
  {
    "start": 1128664,
    "end": 1132524,
    "text": "X座標は緯度になる。"
  },
  {
    "start": 1133184,
    "end": 1135804,
    "text": "Y座標は経度になる。"
  },
  {
    "start": 1136544,
    "end": 1138304,
    "text": "こう発音してほしい。"
  },
  {
    "start": 1138344,
    "end": 1139204,
    "text": "よく分からない。"
  },
  {
    "start": 1139904,
    "end": 1142324,
    "text": "であれば、データそのものが訓練データとなる。"
  },
  {
    "start": 1143304,
    "end": 1144584,
    "text": "色だ。"
  },
  {
    "start": 1144624,
    "end": 1145200,
    "text": "これは興味深い。"
  },
  {
    "start": 1145232,
    "end": 1151844,
    "text": "色がターゲット変数に設定される。"
  },
  {
    "start": 1152984,
    "end": 1155964,
    "text": "パレットはクールでウォームなものになる。"
  },
  {
    "start": 1157434,
    "end": 1161650,
    "text": "ここに表示されているのは、基本的に、これが住宅価格の中央値である。"
  },
  {
    "start": 1161722,
    "end": 1166146,
    "text": "赤くなればなるほど、その家は高くなる。"
  },
  {
    "start": 1166250,
    "end": 1168666,
    "text": "青ければ青いほど、家の値段は安くなる。"
  },
  {
    "start": 1168690,
    "end": 1176482,
    "text": "これはカリフォルニアの地図ではないが、この下は海岸で、これは海だ。"
  },
  {
    "start": 1176538,
    "end": 1179418,
    "text": "ここでは基本的に内陸部になる。"
  },
  {
    "start": 1179466,
    "end": 1186400,
    "text": "海岸沿い、海に近い、水辺に近い家はすべて割高であることがわかるだろう。"
  },
  {
    "start": 1186552,
    "end": 1189284,
    "text": "これもまた、視覚化するにはいいことだ。"
  },
  {
    "start": 1189704,
    "end": 1192884,
    "text": "ただ、ここで覚えておいてほしいことがある。"
  },
  {
    "start": 1194664,
    "end": 1197232,
    "text": "では、フィーチャー・エンジニアリングに移ろう。"
  },
  {
    "start": 1197288,
    "end": 1203200,
    "text": "単体でも面白い機能がたくさんあるが、それらを組み合わせることもできる。"
  },
  {
    "start": 1203232,
    "end": 1209704,
    "text": "例えば、ここではブロックごとの総客室数と総寝室数があります。"
  },
  {
    "start": 1209824,
    "end": 1216800,
    "text": "さらに興味深い、あるいは少なくとも同様に興味深いのは、1部屋あたりのベッドルームの数だろう。"
  },
  {
    "start": 1216832,
    "end": 1219800,
    "text": "そのうち何室が寝室なのか。"
  },
  {
    "start": 1219912,
    "end": 1221464,
    "text": "これは別の機能にすることができる。"
  },
  {
    "start": 1221544,
    "end": 1243344,
    "text": "寝室比率は、列車データの総寝室数を列車データの総部屋数で割ったものになります。"
  },
  {
    "start": 1244804,
    "end": 1246596,
    "text": "そうすれば、もうひとつ機能を追加することができる。"
  },
  {
    "start": 1246660,
    "end": 1250244,
    "text": "例えば、総部屋数がある。"
  },
  {
    "start": 1250284,
    "end": 1257500,
    "text": "世帯数の多いブロックで、通常より世帯数が多ければ、部屋数も多くなるだろう。"
  },
  {
    "start": 1257532,
    "end": 1263322,
    "text": "その部屋だけでは、必ずしも全体像がわからない。"
  },
  {
    "start": 1263378,
    "end": 1272574,
    "text": "私たちがやりたいことは、列車データ、世帯の部屋数、1世帯あたりの部屋数を知りたいということだ。"
  },
  {
    "start": 1273274,
    "end": 1283414,
    "text": "これは基本的に列車データだけで、総客室数を列車データの世帯数で割ったものだ。"
  },
  {
    "start": 1285834,
    "end": 1292014,
    "text": "さて、もう一度、相関ヒートマップを表示しよう。"
  },
  {
    "start": 1293474,
    "end": 1296730,
    "text": "ターゲット変数と新機能を見ることができる。"
  },
  {
    "start": 1296762,
    "end": 1298922,
    "text": "有意な相関関係があることがわかるだろう。"
  },
  {
    "start": 1298978,
    "end": 1307914,
    "text": "寝室比率は住宅価格と負の相関があり、ブロックごとの住宅価格の中央値を示している。"
  },
  {
    "start": 1308074,
    "end": 1310466,
    "text": "私たちは、それがさらにそうであることを見ることができる。"
  },
  {
    "start": 1310490,
    "end": 1315328,
    "text": "家計はそれ自体、入力変数としてはあまり面白くないことがわかるだろう。"
  },
  {
    "start": 1315376,
    "end": 1321120,
    "text": "目標変数、目標値との相関は0.07である。"
  },
  {
    "start": 1321272,
    "end": 1324984,
    "text": "家庭の部屋の方が面白い。"
  },
  {
    "start": 1325104,
    "end": 1327896,
    "text": "ベッドルームも見える。"
  },
  {
    "start": 1327920,
    "end": 1329936,
    "text": "部屋はあまり面白くない。"
  },
  {
    "start": 1330040,
    "end": 1331904,
    "text": "というか、これは正しくない。"
  },
  {
    "start": 1331944,
    "end": 1332896,
    "text": "これだ。"
  },
  {
    "start": 1332960,
    "end": 1337136,
    "text": "なるほど、部屋は面白いが、ベッドルーム自体は面白くない。"
  },
  {
    "start": 1337320,
    "end": 1340108,
    "text": "寝室比率は非常に興味深い。"
  },
  {
    "start": 1340216,
    "end": 1343824,
    "text": "私たちは、興味深く重要だと思われる2つの機能を設計している。"
  },
  {
    "start": 1345924,
    "end": 1347868,
    "text": "フィーチャーエンジニアリングは以上だ。"
  },
  {
    "start": 1347916,
    "end": 1350004,
    "text": "もちろん、新しい機能を考え出すこともできる。"
  },
  {
    "start": 1350044,
    "end": 1351068,
    "text": "機能を落とすことができる。"
  },
  {
    "start": 1351116,
    "end": 1357620,
    "text": "ターゲット変数との相関がゼロに近い特徴を取り除いた方が、モデルが良くなることがよくある。"
  },
  {
    "start": 1357732,
    "end": 1358812,
    "text": "ここでそれをするつもりはない。"
  },
  {
    "start": 1358828,
    "end": 1360380,
    "text": "すべての値を使うつもりだ。"
  },
  {
    "start": 1360492,
    "end": 1363572,
    "text": "今やりたいことは、複数のモデルをトレーニングすることだ。"
  },
  {
    "start": 1363628,
    "end": 1367548,
    "text": "私たちが訓練できる最も単純なモデルは、単純な線形回帰です。"
  },
  {
    "start": 1367596,
    "end": 1370890,
    "text": "これは実際の機械学習ですらない。"
  },
  {
    "start": 1370922,
    "end": 1375294,
    "text": "つまり、機械学習なんだけど、機械学習というよりは統計学に近いんだ。"
  },
  {
    "start": 1375594,
    "end": 1400428,
    "text": "ここで行うことは、Sklearnのドット線形モデルから線形回帰をインポートし、リグレッサーを線形回帰にすることです。"
  },
  {
    "start": 1400476,
    "end": 1402572,
    "text": "そうするには少し早かったかもしれない。"
  },
  {
    "start": 1402588,
    "end": 1407044,
    "text": "我々はここで、元のデータについてデータを分割した。"
  },
  {
    "start": 1407084,
    "end": 1410144,
    "text": "つまり、もう一度やり直さなければならない。"
  },
  {
    "start": 1410484,
    "end": 1416420,
    "text": "列車テストの分割をやり直す必要はないが、XYの分割はやり直さなければならない。"
  },
  {
    "start": 1416452,
    "end": 1421092,
    "text": "モデルを評価するために、これらの新しい特徴をテストデータに加えなければならない。"
  },
  {
    "start": 1421228,
    "end": 1429928,
    "text": "ここでは、Xトレイン、Yトレインをトレインデータのドットドロップとする。"
  },
  {
    "start": 1430016,
    "end": 1432644,
    "text": "ターゲット変数をもう一度落とす。"
  },
  {
    "start": 1432944,
    "end": 1454304,
    "text": "住宅価格の中央値Xが1、Yが1、またはYの特徴が住宅価格の中央値である。"
  },
  {
    "start": 1457124,
    "end": 1462124,
    "text": "ここで、rec dot fitを行い、X列車Y列車でフィッティングする。"
  },
  {
    "start": 1462164,
    "end": 1465252,
    "text": "さて、お気づきの方も多いと思うが、データのスケーリングは行っていない。"
  },
  {
    "start": 1465308,
    "end": 1467076,
    "text": "これは私たちがやるべきことだ。"
  },
  {
    "start": 1467220,
    "end": 1468744,
    "text": "データを拡大縮小すべきだ。"
  },
  {
    "start": 1469564,
    "end": 1474908,
    "text": "試しに、テストデータでどの程度のパフォーマンスが出るか見てみよう。"
  },
  {
    "start": 1474956,
    "end": 1479286,
    "text": "そのためには、もう終わったことだから、ここでこうしよう。"
  },
  {
    "start": 1479310,
    "end": 1482094,
    "text": "線形回帰のパラメータ・チューニングをするつもりはない。"
  },
  {
    "start": 1482214,
    "end": 1491406,
    "text": "そして、もう1つのモデル、ランダムフォレスト・リグレッサーのパフォーマンスを確認し、ハイパー・パラメーター・チューニングを行います。"
  },
  {
    "start": 1491430,
    "end": 1494094,
    "text": "これについては、すぐに評価するだけだ。"
  },
  {
    "start": 1494254,
    "end": 1502656,
    "text": "ここでまず必要なのは、前述したように、テストデータを使って、トレーニングデータと同じプロセスを踏むことだ。"
  },
  {
    "start": 1502830,
    "end": 1514204,
    "text": "しかし、基本的には列車データで行ったことをすべて行うつもりだ。"
  },
  {
    "start": 1514244,
    "end": 1516184,
    "text": "まずはこれをコピーする。"
  },
  {
    "start": 1516684,
    "end": 1518744,
    "text": "ここに貼り付けます。"
  },
  {
    "start": 1519284,
    "end": 1533184,
    "text": "もちろん、実際のプロジェクトで大規模なデータ分析を行うのであれば、私が今やっているようにコピーペーストや変更を手作業で行うのではなく、関数を使ってデータを入力し、すべてを自動的に処理したいだろう。"
  },
  {
    "start": 1533954,
    "end": 1538254,
    "text": "とても簡単なプロジェクトなので、今すぐここでやってみよう。"
  },
  {
    "start": 1539154,
    "end": 1551058,
    "text": "ここと、ここと、ここも取るつもりだ。"
  },
  {
    "start": 1551186,
    "end": 1553402,
    "text": "それだけだと思う。"
  },
  {
    "start": 1553578,
    "end": 1557298,
    "text": "あとは訓練データをテストデータに変えるだけだ。"
  },
  {
    "start": 1557346,
    "end": 1558694,
    "text": "テストデータ。"
  },
  {
    "start": 1559694,
    "end": 1566566,
    "text": "ここも、ここも、ここも、あそこも。"
  },
  {
    "start": 1566670,
    "end": 1567342,
    "text": "ここもそうだ。"
  },
  {
    "start": 1567398,
    "end": 1568342,
    "text": "ここもそうだ。"
  },
  {
    "start": 1568518,
    "end": 1569174,
    "text": "ここもそうだ。"
  },
  {
    "start": 1569214,
    "end": 1569742,
    "text": "ここもそうだ。"
  },
  {
    "start": 1569798,
    "end": 1570662,
    "text": "それもそうだ。"
  },
  {
    "start": 1570838,
    "end": 1572854,
    "text": "そしてもちろん、ここでも。"
  },
  {
    "start": 1572894,
    "end": 1576074,
    "text": "x test, join ytest."
  },
  {
    "start": 1577734,
    "end": 1581510,
    "text": "それなら、箱から出してすぐに使えると思う。"
  },
  {
    "start": 1581582,
    "end": 1586496,
    "text": "問題は、今、僕らが島を持っていることだ。"
  },
  {
    "start": 1586520,
    "end": 1589280,
    "text": "この島には、ごくわずかしか例がない。"
  },
  {
    "start": 1589432,
    "end": 1596924,
    "text": "もし、テストデータの中に島のカテゴリーが1つもないということがランダムに起こるなら、私たちは島のカテゴリーを持つことになる。"
  },
  {
    "start": 1597224,
    "end": 1601344,
    "text": "カラムがないので、トレーニングデータと同じフォーマットにはならない。"
  },
  {
    "start": 1601384,
    "end": 1609856,
    "text": "この場合、テストデータを印刷する場合、つまり実際にテストデータを印刷している場合、16列あると思います。"
  },
  {
    "start": 1609880,
    "end": 1615086,
    "text": "列車データで行くと、同様に16列ある。"
  },
  {
    "start": 1615230,
    "end": 1616526,
    "text": "それが機能する。"
  },
  {
    "start": 1616710,
    "end": 1623478,
    "text": "xのテストとyのテストの点数を \"rec dot score \"と呼べばいいのだ。"
  },
  {
    "start": 1623526,
    "end": 1624794,
    "text": "それが可能であることを願っている。"
  },
  {
    "start": 1625494,
    "end": 1626734,
    "text": "それは不可能だ。"
  },
  {
    "start": 1626814,
    "end": 1627750,
    "text": "なぜですか？"
  },
  {
    "start": 1627902,
    "end": 1631838,
    "text": "1時間未満の海では、文字列をfloatに変換できませんでした。"
  },
  {
    "start": 1631886,
    "end": 1633154,
    "text": "まだあるかな。"
  },
  {
    "start": 1634294,
    "end": 1636154,
    "text": "私たちにはまだそれがあるのだろうか？"
  },
  {
    "start": 1637214,
    "end": 1638198,
    "text": "ああ、理由はわかっている。"
  },
  {
    "start": 1638246,
    "end": 1640554,
    "text": "問題は、私たちがこれを持っているということだ。"
  },
  {
    "start": 1641574,
    "end": 1646062,
    "text": "プロセスが終わった後にもう一度ここでやるんだが、ここではやらない。"
  },
  {
    "start": 1646078,
    "end": 1648582,
    "text": "ここでもそうする必要がある。"
  },
  {
    "start": 1648638,
    "end": 1661154,
    "text": "xテスト、yテストはここではテストデータとテストデータである。"
  },
  {
    "start": 1661974,
    "end": 1668974,
    "text": "というのも、このブロックのコードをもう一度実行すると、問題が発生しそうだからだ。"
  },
  {
    "start": 1669994,
    "end": 1671714,
    "text": "これは現在、X列車、Y列車である。"
  },
  {
    "start": 1671754,
    "end": 1672778,
    "text": "バカバカしい。"
  },
  {
    "start": 1672866,
    "end": 1674130,
    "text": "もう一度やろう。"
  },
  {
    "start": 1674282,
    "end": 1676334,
    "text": "ここではxが欲しい。"
  },
  {
    "start": 1677314,
    "end": 1678690,
    "text": "今度は間違ってコピーしてしまった。"
  },
  {
    "start": 1678722,
    "end": 1679090,
    "text": "さあ、行こう。"
  },
  {
    "start": 1679122,
    "end": 1680050,
    "text": "今は混乱している。"
  },
  {
    "start": 1680162,
    "end": 1681978,
    "text": "もう一度だけ言わせてくれ。"
  },
  {
    "start": 1682026,
    "end": 1683034,
    "text": "我々はそれを受け取るつもりだ。"
  },
  {
    "start": 1683074,
    "end": 1684770,
    "text": "新しいセルを開けるんだ。"
  },
  {
    "start": 1684882,
    "end": 1686774,
    "text": "これをここに貼り付ける。"
  },
  {
    "start": 1687634,
    "end": 1689810,
    "text": "列車をテストに変更するつもりだ。"
  },
  {
    "start": 1689882,
    "end": 1691814,
    "text": "列車をテストに変更するつもりだ。"
  },
  {
    "start": 1692134,
    "end": 1696434,
    "text": "電車を乗り換えてテストに行く。"
  },
  {
    "start": 1696814,
    "end": 1698514,
    "text": "ここにもある。"
  },
  {
    "start": 1699894,
    "end": 1704634,
    "text": "というのも、正直なところ、信じられないからだ。"
  },
  {
    "start": 1705054,
    "end": 1706314,
    "text": "でも、私たちにはそれがある。"
  },
  {
    "start": 1706614,
    "end": 1710034,
    "text": "他に何かやらかしたのでなければね。"
  },
  {
    "start": 1710814,
    "end": 1716446,
    "text": "Xトレインも15列になったのですか？"
  },
  {
    "start": 1716470,
    "end": 1718146,
    "text": "よし、これで互換性があるはずだ。"
  },
  {
    "start": 1718310,
    "end": 1719402,
    "text": "うまくいくかどうか見てみよう。"
  },
  {
    "start": 1719458,
    "end": 1719914,
    "text": "そうだ。"
  },
  {
    "start": 1719954,
    "end": 1725658,
    "text": "スコアは0.668で、悪くはないが良くもない。"
  },
  {
    "start": 1725746,
    "end": 1731290,
    "text": "ランダムフォレストリグレッサーを使えば、もっといいスコアが出るはずだ。"
  },
  {
    "start": 1731322,
    "end": 1735570,
    "text": "これは最も単純なモデルで、特徴を持つデータに対して単純な線形回帰を行うだけである。"
  },
  {
    "start": 1735762,
    "end": 1738098,
    "text": "まず、データをスケールアップすることに意味があるかもしれない。"
  },
  {
    "start": 1738146,
    "end": 1740346,
    "text": "おそらく森林リグレッサーのためにそうするつもりだ。"
  },
  {
    "start": 1740370,
    "end": 1742458,
    "text": "データを拡大縮小するとどうなるか見てみよう。"
  },
  {
    "start": 1742506,
    "end": 1749694,
    "text": "例えば、SKからドットの前処理を学び、標準的なスカラーをインポートする。"
  },
  {
    "start": 1750394,
    "end": 1770694,
    "text": "スカラーは標準スカラーとし、X列車S、Y列車sとする。"
  },
  {
    "start": 1773034,
    "end": 1775146,
    "text": "ということは、x訓練sで訓練したい。"
  },
  {
    "start": 1775170,
    "end": 1781322,
    "text": "通常、出力を拡大縮小する必要はない。"
  },
  {
    "start": 1781458,
    "end": 1788730,
    "text": "ああ、実はこれは2度うまくいかないので、やるべきではなかったのだが、今となってはコードを台無しにするべきではなかったと思う。"
  },
  {
    "start": 1788762,
    "end": 1794534,
    "text": "xテストsはスカラー変換xテストになる。"
  },
  {
    "start": 1796254,
    "end": 1803614,
    "text": "しかし、通常はデータをスケーリングしたいものだ。"
  },
  {
    "start": 1803774,
    "end": 1809526,
    "text": "では次に、ランダムフォレスト・リグレッサーについて説明しよう。"
  },
  {
    "start": 1809550,
    "end": 1813566,
    "text": "これはより強力なモデルで、ハイパー・パラメーター・チューニングも行うつもりだ。"
  },
  {
    "start": 1813590,
    "end": 1815734,
    "text": "最適なモデルを見つけようと思っている。"
  },
  {
    "start": 1815854,
    "end": 1820574,
    "text": "そのために、sklearn dot ensembleを使う。"
  },
  {
    "start": 1820654,
    "end": 1826788,
    "text": "これは機械学習の特殊なタイプで、異なるモデル（この場合は決定木）を組み合わせる。"
  },
  {
    "start": 1826956,
    "end": 1830764,
    "text": "ここでは、ランダムフォレスト分類器を作るとする。"
  },
  {
    "start": 1830804,
    "end": 1835940,
    "text": "フォレスト（森）イコール、あ、すみません、ランダムフォレスト分類器ではなく、回帰です。"
  },
  {
    "start": 1835972,
    "end": 1845180,
    "text": "ランダムフォレスト・リグレッサーは、forest equal random forest regressorとし、デフォルトで試してみる。"
  },
  {
    "start": 1845212,
    "end": 1858044,
    "text": "ここでは、forest fit x train, y trainとし、次にforest score x test, y testとする。"
  },
  {
    "start": 1858464,
    "end": 1860096,
    "text": "トレーニングには時間がかかる。"
  },
  {
    "start": 1860160,
    "end": 1864164,
    "text": "すでに81％を獲得していることがわかるだろう。"
  },
  {
    "start": 1864984,
    "end": 1876596,
    "text": "パラメータ・グリッドを用意し、さまざまなオプションを試すことで、より高い精度が得られることを期待している。"
  },
  {
    "start": 1876680,
    "end": 1880108,
    "text": "そのためにクロスバリデーションによるグリッドサーチを使う。"
  },
  {
    "start": 1880156,
    "end": 1890820,
    "text": "クロスバリデーションとは、データをk個のフォールド（kは数値）に分割し、1つのフォールドを除いてデータを訓練し、1つのフォールドを評価に使用することである。"
  },
  {
    "start": 1890892,
    "end": 1896864,
    "text": "10回のフォールドがあれば、9回をトレーニングに使い、1回をテストに使う。"
  },
  {
    "start": 1897164,
    "end": 1903504,
    "text": "次に、この1回の反復実行で使用したパラメーターを評価する。"
  },
  {
    "start": 1904074,
    "end": 1912994,
    "text": "その前に、スケーリングによって改善されるかどうか試してみましょう。"
  },
  {
    "start": 1913034,
    "end": 1915754,
    "text": "前処理をする必要はない。"
  },
  {
    "start": 1915794,
    "end": 1921186,
    "text": "列車Sとテストs（拡大縮小版）を送り込めばよい。"
  },
  {
    "start": 1921210,
    "end": 1926734,
    "text": "ここで81％以上、つまり0.81点を獲得できるかどうか見てみよう。"
  },
  {
    "start": 1927354,
    "end": 1932968,
    "text": "以前は4点ではなく3点だったが、ここではあまり変わらない。"
  },
  {
    "start": 1933096,
    "end": 1938484,
    "text": "先に言っておくと、skはドットモデルの選択を学ぶ。"
  },
  {
    "start": 1938984,
    "end": 1943976,
    "text": "ここからグリッドサーチ、CVグリッドサーチクロスバリデーションをインポートしたい。"
  },
  {
    "start": 1944120,
    "end": 1946680,
    "text": "そのためには、パラメータ・グリッドを用意する必要がある。"
  },
  {
    "start": 1946712,
    "end": 1948164,
    "text": "param grid."
  },
  {
    "start": 1949184,
    "end": 1953376,
    "text": "ここで、試したいさまざまなハイパーパラメーターを指定する。"
  },
  {
    "start": 1953440,
    "end": 1962490,
    "text": "1つは推定パラメーターのことで、ここでは3つのリストを渡すことができる。"
  },
  {
    "start": 1962522,
    "end": 1963346,
    "text": "よく分からない。"
  },
  {
    "start": 1963490,
    "end": 1966494,
    "text": "例えば310と30だ。"
  },
  {
    "start": 1969034,
    "end": 1977034,
    "text": "それなら、最大機能の2468を試すことができる。"
  },
  {
    "start": 1977074,
    "end": 1980770,
    "text": "最小サンプルの分割もあると思う。"
  },
  {
    "start": 1980802,
    "end": 1991476,
    "text": "というのも、グリッド付きのパラメーター・グリップを提供した場合、これが何をするかというと、すべての組み合わせでクロス検証を行うことになるからだ。"
  },
  {
    "start": 1991500,
    "end": 1996924,
    "text": "は、2つの最大特徴で3つの推定量を試し、4つの最大特徴で3つの推定量を試す、といった具合である。"
  },
  {
    "start": 1997004,
    "end": 2000740,
    "text": "そして、10個の最大値、2個の最大値を持つ10個の推定量と表示される。"
  },
  {
    "start": 2000812,
    "end": 2002836,
    "text": "それはすべての組み合わせを通過することになる。"
  },
  {
    "start": 2002940,
    "end": 2005860,
    "text": "もう1つ追加すると、これも組み合わされる。"
  },
  {
    "start": 2005892,
    "end": 2009220,
    "text": "ここでのトレーニング時間には多すぎるだろう。"
  },
  {
    "start": 2009332,
    "end": 2024574,
    "text": "グリッド検索は、先ほど定義したグリッド・パラメータを持つフォレスト・リグレッサーのグリッド検索CVを、5フォールド・クロス・バリデーションで行う。"
  },
  {
    "start": 2025274,
    "end": 2035050,
    "text": "採点は負の平均二乗誤差に基づいて行われる。"
  },
  {
    "start": 2035242,
    "end": 2040294,
    "text": "二乗誤差はその逆である。"
  },
  {
    "start": 2040994,
    "end": 2055854,
    "text": "そして、このグリッド検索をx trainに当てはめ、すぐにスケール・データでトレーニングする。"
  },
  {
    "start": 2055894,
    "end": 2058486,
    "text": "xトレイン、sトレイン、yトレイン。"
  },
  {
    "start": 2058550,
    "end": 2063854,
    "text": "これはグリッド検索をこのデータに当てはめるもので、おそらく時間がかかるだろう。"
  },
  {
    "start": 2063894,
    "end": 2068462,
    "text": "私が話し終わるまでに終わらない限り、その部分は飛ばすつもりだ。"
  },
  {
    "start": 2068558,
    "end": 2070478,
    "text": "これで最適なモデルが得られる。"
  },
  {
    "start": 2070566,
    "end": 2081550,
    "text": "最適な推定量、最適なリグレッサーを取得し、この最適なリグレッサーをテストデータに対してスコアリングするために使用します。"
  },
  {
    "start": 2081662,
    "end": 2093070,
    "text": "さて、1つ気づいたことがある。それは、おそらく意味があるということだ。違いがあるかどうかはわからないが、フォレストを新しいランダムフォレスト回帰因子として定義し直すことは、おそらく意味がある。"
  },
  {
    "start": 2093182,
    "end": 2096142,
    "text": "そして、もう一度これを実行し、その結果を見てみよう。"
  },
  {
    "start": 2096238,
    "end": 2109428,
    "text": "グリッドサーチが終わったら、グリッドサーチドットベストアンダースコア推定量アンダースコアと言えば、最適なハイパーパラメーターが得られる。"
  },
  {
    "start": 2109476,
    "end": 2113644,
    "text": "これで、この最良の推定器が実際に良い結果を生むかどうかをチェックできる。"
  },
  {
    "start": 2113724,
    "end": 2120300,
    "text": "常にそうとは限らないので、実際に悪くなったり、あまり変わらなかったりすることもあるが、より良い結果を生むことの方が多い。"
  },
  {
    "start": 2120372,
    "end": 2121780,
    "text": "今あるものを見てみよう。"
  },
  {
    "start": 2121892,
    "end": 2134620,
    "text": "このベスト・フォレストをベスト・フォレスト・ドット・スコアと呼ぶことにする。"
  },
  {
    "start": 2134812,
    "end": 2137988,
    "text": "この場合、実際により悪いパフォーマンスを得ることになる。"
  },
  {
    "start": 2138116,
    "end": 2139732,
    "text": "前述したように、これは起こりうることだ。"
  },
  {
    "start": 2139908,
    "end": 2140956,
    "text": "普通はそうではない。"
  },
  {
    "start": 2140980,
    "end": 2143924,
    "text": "通常、ハイパーのパラメーターを調整すると、より良い結果が得られる。"
  },
  {
    "start": 2144004,
    "end": 2149636,
    "text": "パラメータ・グリッドにもっと多くのものを追加することで、これを改善できるかもしれない。"
  },
  {
    "start": 2149660,
    "end": 2153180,
    "text": "例えば、ここでは30がベストであることがわかる。"
  },
  {
    "start": 2153212,
    "end": 2159034,
    "text": "これを30→50→100に変更できるかもしれない。"
  },
  {
    "start": 2159334,
    "end": 2161190,
    "text": "最大機能は8つだった。"
  },
  {
    "start": 2161222,
    "end": 2167886,
    "text": "また、最大数は812 20とかにしておこう。"
  },
  {
    "start": 2167990,
    "end": 2174262,
    "text": "その後、ミニサンプルを分割して2468を提供することもできるだろう。"
  },
  {
    "start": 2174318,
    "end": 2181436,
    "text": "時間がかかりそうだが、もう一度実行して、より良い推定値が見つかるかどうか見てみよう。"
  },
  {
    "start": 2181550,
    "end": 2185040,
    "text": "そのため、パラメータ・グリッドには異なる値を指定することになる。"
  },
  {
    "start": 2185072,
    "end": 2193352,
    "text": "scikit learnのランダムフォレストリグレッサーのドキュメントを見ると、n estimatorsパラメータのデフォルトは100であることがわかります。"
  },
  {
    "start": 2193408,
    "end": 2199792,
    "text": "デフォルトでは100本の決定木を使用する。"
  },
  {
    "start": 2199888,
    "end": 2203384,
    "text": "これはデフォルトの設定で、100本の木を使う。"
  },
  {
    "start": 2203424,
    "end": 2207744,
    "text": "30本の木を使った私たちのバージョンよりも成績が良く、30本が最大でもあった。"
  },
  {
    "start": 2207784,
    "end": 2210932,
    "text": "これは、ハイパー・パラメーター・チューニングについても知っておく必要があることだ。"
  },
  {
    "start": 2210988,
    "end": 2219364,
    "text": "パラメータ・グリッドを提供し、あるパラメータの最適値が最大値か最小値のどちらかである場合、その方向にもっと踏み込んだ方がいいかもしれない。"
  },
  {
    "start": 2219404,
    "end": 2233396,
    "text": "もし、50から5000までの値があり、最適な値が50か5000であれば、その方向にもっと進んだ方がいいかもしれない。なぜなら、最適な値がパラメータグリッドにない可能性があるからだ。"
  },
  {
    "start": 2233420,
    "end": 2236542,
    "text": "の場合、推定量は30であり、これが最大であった。"
  },
  {
    "start": 2236668,
    "end": 2239834,
    "text": "また、100のデフォルトの方がパフォーマンスが良いこともわかる。"
  },
  {
    "start": 2239874,
    "end": 2243698,
    "text": "これを100 200 300に変えることができる。"
  },
  {
    "start": 2243786,
    "end": 2248514,
    "text": "また、最大フィーチャーは、チューニングに最も役立つパラメーターではないかもしれない。"
  },
  {
    "start": 2248554,
    "end": 2254066,
    "text": "少なくとも私がランダムフォレストのリグレッサーを扱うときは、最小サンプル分割のようなものを調整するのが普通だ。"
  },
  {
    "start": 2254090,
    "end": 2257734,
    "text": "1つのノートをスプリットするには何サンプル必要ですか？"
  },
  {
    "start": 2258474,
    "end": 2260730,
    "text": "私の知る限り、デフォルトでは2つになっている。"
  },
  {
    "start": 2260762,
    "end": 2261934,
    "text": "調べてみよう。"
  },
  {
    "start": 2262734,
    "end": 2264486,
    "text": "デフォルトでは2つである。"
  },
  {
    "start": 2264550,
    "end": 2266190,
    "text": "ええ、でも私たちは別のものを提供できます。"
  },
  {
    "start": 2266222,
    "end": 2269822,
    "text": "デフォルトは2だが、例えば4とすることもできる。"
  },
  {
    "start": 2269958,
    "end": 2273390,
    "text": "そうであれば、ツリーの最大深度も言えるかもしれない。"
  },
  {
    "start": 2273422,
    "end": 2275514,
    "text": "木はどこまで伸びるのか？"
  },
  {
    "start": 2276174,
    "end": 2280326,
    "text": "デフォルトではそのような制限はないが、指定することもできる。"
  },
  {
    "start": 2280350,
    "end": 2287598,
    "text": "デフォルトで \"none \"を指定し、次に4つとか8つとか指定することもできる。"
  },
  {
    "start": 2287686,
    "end": 2288918,
    "text": "そうしたら、もう一度実行できる。"
  },
  {
    "start": 2289006,
    "end": 2300786,
    "text": "例えば、深さの最適な数字が8であることがわかれば、他の数字がより良いのか、あるいは基本的に制限はないので何もないのかもしれない。"
  },
  {
    "start": 2300890,
    "end": 2305034,
    "text": "最適な推定器の数が300であることがわかれば、さらに探索を進めるかもしれない。"
  },
  {
    "start": 2305154,
    "end": 2308614,
    "text": "では、このパラメータ・グリッド検索を実行してみよう。"
  },
  {
    "start": 2309674,
    "end": 2314938,
    "text": "さて、このグリッド検索にはかなり時間がかかったので、ここで最適なモデルを見てみよう。"
  },
  {
    "start": 2314986,
    "end": 2324130,
    "text": "grid search dot best estimatorと表示され、200に等しいn個の推定量が最適であるようです。"
  },
  {
    "start": 2324162,
    "end": 2326494,
    "text": "ちょうど真ん中でよかった。"
  },
  {
    "start": 2326994,
    "end": 2331282,
    "text": "ここではデフォルト値の2が使われ、ここではデフォルト値のnoneも使われた。"
  },
  {
    "start": 2331338,
    "end": 2334386,
    "text": "具体的に明記されていないからわかるだろう。"
  },
  {
    "start": 2334490,
    "end": 2337810,
    "text": "パラメータについて言及されていなければ、それは単なるデフォルトだ。"
  },
  {
    "start": 2338002,
    "end": 2355280,
    "text": "グリッド・サーチ、最良推定スコア、x train、no x test、Sy testとすると、81.435%。"
  },
  {
    "start": 2355312,
    "end": 2355552,
    "text": "4人だ。"
  },
  {
    "start": 2355608,
    "end": 2357936,
    "text": "それでもデフォルトよりは悪い。"
  },
  {
    "start": 2358040,
    "end": 2360096,
    "text": "ああ、これはよくあることだ。"
  },
  {
    "start": 2360120,
    "end": 2363176,
    "text": "そうではなくて、これはフルプロジェクトなんだ。"
  },
  {
    "start": 2363240,
    "end": 2374544,
    "text": "これは、Kaggleから住宅価格のデータセットを取得し、探索を行い、前処理エンジニアリングの特徴を行い、スケーリングし、モデルを構築し、評価する。"
  },
  {
    "start": 2374664,
    "end": 2376024,
    "text": "今なら続けることができる。"
  },
  {
    "start": 2376064,
    "end": 2377960,
    "text": "ロジスティック回帰ができる。"
  },
  {
    "start": 2378032,
    "end": 2379856,
    "text": "つまり、これは分類であって、分類ではないんだ。"
  },
  {
    "start": 2379880,
    "end": 2384560,
    "text": "サポートベクトル分類器を使ってもいいし、単純な決定木を使ってもいい。"
  },
  {
    "start": 2384592,
    "end": 2387880,
    "text": "ニューラルネットワークを訓練しようと思えばできる。"
  },
  {
    "start": 2387912,
    "end": 2396080,
    "text": "また、さまざまな機能を設計してみたり、機能を削除してみたり、すべてのクオリティを向上させることができると思うことは何でもできる。"
  },
  {
    "start": 2396112,
    "end": 2397328,
    "text": "その辺は遊んでください。"
  },
  {
    "start": 2397376,
    "end": 2398632,
    "text": "必ず何かを学べるはずだ。"
  },
  {
    "start": 2398688,
    "end": 2400262,
    "text": "それはあなたをより優れたデータサイエンティストにする。"
  },
  {
    "start": 2400328,
    "end": 2406650,
    "text": "これは、Pythonによる完全なデータサイエンス、機械学習プロジェクト、または分析です。"
  },
  {
    "start": 2406762,
    "end": 2408082,
    "text": "今日のビデオはここまで。"
  },
  {
    "start": 2408138,
    "end": 2410178,
    "text": "楽しんでいただけたなら、そして何かを学んでいただけたなら幸いだ。"
  },
  {
    "start": 2410266,
    "end": 2414082,
    "text": "もしそうなら、「いいね！」ボタンを押して、下のコメント欄にコメントを残してください。"
  },
  {
    "start": 2414138,
    "end": 2419442,
    "text": "もちろん、このチャンネルに登録し、通知ベルを押して、今後のビデオを無料で見逃さないようにすることもお忘れなく。"
  },
  {
    "start": 2419538,
    "end": 2420954,
    "text": "それ以外は、ご視聴ありがとうございました。"
  },
  {
    "start": 2420994,
    "end": 2422714,
    "text": "では、また次のビデオで。"
  }
]