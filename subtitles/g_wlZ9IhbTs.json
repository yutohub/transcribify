[
  {
    "start": 730,
    "end": 1566,
    "text": "こんにちは、そしてようこそ。"
  },
  {
    "start": 1668,
    "end": 11470,
    "text": "Mcodingのジェームス・マーフィーです。今日はPythonのdef main if name mainイディオムについて、そしてなぜあなたがすべてのスクリプトでこれを使うべきなのかについてお話しします。"
  },
  {
    "start": 11810,
    "end": 14314,
    "text": "まず第一に、すべてのファイルがスクリプトというわけではない。"
  },
  {
    "start": 14442,
    "end": 18250,
    "text": "スクリプトというのは、実行しようとするファイルのことで、ライブラリのことではない。"
  },
  {
    "start": 18330,
    "end": 24978,
    "text": "このような、別のファイルにインポートする関数を定義するだけのものは、このイディオムの恩恵を受けることはないだろう。"
  },
  {
    "start": 25034,
    "end": 34790,
    "text": "CやJavaのようなほとんどの言語には、最も基本的な関数を書くのに必要な、一種の定型的な設定がある。"
  },
  {
    "start": 34940,
    "end": 42666,
    "text": "Javaは、プログラマーがその使い方を学ぶ前に最初に目にするものとして、public static void、mainstream argsがあることで悪名高い。"
  },
  {
    "start": 42848,
    "end": 45126,
    "text": "パイソンでは、もっと簡単なようだ。"
  },
  {
    "start": 45158,
    "end": 47500,
    "text": "必要なのはprint hello worldと言うだけだ。"
  },
  {
    "start": 47950,
    "end": 57040,
    "text": "このビデオが終わるまでに、皆さんに納得していただきたいのは、このdef main if name mainというイディオムは、単に物事を行に書き出すよりも、本当に好むべきだということです。"
  },
  {
    "start": 57410,
    "end": 61470,
    "text": "さて、本当に手っ取り早く、もしよく知らないなら、この変数名は何だろう？"
  },
  {
    "start": 62290,
    "end": 70530,
    "text": "ターミナルなどからスクリプトを実行すると、name変数がこのダブル・アンダースコア・メイン・ダブル・アンダースコアであることがわかる。"
  },
  {
    "start": 71350,
    "end": 74500,
    "text": "ファイルをインポートすると、何か違うものが表示される。"
  },
  {
    "start": 75030,
    "end": 81320,
    "text": "この場合、ダブルアンダースコアの名前はifnameパッケージのimport meで名前を表示することがわかる。"
  },
  {
    "start": 82570,
    "end": 87494,
    "text": "この動作の違いによって、ファイルがスクリプトとして実行されているかどうかをチェックすることができる。"
  },
  {
    "start": 87612,
    "end": 94250,
    "text": "ダンダー・メインと表示されていれば、スクリプトとして実行されている。"
  },
  {
    "start": 95390,
    "end": 102086,
    "text": "スクリプトとして実行するときに実行したいステートメントをすべて、このifブロックに入れることができる。"
  },
  {
    "start": 102198,
    "end": 106640,
    "text": "もう一歩踏み込んで、メイン機能として定義するべきだと思う。"
  },
  {
    "start": 107890,
    "end": 113450,
    "text": "では、あなたのコードがスクリプトとして実行されているのか、インポートされているのかをチェックすればいい。"
  },
  {
    "start": 113530,
    "end": 114478,
    "text": "どうして？"
  },
  {
    "start": 114564,
    "end": 116240,
    "text": "なぜこんなことをしたいんだ？"
  },
  {
    "start": 116610,
    "end": 119854,
    "text": "イディオムを知らないプログラマーに融通を利かせるためなのか？"
  },
  {
    "start": 119902,
    "end": 122370,
    "text": "それとも、実際にそうする理由があるのだろうか？"
  },
  {
    "start": 122520,
    "end": 124754,
    "text": "まあ、そうだね、もちろんそうする理由はある。"
  },
  {
    "start": 124792,
    "end": 126066,
    "text": "それでは見ていこう。"
  },
  {
    "start": 126248,
    "end": 134134,
    "text": "最初の、そして最も重要な理由は、実は言語そのものとは何の関係もなく、人々がどのようにそれを使うかに関係している。"
  },
  {
    "start": 134332,
    "end": 143580,
    "text": "たしかに、ifnameを使えば、あなたのコードが実行されているのか、インポートされているのかをチェックすることができる。"
  },
  {
    "start": 144190,
    "end": 149900,
    "text": "ifnameは、このファイルがスクリプトであり、実行できることを知らせるために使われる。"
  },
  {
    "start": 150510,
    "end": 157230,
    "text": "あるファイルを見て、mainという名前がなければ、それを実行することはできない、あるいは実行すべきではないと考える。"
  },
  {
    "start": 157300,
    "end": 161870,
    "text": "ライブラリーのつもりなのか、それとも輸入するためだけのものなのかと思わせる。"
  },
  {
    "start": 162530,
    "end": 168882,
    "text": "Python言語では実際にこれを強制するものはありませんが、アンダースコアを変数名として使うのと比較してみてください。"
  },
  {
    "start": 169016,
    "end": 174926,
    "text": "もし誰かのコードにアンダースコアがあったら、彼らは基本的にこの変数を使うつもりはないと言っているのだ。"
  },
  {
    "start": 175118,
    "end": 183160,
    "text": "彼らがそれを使うことを止めることはできませんが、もし使うなら、彼らはパイソンコミュニティの暗黙のルールを破ることになります。"
  },
  {
    "start": 184250,
    "end": 190630,
    "text": "アンダースコアはこの変数を使わないことを意味し、ifnay mainはこれがスクリプトであることを意味する。"
  },
  {
    "start": 191370,
    "end": 192806,
    "text": "読者に推測させ続けてはいけない。"
  },
  {
    "start": 192838,
    "end": 196650,
    "text": "これがプログラムへの入り口となるのであれば、それを明示すればいい。"
  },
  {
    "start": 197150,
    "end": 199782,
    "text": "Pycharmのような多くのエディターは、これをシグナルとして使う。"
  },
  {
    "start": 199846,
    "end": 206480,
    "text": "左のファイルには \"hello \"を実行するという緑の矢印があるが、右には緑の矢印がない。"
  },
  {
    "start": 206930,
    "end": 208874,
    "text": "それはピシャルムが信号を知っているからだ。"
  },
  {
    "start": 208922,
    "end": 212030,
    "text": "メインという名前なら、これは私が走らせたいものだ。"
  },
  {
    "start": 212180,
    "end": 216898,
    "text": "いや、メインという名前が意味するものは、おそらくライブラリで、ただ実行するためのものではない。"
  },
  {
    "start": 217064,
    "end": 222210,
    "text": "なぜifブロックに内容を残すのではなく、mainを関数に取り出す必要があるのか？"
  },
  {
    "start": 223030,
    "end": 227540,
    "text": "ある関数を定義し、それを使って何かを計算するスクリプトを紹介しよう。"
  },
  {
    "start": 228470,
    "end": 233510,
    "text": "このコードをネームガードの中に入れても、ここで行うことはすべてグローバル・スコープにある。"
  },
  {
    "start": 233850,
    "end": 239000,
    "text": "特に、この変数Iはグローバル変数である。"
  },
  {
    "start": 239450,
    "end": 245322,
    "text": "ある値を計算する関数を定義して、後でそれをここで使うとする。"
  },
  {
    "start": 245376,
    "end": 252090,
    "text": "このリストに基づいて、この機能の評価を追加しようとしているところだが、誤ってタイプミスをしてしまった。"
  },
  {
    "start": 252430,
    "end": 256366,
    "text": "ここでは変数Iを使っているが、ループ変数の名前はnだった。"
  },
  {
    "start": 256548,
    "end": 261774,
    "text": "コードを実行すると、タイプミスのエラーが表示される代わりに、間違った値が無言で表示される。"
  },
  {
    "start": 261892,
    "end": 267598,
    "text": "これは最悪のエラーのひとつで、しかもすべて同じファイル内でのことだ。"
  },
  {
    "start": 267694,
    "end": 270130,
    "text": "もしこれが別のファイルで起こったとしたら...。"
  },
  {
    "start": 270630,
    "end": 275118,
    "text": "別のファイルやコンソールにある場合は、悪いスクリプトのインポートスターを行う。"
  },
  {
    "start": 275214,
    "end": 278290,
    "text": "私は今、知らなかったグローバル変数Iを持っている。"
  },
  {
    "start": 278440,
    "end": 288070,
    "text": "computeバルブ関数を定義したのがこのファイルだった場合、このファイルはグローバル変数Iを持つことになり、このタイプミスを見つけるのは前回の例よりもさらに難しくなる。"
  },
  {
    "start": 288570,
    "end": 292154,
    "text": "また、if名のメインが全くなかった場合。"
  },
  {
    "start": 292272,
    "end": 295034,
    "text": "スクリプトをインポートするだけで、実際に実行される。"
  },
  {
    "start": 295232,
    "end": 299398,
    "text": "つまり、副作用のないコードをテストすることは基本的に不可能なのだ。"
  },
  {
    "start": 299574,
    "end": 305230,
    "text": "また、コードのインポートが自動的に行われる場合もたくさんある。"
  },
  {
    "start": 305650,
    "end": 312378,
    "text": "このスクリプトは、悪いスクリプトから有用なクラスを明示的にインポートし、それをpickleファイルに書き込みます。"
  },
  {
    "start": 312554,
    "end": 319518,
    "text": "このスクリプトでは、悪いスクリプトについて何も言及されていない。"
  },
  {
    "start": 319614,
    "end": 321650,
    "text": "私たちがやっているのは、ある物体のピックリングを外すことだ。"
  },
  {
    "start": 321720,
    "end": 323410,
    "text": "どこから来たのかもわからない。"
  },
  {
    "start": 323560,
    "end": 331014,
    "text": "しかし、このコードを実行すると、実際に悪いスクリプトをインポートし、そのボディにあったすべてのコードを実行したことがわかる。"
  },
  {
    "start": 331212,
    "end": 337734,
    "text": "これは、有用なクラスの定義を得るために、pickle loadが自動的に悪いスクリプトをインポートしたためである。"
  },
  {
    "start": 337932,
    "end": 345126,
    "text": "ピクルスの場合は、余計なものがプリントアウトされるのがちょっと煩わしいだけだったが、今回はマルチ処理をしている。"
  },
  {
    "start": 345318,
    "end": 349942,
    "text": "目的は、ある入力リストに対してこの有用な関数の値を計算することである。"
  },
  {
    "start": 350086,
    "end": 358798,
    "text": "マルチプロセッシングプールは、このファイルを自動的にインポートする様々な python プロセスを起動する。"
  },
  {
    "start": 358884,
    "end": 361034,
    "text": "これがどのように問題になり始めるか、おわかりいただけるだろう。"
  },
  {
    "start": 361162,
    "end": 366850,
    "text": "ファイルをインポートするだけで、新しいプロセスが起動し、そのプロセスがファイルをインポートするという具合だ。"
  },
  {
    "start": 367000,
    "end": 370002,
    "text": "この場合、マルチプロセッシングはほとんど使えない。"
  },
  {
    "start": 370056,
    "end": 371060,
    "text": "どうなるか見てみよう。"
  },
  {
    "start": 373030,
    "end": 377010,
    "text": "コントロールcで終了させることもできない。"
  },
  {
    "start": 378310,
    "end": 382630,
    "text": "このコードをifnameのmainに入れることで、プロセスの乱発を防ぐことができる。"
  },
  {
    "start": 383130,
    "end": 388760,
    "text": "これを別の関数に入れなければ、Pというグローバル変数ができる。"
  },
  {
    "start": 389290,
    "end": 392354,
    "text": "この頭痛の種を避けるために必要なことは、ただ慣用句を使うことだ。"
  },
  {
    "start": 392402,
    "end": 402220,
    "text": "実際、新規ファイルを作成するときに自動的に入力されるようにエディタを設定するか、メインを入力するときに貼り付けるテンプレートを用意すればいいだけだろう。"
  },
  {
    "start": 403310,
    "end": 412250,
    "text": "main関数を作る最後のあまり使われない理由は、他のスクリプトから使用できるプログラムへのエントリー・ポイントを持つことができるということです。"
  },
  {
    "start": 412330,
    "end": 415006,
    "text": "コマンドラインから実行する必要はない。"
  },
  {
    "start": 415108,
    "end": 421760,
    "text": "別のファイルからこれをインポートし、新しいプロセスを開始することなく、コマンドラインから実行しているかのようにmain関数を呼び出すことができる。"
  },
  {
    "start": 422610,
    "end": 426630,
    "text": "この場合、メインに任意の引数をオプション・パラメーターとして取り込ませることができる。"
  },
  {
    "start": 427450,
    "end": 431170,
    "text": "さて、def main if name mainイディオムについては以上だ。"
  },
  {
    "start": 431250,
    "end": 434040,
    "text": "他に使う理由が見つかったら教えてください。"
  },
  {
    "start": 434490,
    "end": 438454,
    "text": "また、もし使っていないのであれば、その理由も教えてほしい。"
  },
  {
    "start": 438572,
    "end": 442438,
    "text": "いつも通り、パトロンの皆さん、そして私を支えてくれるドナーの皆さんに感謝します。"
  },
  {
    "start": 442604,
    "end": 445686,
    "text": "このビデオが気に入ったら、チャンネル登録と「いいね！」ボタンをお忘れなく。"
  },
  {
    "start": 445788,
    "end": 447080,
    "text": "それではまた次回。"
  },
  {
    "start": 447450,
    "end": 447810,
    "text": "さようなら。"
  }
]