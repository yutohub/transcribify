[
  {
    "start": 330,
    "end": 3658,
    "text": "Pythonのクラスはオブジェクトを作るための設計図のようなものだ。"
  },
  {
    "start": 3754,
    "end": 8202,
    "text": "例えば、ビデオゲームでヘルス、ダメージ、スピードなどの属性を持つキャラクターを作りたいとしよう。"
  },
  {
    "start": 8266,
    "end": 15498,
    "text": "ここにキャラクターというクラスの例があり、この下に戦士と忍者という2種類のキャラクターが作成されている。"
  },
  {
    "start": 15594,
    "end": 20446,
    "text": "Pythonで初めてクラスオブジェクトを作成すると、必ず最初にこのdunder initメソッドが実行される。"
  },
  {
    "start": 20548,
    "end": 24218,
    "text": "このメソッドはオブジェクトを初期化し、入力を処理する。"
  },
  {
    "start": 24314,
    "end": 33778,
    "text": "戦士には100ヘルス、50ダメージ、10スピードが供給され、忍者には80ヘルス、40ダメージ、40スピードが供給されていることがわかるだろう。"
  },
  {
    "start": 33874,
    "end": 38626,
    "text": "self変数は自動的に供給され、常に最初の変数として置かれる。"
  },
  {
    "start": 38738,
    "end": 42150,
    "text": "セルフと呼ぶ必要はないが、これが典型的な命名規則だ。"
  },
  {
    "start": 42230,
    "end": 47254,
    "text": "self変数は、メモリ上の特定のオブジェクトを参照するために使われる。"
  },
  {
    "start": 47382,
    "end": 51622,
    "text": "ここで、戦士のスピードと忍者のスピードをプリントしてみよう。"
  },
  {
    "start": 51686,
    "end": 56030,
    "text": "最初に作成したときに設定した元の値をそれぞれ取得しているのがわかるだろう。"
  },
  {
    "start": 56100,
    "end": 58570,
    "text": "これらのクラスに機能を追加することもできる。"
  },
  {
    "start": 58650,
    "end": 64014,
    "text": "ここではdouble speedというメソッドを追加した。"
  },
  {
    "start": 64052,
    "end": 70446,
    "text": "戦士の倍速をここでやって、戦士のスピードと忍者のスピードをもう一度プリントしよう。"
  },
  {
    "start": 70548,
    "end": 74946,
    "text": "戦士のスピードが2倍になり、忍者のスピードには影響がないことがわかるだろう。"
  },
  {
    "start": 75018,
    "end": 81698,
    "text": "オブジェクト指向プログラミングにおいて、独自の属性を持つ別々のオブジェクトを持つことがいかに便利であるか、お分かりいただけるだろう。"
  },
  {
    "start": 81794,
    "end": 82786,
    "text": "お役に立てたなら幸いだ。"
  },
  {
    "start": 82818,
    "end": 84580,
    "text": "ご視聴ありがとうございました。また次のビデオでお会いしましょう。"
  }
]